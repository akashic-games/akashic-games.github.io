import { CommonSize, Renderer, Surface } from "@akashic/pdi-types";
import { Camera } from "../Camera";
import { E, EParameterObject } from "./E";
/**
 * `CacheableE` のコンストラクタに渡すことができるパラメータ。
 */
export interface CacheableEParameterObject extends EParameterObject {
}
/**
 * 内部描画キャッシュを持つ `E` 。
 */
export declare abstract class CacheableE extends E {
    /**
     * _cache のパディングサイズ。
     *
     * @private
     */
    static PADDING: number;
    /**
     * エンジンが子孫を描画すべきであれば`true`、でなければ`false`を本クラスを継承したクラスがセットする。
     * デフォルト値は`true`となる。
     * @private
     */
    _shouldRenderChildren: boolean;
    /**
     * このエンティティの内部キャッシュ。
     * @private
     */
    _cache: Surface | undefined;
    /**
     * @private
     */
    _renderer: Renderer | undefined;
    /**
     * このエンティティを最後に描画した時の`Camrera`。
     *
     * @private
     */
    _renderedCamera: Camera | undefined;
    /**
     * 描画されるキャッシュサイズ。
     * このサイズは _cache のサイズよりも小さくなる場合がある。
     *
     * @private
     */
    _cacheSize: CommonSize;
    /**
     * 各種パラメータを指定して `CacheableE` のインスタンスを生成する。
     * @param param このエンティティに対するパラメータ
     */
    constructor(param: CacheableEParameterObject);
    /**
     * このエンティティの描画キャッシュ無効化をエンジンに通知する。
     * このメソッドを呼び出し後、描画キャッシュの再構築が行われ、各 `Renderer` に描画内容の変更が反映される。
     */
    invalidate(): void;
    /**
     * このエンティティ自身の描画を行う。
     * このメソッドはエンジンから暗黙に呼び出され、ゲーム開発者が呼び出す必要はない。
     */
    renderSelf(renderer: Renderer, camera?: Camera): boolean;
    /**
     * 内部キャッシュから自身の描画を行う。
     * このメソッドはエンジンから暗黙に呼び出され、ゲーム開発者が呼び出す必要はない。
     */
    renderSelfFromCache(renderer: Renderer): void;
    /**
     * キャッシュの描画が必要な場合にこのメソッドが呼ばれる。
     * 本クラスを継承したエンティティはこのメソッド内で`renderer`に対してキャッシュの内容を描画しなければならない。
     * このメソッドはエンジンから暗黙に呼び出され、ゲーム開発者が呼び出す必要はない。
     */
    abstract renderCache(renderer: Renderer, camera?: Camera): void;
    /**
     * 利用している `Surface` を破棄した上で、このエンティティを破棄する。
     */
    destroy(): void;
    /**
     * キャッシュのサイズを取得する。
     * 本クラスを継承したクラスでエンティティのサイズと異なるサイズを利用する場合、このメソッドをオーバーライドする。
     * このメソッドはエンジンから暗黙に呼び出され、ゲーム開発者が呼び出す必要はない。
     * このメソッドから得られる値を変更した場合、 `this.invalidate()` を呼び出す必要がある。
     */
    calculateCacheSize(): CommonSize;
}
