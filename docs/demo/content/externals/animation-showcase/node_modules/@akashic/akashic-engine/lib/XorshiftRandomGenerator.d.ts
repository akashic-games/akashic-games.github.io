import { RandomGenerator } from "./RandomGenerator";
import { XorshiftSerialization } from "./Xorshift";
/**
 * Xorshiftを用いた乱数生成期。
 */
export declare class XorshiftRandomGenerator extends RandomGenerator {
    private _xorshift;
    static deserialize(ser: XorshiftRandomGeneratorSerialization): XorshiftRandomGenerator;
    constructor(seed: number, xorshift?: XorshiftSerialization);
    /**
     * 乱数を生成する。
     * `min` 以上 `max` 以下の数値を返す。
     *
     * @deprecated 非推奨である。将来的に削除される。代わりに `XorshiftRandomGenerator#generate()` を利用すること。
     */
    get(min: number, max: number): number;
    /**
     * 乱数を生成する。
     * 0 以上 1 未満の数値を返す。
     *
     * ローカルイベントの処理中を除き、原則 `Math.random()` ではなくこのメソッドを利用すること。
     */
    generate(): number;
    serialize(): XorshiftRandomGeneratorSerialization;
}
/**
 * serialize/deserialize用のインターフェース
 */
export interface XorshiftRandomGeneratorSerialization {
    /**
     * @private
     */
    _seed: number;
    /**
     * @private
     */
    _xorshift: XorshiftSerialization;
}
