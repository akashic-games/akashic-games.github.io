import { ImageAsset, Renderer, Surface } from "@akashic/pdi-types";
import { Camera } from "../Camera";
import { Matrix } from "../Matrix";
import { E, EParameterObject } from "./E";
/**
 * `Sprite` のコンストラクタに渡すことができるパラメータ。
 * 各メンバの詳細は `Sprite` の同名メンバの説明を参照すること。
 *
 * 値に `width` または `height` が含まれていない場合、
 * `Sprite` のコンストラクタはそれぞれ `src.width`、 `src.height` が指定されたかのように振る舞う。
 */
export interface SpriteParameterObject extends EParameterObject {
    /**
     * 画像として使う `Surface` または `ImageAsset` 。
     */
    src: Surface | ImageAsset;
    /**
     * `surface` の描画対象部分の幅。
     * 描画はこの値を `this.width` に拡大または縮小する形で行われる。
     * 省略された場合、値に `width` があれば `width` 、なければ `src.width` 。
     * @default width || src.width
     */
    srcWidth?: number;
    /**
     * `surface` の描画対象部分の高さ。
     * 描画はこの値を `this.height` に拡大または縮小する形で行われる。
     * 省略された場合、値に `height` があれば `height` 、なければ `src.height` 。
     * @default height || src.height
     */
    srcHeight?: number;
    /**
     * `surface` の描画対象部分の左端。
     * @default 0
     */
    srcX?: number;
    /**
     * `surface` の描画対象部分の上端。
     * @default 0
     */
    srcY?: number;
}
/**
 * 画像を描画するエンティティ。
 */
export declare class Sprite extends E {
    /**
     * 描画する `Surface` または `ImageAsset` 。
     * `srcX` ・ `srcY` ・ `srcWidth` ・ `srcHeight` の作る矩形がこの画像の範囲外を示す場合、描画結果は保証されない。
     * この値を変更した場合、 `this.invalidate()` を呼び出す必要がある。
     */
    src: Surface | ImageAsset;
    /**
     * `surface` の描画対象部分の幅。
     * 描画はこの値を `this.width` に拡大または縮小する形で行われる。
     * この値を変更した場合、 `this.invalidate()` を呼び出す必要がある。
     */
    srcWidth: number;
    /**
     * `surface` の描画対象部分の高さ。
     * 描画はこの値を `this.height` に拡大または縮小する形で行われる。
     * この値を変更した場合、 `this.invalidate()` を呼び出す必要がある。
     */
    srcHeight: number;
    /**
     * `surface` の描画対象部分の左端。
     * この値を変更した場合、 `this.invalidate()` を呼び出す必要がある。
     */
    srcX: number;
    /**
     * `surface` の描画対象部分の上端。
     * この値を変更した場合、 `this.invalidate()` を呼び出す必要がある。
     */
    srcY: number;
    /**
     * @private
     */
    _surface: Surface;
    /**
     * @private
     */
    _stretchMatrix: Matrix | undefined;
    /**
     * @private
     */
    _beforeSrc: Surface | ImageAsset | undefined;
    /**
     * @private
     */
    _beforeSurface: Surface | undefined;
    /**
     * 各種パラメータを指定して `Sprite` のインスタンスを生成する。
     * @param param `Sprite` に設定するパラメータ
     */
    constructor(param: SpriteParameterObject);
    /**
     * @private
     */
    _handleUpdate(): void;
    /**
     * @private
     */
    _handleAnimationStart(): void;
    /**
     * @private
     */
    _handleAnimationStop(): void;
    /**
     * このエンティティ自身の描画を行う。
     * このメソッドはエンジンから暗黙に呼び出され、ゲーム開発者が呼び出す必要はない。
     */
    renderSelf(renderer: Renderer, _camera?: Camera): boolean;
    /**
     * このエンティティの描画キャッシュ無効化をエンジンに通知する。
     * このメソッドを呼び出し後、描画キャッシュの再構築が行われ、各 `Renderer` に描画内容の変更が反映される。
     */
    invalidate(): void;
    /**
     * このエンティティを破棄する。
     * デフォルトでは利用している `Surface` の破棄は行わない点に注意。
     * @param destroySurface trueを指定した場合、このエンティティが抱える `Surface` も合わせて破棄する
     */
    destroy(destroySurface?: boolean): void;
    private _invalidateSelf;
}
