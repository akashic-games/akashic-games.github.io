import { Trigger } from "@akashic/trigger";
import { Timer } from "./Timer";
/**
 * `Scene#setTimeout` や `Scene#setInterval` の実行単位を表す。
 * ゲーム開発者が本クラスのインスタンスを直接生成することはなく、
 * 本クラスの機能を直接利用することはない。
 */
export declare class TimerIdentifier {
    /**
     * @ignore
     */
    _timer: Timer;
    /**
     * @ignore
     */
    _handler: () => void;
    /**
     * @ignore
     */
    _handlerOwner: any;
    /**
     * @ignore
     */
    _fired: ((c: TimerIdentifier) => void) | undefined;
    /**
     * @ignore
     */
    _firedOwner: any;
    constructor(timer: Timer, handler: () => void, handlerOwner: any, fired?: (c: TimerIdentifier) => void, firedOwner?: any);
    destroy(): void;
    destroyed(): boolean;
    /**
     * @private
     */
    _handleElapse(): void;
}
/**
 * Timerを管理する機構を提供する。
 * ゲーム開発者が本クラスを利用する事はない。
 */
export declare class TimerManager {
    /**
     * @ignore
     */
    _timers: Timer[];
    /**
     * @ignore
     */
    _trigger: Trigger<void>;
    /**
     * @ignore
     */
    _identifiers: TimerIdentifier[];
    /**
     * @ignore
     */
    _fps: number;
    /**
     * @ignore
     */
    _registered: boolean;
    constructor(trigger: Trigger<void>, fps: number);
    destroy(): void;
    destroyed(): boolean;
    /**
     * 定期間隔で処理を実行するTimerを作成する。
     * 本Timerはフレーム経過によって動作する疑似タイマーであるため、実時間の影響は受けない
     * @param interval Timerの実行間隔（ミリ秒）
     * @returns 作成したTimer
     */
    createTimer(interval: number): Timer;
    /**
     * Timerを削除する。
     * @param timer 削除するTimer
     */
    deleteTimer(timer: Timer): void;
    setTimeout(handler: () => void, milliseconds: number, owner?: any): TimerIdentifier;
    clearTimeout(identifier: TimerIdentifier): void;
    setInterval(handler: () => void, interval: number, owner?: any): TimerIdentifier;
    clearInterval(identifier: TimerIdentifier): void;
    /**
     * すべてのTimerを時間経過させる。
     * @private
     */
    _tick(): void;
    /**
     * @private
     */
    _onTimeoutFired(identifier: TimerIdentifier): void;
    /**
     * @private
     */
    _clear(identifier: TimerIdentifier): void;
}
