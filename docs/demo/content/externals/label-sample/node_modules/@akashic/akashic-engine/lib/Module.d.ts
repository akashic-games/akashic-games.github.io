import { Module as PdiModule, ScriptAssetRuntimeValue, ScriptAssetRuntimeValueBase } from "@akashic/pdi-types";
export interface ModuleParameterObject {
    runtimeValueBase: ScriptAssetRuntimeValueBase;
    id: string;
    path: string;
    virtualPath?: string;
    require: (path: string, currentModule?: Module) => any;
}
/**
 * Node.js が提供する module の互換クラス。
 */
export declare class Module implements PdiModule {
    /**
     * モジュールのID。
     * アセットIDとは異なることに注意。
     */
    id: string;
    /**
     * このモジュールのファイル名。
     * フルパスで与えられる。
     */
    filename: string;
    /**
     * このモジュールが公開する値。
     */
    exports: any;
    /**
     * このモジュールの親。一番最初にこのモジュール (のファイル) を require() したモジュール。
     * 該当するモジュールがなければ `null` である。
     */
    parent: Module | null;
    /**
     * このモジュールの読み込みが完了しているか。
     */
    loaded: boolean;
    /**
     * このモジュールが `require()` したモジュール。
     */
    children: Module[];
    /**
     * このモジュール内で `require()` した時の検索先ディレクトリ。
     */
    paths: string[];
    /**
     * このモジュールの評価時に与えられる `require()` 関数。
     */
    require: (path: string) => any;
    /**
     * @private
     */
    _dirname: string;
    /**
     * @private
     */
    _virtualDirname: string | undefined;
    /**
     * @private
     */
    _runtimeValue: ScriptAssetRuntimeValue;
    constructor(param: ModuleParameterObject);
}
