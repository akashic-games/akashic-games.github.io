import { OperationPluginViewInfo } from "@akashic/pdi-types";
import { Trigger } from "@akashic/trigger";
import { Game } from "./Game";
import { OperationPlugin } from "./OperationPlugin";
import { InternalOperationPluginInfo } from "./OperationPluginInfo";
import { InternalOperationPluginOperation } from "./OperationPluginOperation";
import { OperationPluginStatic } from "./OperationPluginStatic";
/**
 * 操作プラグインを管理するクラス。
 * 通常は game.json の `operationPlugins` フィールドを基に自動的に初期化される他、
 * ゲーム開発者は本クラスを用いて直接操作プラグインを登録することもできる。
 * 詳細は `this.register()` のコメントを参照。
 *
 * 本クラスのインスタンスをゲーム開発者が直接生成することない。
 */
export declare class OperationPluginManager {
    /**
     * 操作プラグインの操作を通知する `Trigger` 。
     */
    onOperate: Trigger<InternalOperationPluginOperation>;
    /**
     * 操作プラグインの操作を通知する `Trigger` 。
     * @deprecated 非推奨である。将来的に削除される。代わりに `onOperate` を利用すること。
     */
    operated: Trigger<InternalOperationPluginOperation>;
    /**
     * ロードしている操作プラグインを保持するオブジェクト。
     */
    plugins: {
        [key: number]: OperationPlugin;
    };
    private _game;
    private _viewInfo;
    private _infos;
    private _initialized;
    constructor(game: Game, viewInfo: OperationPluginViewInfo | null, infos: InternalOperationPluginInfo[]);
    /**
     * 初期化する。
     * このメソッドの呼び出しは、`this.game._loaded` のfire後でなければならない。
     */
    initialize(): void;
    /**
     * 操作プラグインを手動で登録する。
     * このメソッドを利用する場合、game.json の `operationPlugins` フィールドから該当の定義を省略する必要がある。
     * 登録後、ゲーム開発者自身で `OperationPluginManager#start()` を呼び出さなければならない点に注意。
     * @param pluginClass new 可能な操作プラグインの実態
     * @param code 操作プラグインの識別コード
     * @param option 操作プラグインのコンストラクタに渡すパラメータ
     */
    register(pluginClass: OperationPluginStatic, code: number, option?: any): void;
    /**
     * 対象の操作プラグインを開始する。
     * @param code 操作プラグインの識別コード
     */
    start(code: number): void;
    /**
     * 対象の操作プラグインを終了する。
     * @param code 操作プラグインの識別コード
     */
    stop(code: number): void;
    destroy(): void;
    stopAll(): void;
    private _doAutoStart;
    private _loadOperationPlugins;
    private _instantiateOperationPlugin;
}
