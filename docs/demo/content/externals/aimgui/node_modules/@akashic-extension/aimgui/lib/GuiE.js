"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GuiE = void 0;
var Gui_1 = require("./Gui");
/**
 * GUI E。
 *
 * GUIを描画する E 。
 *
 * 画面の原点（左上隅）に配置する。
 */
var GuiE = /** @class */ (function (_super) {
    __extends(GuiE, _super);
    /**
     * コンストラクタ。
     *
     * @param param GuiEコンストラクタパラメータオブジェクト。
     */
    function GuiE(param) {
        var _a;
        var _this = _super.call(this, param) || this;
        _this.run = null;
        _this.font = param.font;
        _this.gui = new Gui_1.Gui(_this.scene, _this, _this.font, (_a = param.memory) !== null && _a !== void 0 ? _a : { data: {} });
        _this.onUpdate.add(_this.handleUpdate, _this);
        return _this;
    }
    GuiE.prototype.handleUpdate = function () {
        this.gui.preRun();
        if (this.run) {
            this.run(this.gui);
        }
        this.gui.postRun();
    };
    return GuiE;
}(g.E));
exports.GuiE = GuiE;
