import{_ as n,C as e,o as p,c as l,H as o,Q as s}from"./chunks/framework.f1c0562b.js";const F=JSON.parse('{"title":"画像を表示する","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/drawing/image.md","filePath":"reverse-reference/v3/drawing/image.md"}'),c={name:"reverse-reference/v3/drawing/image.md"},t=s(`<h1 id="画像を表示する" tabindex="-1">画像を表示する <a class="header-anchor" href="#画像を表示する" aria-label="Permalink to &quot;画像を表示する&quot;">​</a></h1><p>画像を表示するには <code>Sprite</code> エンティティを利用します。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> sprite </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  scene: scene,</span></span>
<span class="line"><span style="color:#E1E4E8;">  src: scene.asset.</span><span style="color:#B392F0;">getImageById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;player&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#6A737D;">// アセットID &quot;player&quot; が画像アセットだとします</span></span>
<span class="line"><span style="color:#E1E4E8;">  x: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 横位置 100 に表示する</span></span>
<span class="line"><span style="color:#E1E4E8;">  y: </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 縦位置 50 に表示する</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(sprite);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> sprite </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  scene: scene,</span></span>
<span class="line"><span style="color:#24292E;">  src: scene.asset.</span><span style="color:#6F42C1;">getImageById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;player&quot;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// アセットID &quot;player&quot; が画像アセットだとします</span></span>
<span class="line"><span style="color:#24292E;">  x: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 横位置 100 に表示する</span></span>
<span class="line"><span style="color:#24292E;">  y: </span><span style="color:#005CC5;">50</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 縦位置 50 に表示する</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(sprite);</span></span></code></pre></div><p>画像を拡大して表示するには <a href="./scale.html"><code>scaleX</code>, <code>scaleY</code>を利用してください。</a></p><p>画像を回転して表示するには<a href="./rotate.html"><code>angle</code> を利用してください。</a></p><h2 id="利用例" tabindex="-1">利用例 <a class="header-anchor" href="#利用例" aria-label="Permalink to &quot;利用例&quot;">​</a></h2><p>次のコンテンツは、画像を表示します。</p>`,8),r=s(`<h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p>Akashic Engine で画像を扱うには、画像ファイルを <code>image</code> ディレクトリに配置する必要があります。</p><p>配置した画像ファイルは <code>game.json</code> に登録する必要があり、 <code>akashic scan asset</code> コマンドで <code>game.json</code> に追加することができます。</p><p><code>Sprite</code> エンティティのパラメータオブジェクトには <code>src</code> プロパティがあり、ここに画像アセットオブジェクトを指定すると、対応する画像を表示するエンティティが作成されます。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> scene </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  game: g.game,</span></span>
<span class="line"><span style="color:#E1E4E8;">  assetIds: [</span><span style="color:#9ECBFF;">&quot;player&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// シーン内で利用するアセットID</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">scene.onLoad.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> sprite </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    scene: scene,</span></span>
<span class="line"><span style="color:#E1E4E8;">    src: scene.assets[</span><span style="color:#9ECBFF;">&quot;player&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    x: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    y: </span><span style="color:#79B8FF;">50</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">  scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(sprite);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> scene </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  game: g.game,</span></span>
<span class="line"><span style="color:#24292E;">  assetIds: [</span><span style="color:#032F62;">&quot;player&quot;</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// シーン内で利用するアセットID</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">scene.onLoad.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> sprite </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    scene: scene,</span></span>
<span class="line"><span style="color:#24292E;">    src: scene.assets[</span><span style="color:#032F62;">&quot;player&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    x: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    y: </span><span style="color:#005CC5;">50</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(sprite);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="/tutorial/v3/basic.html#image">チュートリアル</a></li><li><a href="/akashic-engine/v3/classes/Sprite.html#src">API リファレンス</a></li></ul>`,7);function E(y,i,d,h,g,u){const a=e("PlaygroundElement");return p(),l("div",null,[t,o(a,{gameJsonUri:"/snippets/reverse-reference/drawing/image/game.json",width:600,height:400}),r])}const _=n(c,[["render",E]]);export{F as __pageData,_ as default};
