import{_ as s}from"./chunks/cli-serve.64f50312.js";import{_ as a,o as n,c as l,Q as o}from"./chunks/framework.f1c0562b.js";const u=JSON.parse('{"title":"Join と Leave","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial/v2/multiplay/join.md","filePath":"tutorial/v2/multiplay/join.md"}'),p={name:"tutorial/v2/multiplay/join.md"},e=o(`<h1 id="join-と-leave" tabindex="-1">Join と Leave <a class="header-anchor" href="#join-と-leave" aria-label="Permalink to &quot;Join と Leave&quot;">​</a></h1><h2 id="join" tabindex="-1">Join <a class="header-anchor" href="#join" aria-label="Permalink to &quot;Join {#join}&quot;">​</a></h2><p>各プレイヤーには「join しているか否か」という二値の状態が存在します。これは実行環境が規定する値です。「join しているプレイヤー」が何を意味するかは、実行環境によって定まります。</p><p>あるプレイヤーが join 状態になる時、 <code>g.game.join</code> が fire され <code>g.JoinEvent</code> が与えられます。同様に join 状態でなくなる時、 <code>g.game.leave</code> が fire され <code>g.LeaveEvent</code> が与えられます。</p><blockquote><p>これ自体は環境依存が強くあまり使い出のない機能ですが、 <strong>ニコニコ生放送上で実行する場合、放送者のプレイヤーだけが join します</strong> (leave はしません)。そのため、放送者と視聴者を区別するための情報として利用することができます。</p></blockquote><p>次のコードは、最後に join したプレイヤーを記憶して参照する例です。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> lastJoinedPlayerId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">g.game.join.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ev</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  lastJoinedPlayerId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ev.player.id;</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">scene.pointDownCapture.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ev</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (ev.player.id </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> lastJoinedPlayerId) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ニコニコ生放送上で動かす場合、イベントを生成した(＝画面を押下した)のが「放送者」である時のみ実行される</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (g.game.selfId </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> lastJoinedPlayerId) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ニコニコ生放送上で動かす場合、この実行環境(インスタンス)が「放送者」のものである時のみ実行される</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> lastJoinedPlayerId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">g.game.join.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ev</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  lastJoinedPlayerId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ev.player.id;</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">scene.pointDownCapture.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ev</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (ev.player.id </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> lastJoinedPlayerId) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ニコニコ生放送上で動かす場合、イベントを生成した(＝画面を押下した)のが「放送者」である時のみ実行される</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (g.game.selfId </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> lastJoinedPlayerId) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ニコニコ生放送上で動かす場合、この実行環境(インスタンス)が「放送者」のものである時のみ実行される</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>なお <code>g.game.selfId</code> は、今そのゲームを実行している環境(インスタンス)のプレイヤー ID です。このコード例のように、あるイベントの生成元が自分(このインスタンス自身)かどうかを判断したい時に利用できます。</p><p><code>g.game.join</code> や <code>g.game.leave</code> の動作確認は <code>akashic serve</code> コマンドでも行うことができます。</p><p><img src="`+s+'" alt="serve"></p><p>画面上側、ツールバー上の「Join Me」ボタンを押すと、そのウィンドウ(インスタンス)のプレイヤーが join します (<code>g.game.join</code> が fire されます)。 join 済みの場合は「Leave Me」ボタンに切り替わり、 <code>g.game.leave</code> を fire させることができます。</p><h2 id="niconico" tabindex="-1">ニコ生ゲーム <a class="header-anchor" href="#niconico" aria-label="Permalink to &quot;ニコ生ゲーム {#niconico}&quot;">​</a></h2><p>その他、ニコニコ生放送に関する内容は、 <a href="/shin-ichiba/">ニコ生ゲームを作ろう</a> を参照してください。</p>',13),c=[e];function t(r,i,E,y,d,v){return n(),l("div",null,c)}const m=a(p,[["render",t]]);export{u as __pageData,m as default};
