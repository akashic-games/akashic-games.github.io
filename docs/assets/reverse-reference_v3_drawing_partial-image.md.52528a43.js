import{_ as e,C as n,o,c as p,H as l,Q as s}from"./chunks/framework.f1c0562b.js";const v=JSON.parse('{"title":"画像の一部分を表示する","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/drawing/partial-image.md","filePath":"reverse-reference/v3/drawing/partial-image.md"}'),c={name:"reverse-reference/v3/drawing/partial-image.md"},t=s(`<h1 id="画像の一部分を表示する" tabindex="-1">画像の一部分を表示する <a class="header-anchor" href="#画像の一部分を表示する" aria-label="Permalink to &quot;画像の一部分を表示する&quot;">​</a></h1><p>画像の一部を表示するには <code>Sprite</code> エンティティの <code>srcWidth</code>, <code>srcHeight</code> や <code>srcX</code>, <code>srcY</code> を利用します。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> sprite </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  scene: scene,</span></span>
<span class="line"><span style="color:#E1E4E8;">  src: scene.asset.</span><span style="color:#B392F0;">getImageById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;player&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#6A737D;">// アセットID &quot;player&quot; が画像アセットだとします</span></span>
<span class="line"><span style="color:#E1E4E8;">  width: </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  height: </span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  srcX: </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 描画元範囲の左端を指定します</span></span>
<span class="line"><span style="color:#E1E4E8;">  srcY: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 描画元範囲分の上端を指定します</span></span>
<span class="line"><span style="color:#E1E4E8;">  srcWidth: </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 描画元範囲の幅の値。エンティティの幅に拡大して描画されます</span></span>
<span class="line"><span style="color:#E1E4E8;">  srcHeight: </span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 描画元範囲の高さの値。エンティティの高さに拡大して描画されます</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> sprite </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  scene: scene,</span></span>
<span class="line"><span style="color:#24292E;">  src: scene.asset.</span><span style="color:#6F42C1;">getImageById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;player&quot;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// アセットID &quot;player&quot; が画像アセットだとします</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">25</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  srcX: </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 描画元範囲の左端を指定します</span></span>
<span class="line"><span style="color:#24292E;">  srcY: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 描画元範囲分の上端を指定します</span></span>
<span class="line"><span style="color:#24292E;">  srcWidth: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 描画元範囲の幅の値。エンティティの幅に拡大して描画されます</span></span>
<span class="line"><span style="color:#24292E;">  srcHeight: </span><span style="color:#005CC5;">25</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 描画元範囲の高さの値。エンティティの高さに拡大して描画されます</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sprite.srcX </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">sprite.srcY </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">sprite.</span><span style="color:#B392F0;">invalidate</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// invalidate() で表示に反映します</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">sprite.srcX </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">25</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">sprite.srcY </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">sprite.</span><span style="color:#6F42C1;">invalidate</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// invalidate() で表示に反映します</span></span></code></pre></div><p>画像を拡大して表示するには <a href="./scale.html"><code>scaleX</code>, <code>scaleY</code>を利用してください。</a></p><p>画像を回転して表示するには<a href="./rotate.html"><code>angle</code> を利用してください。</a></p><h2 id="利用例" tabindex="-1">利用例 <a class="header-anchor" href="#利用例" aria-label="Permalink to &quot;利用例&quot;">​</a></h2><p>次のコンテンツは、左側に画像の一部分を表示し、右側に全体の画像を表示しています。</p>`,9),r=s('<h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p>画像の一部を表示するには、<code>Sprite</code> エンティティの <code>srcX</code>, <code>srcY</code>, <code>srcWidth</code>, <code>srcHeight</code> プロパティを利用します。</p><p><code>srcX</code>, <code>srcY</code> は描画元範囲の左端・上端、 <code>srcWidth</code>, <code>srcHeight</code> は描画元範囲の幅・高さです。 指定した場合、エンティティの幅・高さに合わせて描画元範囲が拡大・縮小して描画されます。</p><p>これらの値を変更した場合は、<code>invalidate()</code> を呼び出す必要があります。</p><p><code>srcWidth</code>, <code>srcHeight</code> は、通常 <code>width</code>, <code>height</code> と併せて指定する必要があることに注意してください。 これは <code>Sprite</code> の生成時に <code>width</code>, <code>height</code> を省略すると、画像 (<code>src</code>) の幅・高さになるためです。 特に拡大したい場合を除き、 <code>width</code>, <code>height</code> には <code>srcWidth</code>,<code>srcHeight</code> と同じ値を指定してください。</p><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="/akashic-engine/v3/classes/Sprite.html#srcWidth">API リファレンス</a></li></ul>',7);function i(d,E,y,h,g,_){const a=n("PlaygroundElement");return o(),p("div",null,[t,l(a,{gameJsonUri:"/snippets/reverse-reference/drawing/partial-image/game.json",width:600,height:400}),r])}const m=e(c,[["render",i]]);export{v as __pageData,m as default};
