import{_ as i,c as e,I as n,a3 as a,o as l,E as t}from"./chunks/framework.B_s5ISUx.js";const _=JSON.parse('{"title":"プレイヤー固有の乱数を生成する","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/logic/local-random.md","filePath":"reverse-reference/v3/logic/local-random.md"}'),h={name:"reverse-reference/v3/logic/local-random.md"},p=a(`<h1 id="プレイヤー固有の乱数を生成する" tabindex="-1">プレイヤー固有の乱数を生成する <a class="header-anchor" href="#プレイヤー固有の乱数を生成する" aria-label="Permalink to &quot;プレイヤー固有の乱数を生成する&quot;">​</a></h1><p>プレイヤー固有の乱数を生成するには <code>g.game.localRandom</code> を利用します。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.game.localRandom.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> localRect </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FilledRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// その他のプロパティ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  local: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // ローカルであることを指定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(localRect);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localRect.onPointDown.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> random </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.game.localRandom.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0 以上 1 未満の整数を取得。この値は各プレイヤーで異なる</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  localRect.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> random </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  localRect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">modified</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>全員に同じ乱数を生成するには <a href="./random.html"><code>g.game.random</code> を利用してください。</a></p><h2 id="利用例" tabindex="-1">利用例 <a class="header-anchor" href="#利用例" aria-label="Permalink to &quot;利用例&quot;">​</a></h2><p>次のコンテンツは、矩形をクリックするとランダムに矩形の大きさが変わります。</p>`,8),d=a('<h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p><code>g.game.localRandom</code> は、各プレイヤーでシード値が異なる乱数生成器です。 すなわち、同じ順序・同じタイミングで生成しても、プレイヤーごとに異なる値が得られます。</p><p><code>g.game.localRandom</code> は、<code>Math.random()</code> と同じ機能(0 以上 1 未満のランダムな浮動小数点数を生成する)の関数です。 Akashic Engine の乱数生成器には、他に <a href="./random.html"><code>g.game.random</code></a> があります。 <a href="./random.html"><code>g.game.random</code></a> と対比して、ローカル処理での用途を明確にするため <code>g.game.localRandom</code> が作成されました。</p><p><code>g.game.localRandom</code> は、<code>local: true</code> をつけて生成したローカルエンティティのイベントなど、ローカル処理中でのみ利用してください。 ローカル処理以外で利用した場合、ゲームのグローバルな実行状態を破壊する恐れがあります。 詳しくは<a href="/tutorial/v3/multiplay/each-player.html">プレイヤーごとに異なる描画を行う</a>を参照してください。</p><p>また、<code>Math.random()</code> を利用したコンテンツを akashic sandbox コマンドで実行すると警告ダイアログが出ますが、<code>g.game.localRandom</code> では警告はでません。</p><p><code>generate()</code> は実数を返しますが、整数の乱数が必要なことも多いでしょう。0 以上 x 未満の整数は、 <code>generate()</code> を使って次のように生成できます。このコードでは、 <code>generate()</code> の戻り値を x 倍することで「0 以上 x 未満の実数」にし、 そこから <code>Math.floor()</code> で小数点以下を切り捨てて「0 以上 x 未満の整数」にしています。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(g.game.localRandom.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x);</span></span></code></pre></div><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="https://akashic-games.github.io/akashic-engine/v3/classes/Game.html#localRandom" target="_blank" rel="noreferrer">API リファレンス</a></li></ul>',9);function k(o,r,c,g,E,m){const s=t("PlaygroundElement");return l(),e("div",null,[p,n(s,{gameJsonUri:"/snippets/reverse-reference/logic/localRandom/game.json",width:600,height:400}),d])}const u=i(h,[["render",k]]);export{_ as __pageData,u as default};
