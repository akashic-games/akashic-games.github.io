import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.459ab1e9.js";const g=JSON.parse('{"title":"放送者を判別する","description":"","frontmatter":{},"headers":[],"relativePath":"shin-ichiba/multi/broadcaster.md","filePath":"shin-ichiba/multi/broadcaster.md"}'),o={name:"shin-ichiba/multi/broadcaster.md"},e=l(`<h1 id="放送者を判別する" tabindex="-1">放送者を判別する <a class="header-anchor" href="#放送者を判別する" aria-label="Permalink to &quot;放送者を判別する&quot;">​</a></h1><p>マルチプレイのニコ生ゲームでは、ゲーム内のどのプレイヤーが放送者か判別することができます。</p><h2 id="join" tabindex="-1">Join <a class="header-anchor" href="#join" aria-label="Permalink to &quot;Join {#join}&quot;">​</a></h2><p>マルチプレイのニコ生ゲームにおいては、ゲーム開始後に一度だけ <code>g.game.onJoin</code> トリガーが fire されます。 この <code>onJoin</code> によって放送者にあたるプレイヤーの ID が通知されます。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Akashic Engine の <code>g.game.onJoin</code> で通知されるプレイヤー (join しているプレイヤー) が何を指すかはサービス依存です。 ニコ生ゲームではこれを「放送者」を表すために利用しています。 また <code>onJoin</code> の対になるトリガー <code>g.game.onLeave</code> が通知されることはありません。</p><p>参考: <a href="/tutorial/v3/multiplay/join.html">Akashic Engine 入門 » Join と Leave</a></p></div><p>次のコードは、最後に join したプレイヤーを記憶して参照する例です。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> lastJoinedPlayerId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">g.game.onJoin.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ev</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  lastJoinedPlayerId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ev.player.id;</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">scene.onPointDownCapture.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ev</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (ev.player.id </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> lastJoinedPlayerId) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ニコニコ生放送上で動かす場合、イベントを生成した(＝画面を押下した)のが「放送者」である時のみ実行される</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (g.game.selfId </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> lastJoinedPlayerId) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ニコニコ生放送上で動かす場合、この実行環境(インスタンス)が「放送者」のものである時のみ実行される</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> lastJoinedPlayerId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">g.game.onJoin.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ev</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  lastJoinedPlayerId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ev.player.id;</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">scene.onPointDownCapture.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ev</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (ev.player.id </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> lastJoinedPlayerId) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ニコニコ生放送上で動かす場合、イベントを生成した(＝画面を押下した)のが「放送者」である時のみ実行される</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (g.game.selfId </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> lastJoinedPlayerId) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ニコニコ生放送上で動かす場合、この実行環境(インスタンス)が「放送者」のものである時のみ実行される</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>なお <code>g.game.selfId</code> は、今そのゲームを実行している環境(インスタンス)のプレイヤー ID です。このコード例のように、あるイベントの生成元が自分(このインスタンス自身)かどうかを判断したい時に利用できます。</p><div class="danger custom-block"><p class="custom-block-title">IMPORTANT</p><p><code>g.game.selfId</code> を参照する条件分岐は <a href="/tutorial/v3/multiplay/each-player.html#local-operation">ローカル処理</a> になるため、内容に制限があります。 詳細は <a href="/tutorial/v3/multiplay/join.html">Akashic Engine 入門 » Join と Leave</a> の <a href="/tutorial/v3/multiplay/join.html#selfid-and-local">g.game.selfId とローカル処理</a> を参照してください。</p></div><h4 id="debug" tabindex="-1">動作確認 <a class="header-anchor" href="#debug" aria-label="Permalink to &quot;動作確認 {#debug}&quot;">​</a></h4><p><code>g.game.onJoin</code>, <code>g.game.selfId</code> の動作確認は <code>akashic serve</code> コマンドで行うことができます。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">akashic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">serve</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--target-service</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nicolive</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">akashic</span><span style="color:#24292E;"> </span><span style="color:#032F62;">serve</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--target-service</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nicolive</span></span></code></pre></div><p><code>--target-service nicolive</code> (または <code>-s nicolive</code>) オプションをつけて起動した場合、 「起動後に最初に開かれたウィンドウ」のプレイヤーが「放送者」役として扱われ、 <code>g.game.onJoin</code> で通知されます。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>-s nicolive</code> オプションを使わない場合、serve の画面上の「Join Me」「Leave Me」ボタンで 「そのウィンドウのプレイヤー」を join/leave させることができます。</p></div>`,14),p=[e];function c(t,r,i,E,y,d){return a(),n("div",null,p)}const v=s(o,[["render",c]]);export{g as __pageData,v as default};
