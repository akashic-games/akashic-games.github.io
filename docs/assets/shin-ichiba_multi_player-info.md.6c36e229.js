import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.459ab1e9.js";const p="/assets/player-info-accept-dialog.3ef936c0.png",h=JSON.parse('{"title":"ユーザ名を使う","description":"","frontmatter":{},"headers":[],"relativePath":"shin-ichiba/multi/player-info.md","filePath":"shin-ichiba/multi/player-info.md"}'),o={name:"shin-ichiba/multi/player-info.md"},e=l('<h1 id="ユーザ名を使う" tabindex="-1">ユーザ名を使う <a class="header-anchor" href="#ユーザ名を使う" aria-label="Permalink to &quot;ユーザ名を使う&quot;">​</a></h1><p>マルチプレイゲームでは、ゲーム中にプレイヤーの名前を表示したいことがあります。 ニコ生ゲームでは、各プレイヤーの「ニコニコ生放送のユーザ名」を取得・利用することができます。</p><p>対応バージョンは Akashic Engine v3 以降です。</p><h2 id="confirm" tabindex="-1">ユーザ名の利用許諾 <a class="header-anchor" href="#confirm" aria-label="Permalink to &quot;ユーザ名の利用許諾 {#confirm}&quot;">​</a></h2><p>ニコ生ゲームでのユーザ名取得は、技術的には「関数を一つ呼び出してその完了を待つ」だけで実現できます。</p><p>ただし自作ニコ生ゲームにおいては、ユーザの許可なくユーザ名を利用することはできません。 コンテンツからユーザ名を取得しようとすると、ゲーム画面に許諾を求めるダイアログが表示されます。(下図参照)</p><p><img src="'+p+`" alt="ユーザ名の利用許諾を求めるダイアログ"></p><p>ゲームからは、ここで「ユーザー名」ボタンを押したユーザの名前だけが取得できます。 許諾されなかった場合、ランダムに生成された名前 (e.g. <code>&quot;ゲスト383&quot;</code>) が通知されます。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>このような制約を設けるのは、ニコニコ生放送が歴史的に「名前を出さない」コミュニケーションを許容してきたという文化的背景があるためです (<a href="https://qa.nicovideo.jp/faq/show/936" target="_blank" rel="noreferrer">184 コメント</a> など)。 公式ニコ生ゲームでは、何がしかゲームプレイに参加しなければ名前が出ることはないようになっているため、このような許諾画面を表示していません。</p></div><h2 id="library" tabindex="-1">ライブラリの導入 <a class="header-anchor" href="#library" aria-label="Permalink to &quot;ライブラリの導入 {#library}&quot;">​</a></h2><p>ユーザ名を取得するには、拡張ライブラリ <code>@akashic-extension/resolve-player-info</code> を導入して利用する必要があります。</p><p>game.json のあるディレクトリで、次を実行してください。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">akashic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@akashic-extension/resolve-player-info</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">akashic</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@akashic-extension/resolve-player-info</span></span></code></pre></div><p>テキストエディタで game.json を開いて、次のような <code>environment.external.coeLimited</code> プロパティがなければ作成してください。値は <code>&quot;0&quot;</code> としてください。(v2.2.4 以降の <code>akashic-cli</code> では、 <code>akashic install</code> 時に自動的に作成されます。)</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">...,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;environment&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;external&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;coeLimited&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;0&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">...,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;environment&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;external&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;coeLimited&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;0&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>スクリプトアセット内で、 <code>require()</code> で関数 <code>resolvePlayerInfo()</code> を取得します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resolvePlayerInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;@akashic-extension/resolve-player-info&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  .resolvePlayerInfo;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resolvePlayerInfo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;@akashic-extension/resolve-player-info&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  .resolvePlayerInfo;</span></span></code></pre></div><p>TypeScript の場合は <code>import</code> を利用してください。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { resolvePlayerInfo } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;@akashic-extension/resolve-player-info&quot;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { resolvePlayerInfo } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;@akashic-extension/resolve-player-info&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><h2 id="obtain-name" tabindex="-1">名前の取得 <a class="header-anchor" href="#obtain-name" aria-label="Permalink to &quot;名前の取得 {#obtain-name}&quot;">​</a></h2><p>得られた <code>resolvePlayerInfo()</code> のもっとも簡単な用法は、引数として <code>{ raises: true }</code> を与えて呼び出すことです。これにより名前利用の許諾ダイアログが表示され、ダイアログに応答したプレイヤーのユーザ名情報が <code>g.game.onPlayerInfo</code> で通知されます。</p><p>また以降そのプレイヤーが生成したイベント (画面押下の <code>g.PointDownEvent</code> など) には、 <code>player.name</code> プロパティにユーザ名が含まれるようになります。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nameTable</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"><span style="color:#E1E4E8;">g.game.onPlayerInfo.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ev</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 各プレイヤーが名前利用許諾のダイアログに応答した時、通知されます。</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// ev.player.name にそのプレイヤーの名前が含まれます。</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// (ev.player.id には (最初から) プレイヤーIDが含まれています)</span></span>
<span class="line"><span style="color:#E1E4E8;">  nameTable[ev.player.id] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ev.player.name;</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">scene.onPointDownCapture.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ev</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// onPlayerInfo での通知後、そのプレイヤーが生成したイベントには名前情報が与えられます。</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (ev.player.name </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(ev.player.name </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; さんが操作しました&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 以下で名前利用の許諾ダイアログを表示します。</span></span>
<span class="line"><span style="color:#6A737D;">// ただし、この関数はローカルイベント契機でのみ呼び出してください (後述) 。</span></span>
<span class="line"><span style="color:#B392F0;">resolvePlayerInfo</span><span style="color:#E1E4E8;">({ raises: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> });</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nameTable</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">g.game.onPlayerInfo.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ev</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 各プレイヤーが名前利用許諾のダイアログに応答した時、通知されます。</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// ev.player.name にそのプレイヤーの名前が含まれます。</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// (ev.player.id には (最初から) プレイヤーIDが含まれています)</span></span>
<span class="line"><span style="color:#24292E;">  nameTable[ev.player.id] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ev.player.name;</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">scene.onPointDownCapture.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ev</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// onPlayerInfo での通知後、そのプレイヤーが生成したイベントには名前情報が与えられます。</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (ev.player.name </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(ev.player.name </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; さんが操作しました&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 以下で名前利用の許諾ダイアログを表示します。</span></span>
<span class="line"><span style="color:#6A737D;">// ただし、この関数はローカルイベント契機でのみ呼び出してください (後述) 。</span></span>
<span class="line"><span style="color:#6F42C1;">resolvePlayerInfo</span><span style="color:#24292E;">({ raises: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> });</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API {#api}&quot;">​</a></h2><p><code>resolvePlayerInfo(opts, callback)</code> は、一つまたは二つの引数をとる関数です。</p><p>第一引数 <code>opts</code> は次のプロパティを持つオブジェクトです。</p><table><thead><tr><th style="text-align:center;">プロパティ名</th><th style="text-align:center;">型</th><th style="text-align:center;">デフォルト値</th><th style="text-align:left;">意味</th></tr></thead><tbody><tr><td style="text-align:center;"><code>raises</code></td><td style="text-align:center;"><code>boolean</code></td><td style="text-align:center;"><code>false</code></td><td style="text-align:left;"><code>true</code> の場合、取得した名前情報で <code>g.PlayerInfoEvent</code> を生成して全体に通知する (<code>g.game.raiseEvent()</code> を呼び出す) 。</td></tr><tr><td style="text-align:center;"><code>limitSeconds</code></td><td style="text-align:center;"><code>number</code></td><td style="text-align:center;"><code>15</code></td><td style="text-align:left;">名前許諾ダイアログを自動的に閉じるまでの秒数。</td></tr></tbody></table><p>第二引数 <code>callback</code> は、名前取得が完了した時に呼び出されるコールバック関数です。 <strong>この値は <code>raises</code> オプションに <code>true</code> を与える場合には、省略できます</strong> 。 <code>raises</code> オプションの挙動をカスタマイズしたい場合に、 <code>raises</code> を <code>false</code> にして <code>callback</code> を渡してください。</p><p><code>callback</code> は、 <code>callback(err, playerInfo)</code> の形で、一つまたは二つの引数で呼び出されます。それぞれの引数は次の内容を持ちます。</p><table><thead><tr><th style="text-align:center;">引数</th><th style="text-align:center;">型</th><th style="text-align:left;">内容</th></tr></thead><tbody><tr><td style="text-align:center;">第一引数 (<code>err</code>)</td><td style="text-align:center;"><code>Error</code> または <code>null</code></td><td style="text-align:left;">名前取得に成功した場合、 <code>null</code> 。<br>失敗した場合、対応する <code>Error</code> 。</td></tr><tr><td style="text-align:center;">第二引数 (<code>playerInfo</code>)</td><td style="text-align:center;">オブジェクトまたは <code>null</code></td><td style="text-align:left;">取得した名前情報。文字列の <code>name</code> プロパティと補足情報 <code>userData</code> (詳細後述) を持つ。<br><code>err</code> が <code>null</code> でない時、またその時のみ <code>null</code> 。</td></tr></tbody></table><p>プレイヤーの名前は、 <code>callback</code> の第二引数 (<code>playerInfo</code>) を使って、 <code>playerInfo.name</code> でアクセスすることができます。</p><p>また <code>playerInfo.userData.accepted</code> が <code>false</code> の場合、そのユーザは名前取得を拒否したユーザです。この時 <code>playerInfo.name</code> は自動生成の文字列または <code>null</code> です。</p><p><code>playerInfo.userData.unnamed</code> が <code>true</code> の場合、そのユーザは名前がない特殊なユーザです (サーバサイドで実行されている特殊なインスタンスなど)。通常、 <code>unnamed</code> のユーザが実際にゲームプレイを行うことはありません。特に用途がなければ、このプレイヤーは無視してください。 <code>raises</code> オプションを <code>true</code> にして自動的に名前情報を全体通知する場合にも、 <code>unnamed</code> のプレイヤーは無視されます。</p><h3 id="raises" tabindex="-1">raises オプションで通知される g.PlayerInfoEvent <a class="header-anchor" href="#raises" aria-label="Permalink to &quot;raises オプションで通知される g.PlayerInfoEvent {#raises}&quot;">​</a></h3><p><code>raises</code> に <code>true</code> を指定すると、取得した名前情報は自動的に <code>g.PlayerInfoEvent</code> として全プレイヤーに通知されます。このイベントは <code>g.game.onPlayerInfo</code> トリガーで通知されます。</p><p><code>onPlayerInfo</code> のハンドラに渡される引数 (<code>ev</code>) は <code>g.PlayerInfoEvent</code> で、これには次のプロパティが含まれます。</p><table><thead><tr><th style="text-align:center;">プロパティ名</th><th style="text-align:center;">型</th><th style="text-align:left;">内容</th></tr></thead><tbody><tr><td style="text-align:center;"><code>player.id</code></td><td style="text-align:center;"><code>string</code></td><td style="text-align:left;">プレイヤー ID</td></tr><tr><td style="text-align:center;"><code>player.name</code></td><td style="text-align:center;"><code>string</code> または <code>null</code></td><td style="text-align:left;">そのプレイヤーの名前</td></tr><tr><td style="text-align:center;"><code>userData.accepted</code></td><td style="text-align:center;"><code>boolean</code></td><td style="text-align:left;">名前取得が許諾されたか。<br> <code>false</code> の場合、名前は自動生成されたものまたは <code>null</code> 。</td></tr></tbody></table><h2 id="code-example" tabindex="-1">コード例 <a class="header-anchor" href="#code-example" aria-label="Permalink to &quot;コード例 {#code-example}&quot;">​</a></h2><p>マルチプレイゲーム内で参加ボタンを表示し、押したプレイヤーに名前利用の許諾を求めるコードは、次のようなものになります。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resolvePlayerInfo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;@akashic-extension/resolve-player-info&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  .resolvePlayerInfo;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">scene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">({ game: g.game });</span></span>
<span class="line"><span style="color:#E1E4E8;">  scene.onLoad.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">font</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">DynamicFont</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      game: g.game,</span></span>
<span class="line"><span style="color:#E1E4E8;">      fontFamily: </span><span style="color:#9ECBFF;">&quot;sans-serif&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      size: </span><span style="color:#79B8FF;">15</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 「参加」ボタン (Label)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">entryButton</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Label</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      scene: scene,</span></span>
<span class="line"><span style="color:#E1E4E8;">      x: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      y: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      font: font,</span></span>
<span class="line"><span style="color:#E1E4E8;">      text: </span><span style="color:#9ECBFF;">&quot;参加&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      fontSize: </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      textColor: </span><span style="color:#9ECBFF;">&quot;black&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      local: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// ローカルエンティティにする</span></span>
<span class="line"><span style="color:#E1E4E8;">      touchable: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">    entryButton.onPointUp.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ev</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 「参加」ボタンを押された時: 参加処理の代わりに名前取得の許諾を求める。</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// プレイヤーがダイアログに応じると、 raiseEvent() で名前情報が全体に通知されるので、</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// onPlayerInfo でそれを受信した時に参加者とする。</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">resolvePlayerInfo</span><span style="color:#E1E4E8;">({ raises: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">    scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(entryButton);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 参加者の情報を保持するテーブル</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">playersTable</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {};</span></span>
<span class="line"><span style="color:#E1E4E8;">    g.game.onPlayerInfo.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ev</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">player</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ev.player;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">anonymous</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">ev.userData.accepted;</span></span>
<span class="line"><span style="color:#E1E4E8;">      playersTable[player.id] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        name: player.name, </span><span style="color:#6A737D;">// 名前</span></span>
<span class="line"><span style="color:#E1E4E8;">        anonymous: anonymous, </span><span style="color:#6A737D;">// 名前利用を拒否したか (自動生成の名前か)</span></span>
<span class="line"><span style="color:#E1E4E8;">        score: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// スコア (例。このコード例では使っていません)</span></span>
<span class="line"><span style="color:#E1E4E8;">      };</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 参加を「締め切る」ボタン (Label)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">startButton</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Label</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      scene: scene,</span></span>
<span class="line"><span style="color:#E1E4E8;">      x: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      y: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      font: font,</span></span>
<span class="line"><span style="color:#E1E4E8;">      text: </span><span style="color:#9ECBFF;">&quot;締め切る&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      fontSize: </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      textColor: </span><span style="color:#9ECBFF;">&quot;black&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      local: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// ローカルエンティティにする</span></span>
<span class="line"><span style="color:#E1E4E8;">      touchable: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">    startButton.onPointUp.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 参加が締め切られた。</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// この時点 playersTable に登録されているプレイヤーが「参加者」。</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 名前が playersTable[(プレイヤーID)].name から参照できる。</span></span>
<span class="line"><span style="color:#E1E4E8;">      console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;参加者情報&quot;</span><span style="color:#E1E4E8;">, playersTable);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 参加者情報を受け取りゲーム部分のシーンを作成する関数 createGameScene()</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// (このコード例では定義していないので各ゲームで作成してください)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">gameScene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createGameScene</span><span style="color:#E1E4E8;">(playersTable);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// それに replaceScene することでゲーム本編を開始する。</span></span>
<span class="line"><span style="color:#E1E4E8;">      g.game.</span><span style="color:#B392F0;">replaceScene</span><span style="color:#E1E4E8;">(gameScene);</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    g.game.onJoin.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ev</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">broadcasterPlayerId</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ev.player.id; </span><span style="color:#6A737D;">// 放送者のプレイヤーID</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 自分が放送者なら、「締め切る」ボタンを表示。</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (g.game.selfId </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> broadcasterPlayerId) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(startButton);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">  g.game.</span><span style="color:#B392F0;">pushScene</span><span style="color:#E1E4E8;">(scene);</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resolvePlayerInfo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;@akashic-extension/resolve-player-info&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  .resolvePlayerInfo;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">scene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">({ game: g.game });</span></span>
<span class="line"><span style="color:#24292E;">  scene.onLoad.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">font</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">DynamicFont</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      game: g.game,</span></span>
<span class="line"><span style="color:#24292E;">      fontFamily: </span><span style="color:#032F62;">&quot;sans-serif&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      size: </span><span style="color:#005CC5;">15</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 「参加」ボタン (Label)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">entryButton</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Label</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      scene: scene,</span></span>
<span class="line"><span style="color:#24292E;">      x: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      y: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      font: font,</span></span>
<span class="line"><span style="color:#24292E;">      text: </span><span style="color:#032F62;">&quot;参加&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      fontSize: </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      textColor: </span><span style="color:#032F62;">&quot;black&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      local: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// ローカルエンティティにする</span></span>
<span class="line"><span style="color:#24292E;">      touchable: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">    entryButton.onPointUp.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ev</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 「参加」ボタンを押された時: 参加処理の代わりに名前取得の許諾を求める。</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// プレイヤーがダイアログに応じると、 raiseEvent() で名前情報が全体に通知されるので、</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// onPlayerInfo でそれを受信した時に参加者とする。</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">resolvePlayerInfo</span><span style="color:#24292E;">({ raises: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> });</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">    scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(entryButton);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 参加者の情報を保持するテーブル</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">playersTable</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {};</span></span>
<span class="line"><span style="color:#24292E;">    g.game.onPlayerInfo.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ev</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">player</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ev.player;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">anonymous</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">ev.userData.accepted;</span></span>
<span class="line"><span style="color:#24292E;">      playersTable[player.id] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        name: player.name, </span><span style="color:#6A737D;">// 名前</span></span>
<span class="line"><span style="color:#24292E;">        anonymous: anonymous, </span><span style="color:#6A737D;">// 名前利用を拒否したか (自動生成の名前か)</span></span>
<span class="line"><span style="color:#24292E;">        score: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// スコア (例。このコード例では使っていません)</span></span>
<span class="line"><span style="color:#24292E;">      };</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 参加を「締め切る」ボタン (Label)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">startButton</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Label</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      scene: scene,</span></span>
<span class="line"><span style="color:#24292E;">      x: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      y: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      font: font,</span></span>
<span class="line"><span style="color:#24292E;">      text: </span><span style="color:#032F62;">&quot;締め切る&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      fontSize: </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      textColor: </span><span style="color:#032F62;">&quot;black&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      local: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// ローカルエンティティにする</span></span>
<span class="line"><span style="color:#24292E;">      touchable: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">    startButton.onPointUp.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 参加が締め切られた。</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// この時点 playersTable に登録されているプレイヤーが「参加者」。</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 名前が playersTable[(プレイヤーID)].name から参照できる。</span></span>
<span class="line"><span style="color:#24292E;">      console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;参加者情報&quot;</span><span style="color:#24292E;">, playersTable);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 参加者情報を受け取りゲーム部分のシーンを作成する関数 createGameScene()</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// (このコード例では定義していないので各ゲームで作成してください)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">gameScene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createGameScene</span><span style="color:#24292E;">(playersTable);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// それに replaceScene することでゲーム本編を開始する。</span></span>
<span class="line"><span style="color:#24292E;">      g.game.</span><span style="color:#6F42C1;">replaceScene</span><span style="color:#24292E;">(gameScene);</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    g.game.onJoin.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ev</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">broadcasterPlayerId</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ev.player.id; </span><span style="color:#6A737D;">// 放送者のプレイヤーID</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 自分が放送者なら、「締め切る」ボタンを表示。</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (g.game.selfId </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> broadcasterPlayerId) {</span></span>
<span class="line"><span style="color:#24292E;">        scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(startButton);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  g.game.</span><span style="color:#6F42C1;">pushScene</span><span style="color:#24292E;">(scene);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>なお「ローカルエンティティ」や <code>g.game.raiseEvent()</code> など、Akashic Engine のマルチプレイ関連の機能については、以下を参照してください。</p><ul><li><a href="./../../tutorial/v3/multiplay/introduction.html">Akashic Engine 入門 » マルチプレイの基礎</a></li><li><a href="./../../tutorial/v3/multiplay/each-player.html">Akashic Engine 入門 » プレイヤーごとに異なる描画を行う</a></li></ul><h2 id="limitation" tabindex="-1">利用上の制限 <a class="header-anchor" href="#limitation" aria-label="Permalink to &quot;利用上の制限 {#limitation}&quot;">​</a></h2><h3 id="limitation-scene" tabindex="-1">呼び出し中にシーン遷移しない <a class="header-anchor" href="#limitation-scene" aria-label="Permalink to &quot;呼び出し中にシーン遷移しない {#limitation-scene}&quot;">​</a></h3><p><code>resolvePlayerInfo()</code> の呼び出し後、 <strong>コールバックが呼び出されるまでの間に、シーン遷移を行わないでください</strong> 。</p><p>これは実装に起因する制限です。 一部のタイムアウト判定に <code>scene.setTimeout()</code> が利用されている関係上、シーンを切り替えてしまうと正しく動作しなくなるケースがあります。</p><h3 id="limitation-local" tabindex="-1">ローカル処理でのみ使う <a class="header-anchor" href="#limitation-local" aria-label="Permalink to &quot;ローカル処理でのみ使う {#limitation-local}&quot;">​</a></h3><p><code>resolvePlayerInfo()</code> は、 <strong>ローカルイベントの処理 (ローカル処理) 内でのみ利用してください</strong> 。</p><p>言い換えると、原則ローカルエンティティ (<code>local: true</code> をつけて生成したもの) の <code>onPointDown</code> や <code>onPointUp</code> のハンドラ内でのみ呼び出すようにしてください。 「ゲーム開始時に強制的に全員のプレイヤー名を取得する」といった使い方はできません。</p><p>これは、マルチプレイの参加者が「途中から」ゲーム画面を開く可能性があるためです (ニコ生ゲームの起動中に配信を見始めたなど)。 この時 Akashic Engine は最新フレームに追いつくためゲームを早送りで実行しますが、早送り中に名前取得ダイアログが表示されても操作はできません。 また早送り終了後に仮に名前取得が許諾されて <code>PlayerInfoEvent</code> が通知されても、ゲームは既に参加者募集中ではないなど、状態の混乱が考えられます。 さらに早送り中にシーン切り替えが発生すると、前述の「呼び出し中にシーン遷移しない」に反する可能性があります。</p><p>ゲーム開始時に参加者が確定しないゲーム (手番のプレイヤーを都度抽選するなど) の場合は、 「参加者が決まるたびに (名前利用を許諾していなければ) 許諾を促すボタンを表示する」など、「いつ見始めても参加できる」形を検討してください。</p><h2 id="suppl" tabindex="-1">細かな補足 <a class="header-anchor" href="#suppl" aria-label="Permalink to &quot;細かな補足 {#suppl}&quot;">​</a></h2><h3 id="conflicted-names" tabindex="-1">名前の重複 <a class="header-anchor" href="#conflicted-names" aria-label="Permalink to &quot;名前の重複 {#conflicted-names}&quot;">​</a></h3><p>名前利用を許諾しなかった場合に自動生成される名前 (<code>&quot;ゲスト123&quot;</code> など) は重複する可能性があることに気をつけてください。自動生成に限らず、ユーザ名は重複する可能性があります。</p><p>厳密に識別したい場合は、参加順で番号を振る、名前に色をつけて表示するなど、コンテンツ側での対応が必要です。</p><h3 id="old-app" tabindex="-1">ニコ生アプリのバージョン <a class="header-anchor" href="#old-app" aria-label="Permalink to &quot;ニコ生アプリのバージョン {#old-app}&quot;">​</a></h3><p>iOS, Android の古いバージョンのニコ生アプリでは、この名前取得機能に対応していない場合があります。 その場合は、アプリの更新を促すダイアログが表示され、自動的に名前利用を許諾しなかった扱いになります (自動生成の名前が通知されます) 。</p>`,57),t=[e];function c(r,y,E,i,d,u){return n(),a("div",null,t)}const g=s(o,[["render",c]]);export{h as __pageData,g as default};
