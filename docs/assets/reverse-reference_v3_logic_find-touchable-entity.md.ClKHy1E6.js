import{_ as i,c as s,I as n,a3 as e,o as t,E as l}from"./chunks/framework.B_s5ISUx.js";const y=JSON.parse('{"title":"指定位置にあるタッチ可能なエンティティを探す","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/logic/find-touchable-entity.md","filePath":"reverse-reference/v3/logic/find-touchable-entity.md"}'),r={name:"reverse-reference/v3/logic/find-touchable-entity.md"},o=e(`<h1 id="指定位置にあるタッチ可能なエンティティを探す" tabindex="-1">指定位置にあるタッチ可能なエンティティを探す <a class="header-anchor" href="#指定位置にあるタッチ可能なエンティティを探す" aria-label="Permalink to &quot;指定位置にあるタッチ可能なエンティティを探す&quot;">​</a></h1><p>指定位置にあるタッチ可能なエンティティを探すには、<code>g.Scene#findPointSourceByPoint()</code> を利用します。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 指定座標上にタッチ可能なエンティティが存在する場合は、戻り値の target プロパティにエンティティが格納される。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pointSource </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scene.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findPointSourceByPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (pointSource.target) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 指定された座標にエンティティが存在した場合。pointSource.target は見つかったエンティティ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 存在しなかった場合</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="利用例" tabindex="-1">利用例 <a class="header-anchor" href="#利用例" aria-label="Permalink to &quot;利用例&quot;">​</a></h2><p>次のコンテンツは、画面中央の十字の位置にあるタッチ可能なエンティティを毎フレーム探し、見つかる度にそのエンティティの <code>cssColor</code> プロパティをランダムな色に変更します。</p>`,6),h=e('<h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p><code>g.Scene#findPointSourceByPoint()</code> はシーン内で引数に渡された座標にあるタッチ可能なエンティティのうち、もっとも手前にあるエンティティを戻り値の <code>target</code> プロパティに格納して返します。対象が存在しない場合は <code>target</code> プロパティが <code>undefined</code> になります。</p><p><code>g.Scene#findPointSourceByPoint()</code> の第二引数 に <code>true</code> を渡すと、タッチ可能でないものを含めてもっとも手前にあるエンティティを探します。</p><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="https://akashic-games.github.io/akashic-engine/v3/classes/Scene.html#findPointSourceByPoint" target="_blank" rel="noreferrer">API リファレンス</a></li></ul>',5);function c(p,d,k,g,E,_){const a=l("PlaygroundElement");return t(),s("div",null,[o,n(a,{gameJsonUri:"/snippets/reverse-reference/logic/find-touchable-entity/game.json",width:600,height:400}),h])}const f=i(r,[["render",c]]);export{y as __pageData,f as default};
