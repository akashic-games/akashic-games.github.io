import{_ as s,c as a,o as i,a3 as n}from"./chunks/framework.B_s5ISUx.js";const E=JSON.parse('{"title":"プレイヤーごとに異なる乱数を使う","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/multiplay/local-random.md","filePath":"reverse-reference/v3/multiplay/local-random.md"}'),l={name:"reverse-reference/v3/multiplay/local-random.md"},e=n(`<h1 id="プレイヤーごとに異なる乱数を使う" tabindex="-1">プレイヤーごとに異なる乱数を使う <a class="header-anchor" href="#プレイヤーごとに異なる乱数を使う" aria-label="Permalink to &quot;プレイヤーごとに異なる乱数を使う&quot;">​</a></h1><p>プレイヤーごとに異なる乱数を使うには、<code>g.Game#localRandom</code> を利用します。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> randomValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.game.localRandom.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0 以上 1 未満の乱数を生成。この値は各プレイヤーで異なる</span></span></code></pre></div><p>プレイヤー全員に同じ乱数を生成するには <a href="./../logic/random.html"><code>g.game.random</code></a> を利用してください。</p><h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p><code>g.game.localRandom</code> は、各プレイヤーでシード値が異なる乱数生成器です。すなわち、同じ回数生成しても、プレイヤーごとに異なる値が得られます。</p><p>Akashic Engine の乱数生成器には、他に <a href="./../logic/random.html"><code>g.game.random</code></a> があります。こちらは全プレイヤーが同じシード値を持ちます。 例えば対戦型のゲームで、ステージをランダムに生成する時は、全プレイヤーが同じデータを生成する必要があるので <code>g.game.random</code> を使います。</p><p>これに限らず、ほとんどの状況で乱数生成には <code>g.game.random</code> を使用してください。 例えば「各プレイヤーの初期ステータスを乱数で決める」ような、一見プレイヤーごとに異なる場合でも、 <code>g.game.random</code> が適当です。 Akashic Engine のマルチプレイでは「全員のデバイス上で、全プレイヤーの初期ステータスを、同じ順序で生成した乱数で決める」ことによって、状態 (初期ステータス) を共有するからです。</p><p>この例外がローカルイベントの処理です。 <strong>ローカルイベントの処理中に乱数を生成する場合は、常に <code>g.game.localRandom</code> を使用してください</strong> 。 ローカルイベントは、それを発生させたプレイヤー自身にしか通知されないイベントです。 その処理中に <code>g.game.random</code> を使ってしまうと以降の乱数の系列がずれてしまい、他プレイヤーと状態が一致しなくなってしまいます。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> localRect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FilledRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// その他のプロパティ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  local: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ローカルであることを指定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  touchable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // クリック・タッチ可能</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(localRect);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localRect.onPointDown.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 0 以上 100 未満の乱数を得る。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // localRect はローカルエンティティなので、ここで g.game.random は *使ってはならない* 。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> randomWidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.game.localRandom.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // クリック・タッチしたプレイヤーの手元でのみ、localRect の幅を変える。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 幅はプレイヤーごとに、またクリックする度に異なる値になる。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  localRect.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> randomWidth;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  localRect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">modified</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">補足</p><p>ランキングモードで動作する場合のニコ生ゲームは、実行方法が通常のマルチプレイと異なるため <code>g.game.random</code> もプレイヤーごとに異なります。詳細は<a href="/shin-ichiba/spec.html#random-seed">こちら</a>を参照してください。</p></div><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="/tutorial/v3/multiplay/each-player.html">プレイヤーごとに異なる描画を行う</a></li></ul>`,14),t=[e];function h(p,k,d,r,c,o){return i(),a("div",null,t)}const m=s(l,[["render",h]]);export{E as __pageData,m as default};
