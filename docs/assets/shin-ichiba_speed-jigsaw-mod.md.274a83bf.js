import{_ as s}from"./chunks/illust-ya-puzzle-image.24540501.js";import{_ as t,C as i,o,c as n,H as p,Q as a}from"./chunks/framework.459ab1e9.js";const r="/assets/ui_2.c8c877aa.png",l="/assets/result.c5fa2dfe.png",v=JSON.parse('{"title":"『スピードジグソー』を改造する","description":"","frontmatter":{},"headers":[],"relativePath":"shin-ichiba/speed-jigsaw-mod.md","filePath":"shin-ichiba/speed-jigsaw-mod.md"}'),c={name:"shin-ichiba/speed-jigsaw-mod.md"},h=a('<h1 id="『スピードジグソー』を改造する" tabindex="-1">『スピードジグソー』を改造する <a class="header-anchor" href="#『スピードジグソー』を改造する" aria-label="Permalink to &quot;『スピードジグソー』を改造する&quot;">​</a></h1><p><a href="./thiefBuster-mod.html">前ページ</a> では、 『泥棒バスター』の改造から動作確認・投稿の流れをご紹介しました。 ここでは改造についてもう一例、より画像差し替えがゲームに直結するサンプル『スピードジグソー』をご紹介したいと思います。</p><p class="source-info"> この文書は、 <a href="https://ch.nicovideo.jp/shin-ichiba/blomaga/ar1765844 ">https://ch.nicovideo.jp/shin-ichiba/blomaga/ar1765844</a> で公開されていた記事を調整して転載したものです。 文体などは他のページと異なることがあります。 </p><h2 id="introduction" tabindex="-1">『スピードジグソー』のご紹介 <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;『スピードジグソー』のご紹介 {#introduction}&quot;">​</a></h2><p>スピードジグソーは、制限時間つきのジグソーパズルゲームです。まずはゲームをプレイしてみましょう。</p>',5),d=a('<p>このパズルの絵を差し替えるだけで、自分オリジナルの「スピードジグソー」を作ることができます。</p><p>とはいえ絵を準備するだけではなく、少しだけプラスアルファでやらなくてはいけないことがあるので順番にやり方を追っていきましょう。</p><h2 id="install" tabindex="-1">環境の用意 <a class="header-anchor" href="#install" aria-label="Permalink to &quot;環境の用意 {#install}&quot;">​</a></h2><p>今回の改造でもやはり動作確認のために開発用ツールが必要です。 <a href="./install.html">インストール</a> の手順を参照して、 Akashic Engine の開発用ツール <code>akashic-sandbox</code>, <code>akashic-cli</code> をインストールしてください。</p><h2 id="mod" tabindex="-1">差し替え <a class="header-anchor" href="#mod" aria-label="Permalink to &quot;差し替え {#mod}&quot;">​</a></h2><p>それでは今回改造するゲームのソースコードをダウンロードしましょう！　以下の URL からダウンロードしてください。</p><p><strong><a href="https://github.com/akashic-contents/speed-jigsaw/releases/download/v1.0.2/game.zip" target="_blank" rel="noreferrer">https://github.com/akashic-contents/speed-jigsaw/releases/download/v1.0.2/game.zip</a></strong></p><p>今回は画像を差し替えてジグソーパズルの種類を変更しましょう。 スピードジグソーを解凍したフォルダの中に、ゲームに必要なリソースが一式入っています。</p><p>その中の image フォルダの中に「ui_2.png」というファイルがあります。 この絵を差し替えればゲーム内に出てくるジグソーパズルの絵も変わります。</p><p><img src="'+r+'" alt="iu_2.png"></p><p>画像は 6 枚の絵が合わさった 1 枚の画像になっています。 1 枚、250pixel×250pixel の絵素材が 6 枚必要になります。</p><p>上の画像は絵の部分のみを表示していますが、実際のフォルダの中にある画像ファイルは 1024pixcel×1024pixel に左上寄せで絵が配置してあります。</p><p>今回はいらすとやさんの画像を使ってみましょう。 配置してみました。</p><p><img src="'+s+'" alt="いらすとやさんの画像を6枚並べたもの"></p><h2 id="run" tabindex="-1">動かしてみる <a class="header-anchor" href="#run" aria-label="Permalink to &quot;動かしてみる {#run}&quot;">​</a></h2><p>ここで <a href="./install.html">インストール</a> で利用した CUI ツールを再び使います。</p><p>ここで泥棒バスターの記事内の『<a href="./thiefBuster-mod.html#get-source">ソースの用意</a>』を参照いただいて、ゲームをダウンロードした場所まで作業ディレクトリを移動 (cd) し、以下のコマンドを実行してください。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">akashic-sandbox</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">akashic-sandbox</span></span></code></pre></div><p>実行すると、『<a href="http://localhost:3000" target="_blank" rel="noreferrer">http://localhost:3000</a> にブラウザでアクセスしてください』、という趣旨のメッセージが表示されます。 上記の URL にアクセスするとブラウザ上でゲームが遊べると思います。</p><p>フォルダ内の画像が元々の画像のままだと、元のジグソーパズルの絵柄です。 ファルダ内の画像を差し替えてからブラウザをリロードするとご自身で用意した画像がジグソーパズルになっているかと思います。</p><p>パズルの絵が元の絵ではなく差し替えたものに変わっていれば改造できています！</p><p><img src="'+l+'" alt="差し替え後"></p><p>パズルの絵以外にも、タイトル等の画像も同じように差し替えることが可能です。</p><h2 id="submit" tabindex="-1">投稿 <a class="header-anchor" href="#submit" aria-label="Permalink to &quot;投稿 {#submit}&quot;">​</a></h2><p>自分だけのゲームが完成したら、実際にニコ生ゲームとして公開してみましょう！　 <a href="./submit.html">ニコ生ゲームを投稿しよう</a> を参考にぜひ投稿してみてください。</p>',25);function m(_,u,g,b,f,k){const e=i("PlaygroundElement");return o(),n("div",null,[h,p(e,{gameJsonUri:"/snippets/shin-ichiba/speed-jigsaw/game.json",width:600,height:400}),d])}const q=t(c,[["render",m]]);export{v as __pageData,q as default};
