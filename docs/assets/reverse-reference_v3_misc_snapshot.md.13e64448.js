import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.f1c0562b.js";const m=JSON.parse('{"title":"スナップショットを保存する","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/misc/snapshot.md","filePath":"reverse-reference/v3/misc/snapshot.md"}'),l={name:"reverse-reference/v3/misc/snapshot.md"},e=p(`<h1 id="スナップショットを保存する" tabindex="-1">スナップショットを保存する <a class="header-anchor" href="#スナップショットを保存する" aria-label="Permalink to &quot;スナップショットを保存する&quot;">​</a></h1><p>スナップショットを保存するには、 <code>g.game.requestSaveSnapshot()</code> を利用します。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><p>スナップショットの保存:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">g.game.</span><span style="color:#B392F0;">requestSaveSnapshot</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> snapshot </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// ゲームの実行状態を表すオブジェクト</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> { snapshot: snapshot };</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">g.game.</span><span style="color:#6F42C1;">requestSaveSnapshot</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> snapshot </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// ゲームの実行状態を表すオブジェクト</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> { snapshot: snapshot };</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>スナップショットからの復元:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// main スクリプトでエクスポートされている関数</span></span>
<span class="line"><span style="color:#6A737D;">// (game.json の &quot;main&quot; に指定されている、実行開始時に最初に実行されるスクリプトの関数)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">param</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (param.snapshot) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 引数 param に snapshot があるなら、スナップショットからの復元処理を行う。</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// param.snapshot は g.game.saveSnapshot() で過去に保存された値。</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 通常の起動処理を行う。</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// main スクリプトでエクスポートされている関数</span></span>
<span class="line"><span style="color:#6A737D;">// (game.json の &quot;main&quot; に指定されている、実行開始時に最初に実行されるスクリプトの関数)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#E36209;">param</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (param.snapshot) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 引数 param に snapshot があるなら、スナップショットからの復元処理を行う。</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// param.snapshot は g.game.saveSnapshot() で過去に保存された値。</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 通常の起動処理を行う。</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p>スナップショットを保存し、そこからの復元処理を実装することで、スキップ処理にかかる時間を短縮することができます。 スキップとは、マルチプレイの画面を途中から開いた場合などに生じる「最新フレームに追いつくための早送り」処理です。</p><p>スナップショットは、ゲームの (非ローカルな) 実行状態をすべて保存・復元しなければなりません。 詳細は Akashic Engine 入門の <a href="/tutorial/v3/multiplay/snapshot.html">スキップ時間を短縮する</a> を参照してください。</p><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="/tutorial/v3/multiplay/snapshot.html">チュートリアル</a></li><li><a href="/akashic-engine/v3/classes/Game.html#requestSaveSnapshot">API リファレンス</a></li></ul>`,12),o=[e];function t(c,r,i,E,y,h){return a(),n("div",null,o)}const u=s(l,[["render",t]]);export{m as __pageData,u as default};
