import{_ as t,c as i,o as a,a3 as s}from"./chunks/framework.DaCD_bki.js";const y=JSON.parse('{"title":"akashic init","description":"","frontmatter":{},"headers":[],"relativePath":"reference/tool/akashic-cli/init.md","filePath":"reference/tool/akashic-cli/init.md"}'),e={name:"reference/tool/akashic-cli/init.md"},n=s(`<h1 id="akashic-init" tabindex="-1">akashic init <a class="header-anchor" href="#akashic-init" aria-label="Permalink to &quot;akashic init&quot;">​</a></h1><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">akashic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [&lt;options&gt;]</span></span></code></pre></div><p>新しく Akashic で動作するゲームをカレントディレクトリに生成します。 このコマンドを実行すると、以下のような対話型のインターフェースが表示され、ゲーム画面の幅・高さおよびゲームの FPS を入力できます。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @akashic/akashic-cli</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GAME_HOME</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> akashic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">width:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (320)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">height:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (320)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fps:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (30)</span></span></code></pre></div><p>また、本コマンドは、カレントディレクトリが空でない場合、エラーで失敗することがあります。 (生成されるファイル・ディレクトリが既に存在する場合、エラーでコマンドが失敗します)。</p><p><code>&lt;options&gt;</code>に指定可能なオプションは次のとおりです。</p><table tabindex="0"><thead><tr><th style="text-align:center;">オプション</th><th style="text-align:center;">短縮名</th><th style="text-align:center;">効果</th><th style="text-align:center;">デフォルト値</th></tr></thead><tbody><tr><td style="text-align:center;"><code>--type &lt;type&gt;</code></td><td style="text-align:center;"><code>-t</code></td><td style="text-align:center;"><code>&lt;type&gt;</code> の値に応じたゲームが作成されます。詳細については後述します。</td><td style="text-align:center;"><code>javascript</code></td></tr><tr><td style="text-align:center;"><code>--force</code></td><td style="text-align:center;"><code>-f</code></td><td style="text-align:center;">生成されるファイル・ディレクトリが既に存在する場合でも、エラーにせず上書きします。</td><td style="text-align:center;">指定なし</td></tr><tr><td style="text-align:center;"><code>--yes</code></td><td style="text-align:center;"><code>-y</code></td><td style="text-align:center;">対話型インターフェースを表示せずに、デフォルトの設定でゲームを生成します。</td><td style="text-align:center;">指定なし</td></tr><tr><td style="text-align:center;"><code>--list</code></td><td style="text-align:center;"><code>-l</code></td><td style="text-align:center;"><code>--type</code> オプションで利用可能なテンプレートのリストを表示します。</td><td style="text-align:center;">指定なし</td></tr><tr><td style="text-align:center;"><code>--repository &lt;reponame&gt;</code></td><td style="text-align:center;"><code>-r</code></td><td style="text-align:center;">テンプレートを検索できるリポジトリを指定します。</td><td style="text-align:center;">指定なし</td></tr></tbody></table><h3 id="--typeオプション" tabindex="-1">--type オプション <a class="header-anchor" href="#--typeオプション" aria-label="Permalink to &quot;--type オプション {#--typeオプション}&quot;">​</a></h3><p>&lt;type&gt; に指定できる値は、 以下の通りです。指定しない場合、 <code>javascript</code> が指定されたものとして扱われます。</p><ul><li><code>javascript</code></li><li><code>javascript-minimal</code></li><li><code>javascript-shin-ichiba-ranking</code></li><li><code>typescript</code></li><li><code>typescript-minimal</code></li><li><code>typescript-shin-ichiba-ranking</code></li></ul><p>これとは別に、&lt;type&gt;に <code>github:&lt;owner&gt;/&lt;repository&gt;</code> と指定することで GitHub (github.com) からテンプレートを取得することができます。</p><p>またローカルマシン内のデータや、独自の Web サーバ上のファイルをテンプレートとして使うこともできます。</p><h4 id="javascript" tabindex="-1">javascript <a class="header-anchor" href="#javascript" aria-label="Permalink to &quot;javascript {#javascript}&quot;">​</a></h4><p>下記のディレクトリ・ファイルを含む JavaScript で書かれたゲームが生成されます。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GAME_HOME</span></span>
<span class="line"><span> +- image/</span></span>
<span class="line"><span> +- text/</span></span>
<span class="line"><span> +- audio/</span></span>
<span class="line"><span> +- script/</span></span>
<span class="line"><span>  +- main.js</span></span>
<span class="line"><span> +- game.json</span></span>
<span class="line"><span> +- package.json</span></span></code></pre></div><p><code>script/main.js</code> を編集することでゲームの作成が可能です。 これらのディレクトリ・ファイルの詳細は  <a href="#initで作られるファイル">init で作られるファイル</a>  の節を参照してください。 このゲームではサンプルとして以下のような処理が行われています。</p><ul><li>スプライトの表示</li><li>音を鳴らす</li><li>タッチイベント定義</li></ul><h4 id="javascript-minimal" tabindex="-1">javascript-minimal <a class="header-anchor" href="#javascript-minimal" aria-label="Permalink to &quot;javascript-minimal {#javascript-minimal}&quot;">​</a></h4><p>最低限の処理しか記述されていない空のゲームが生成されます。 <code>script/main.js</code> を編集することでゲームの作成が可能です。</p><h4 id="javascript-shin-ichiba-ranking" tabindex="-1">javascript-shin-ichiba-ranking <a class="header-anchor" href="#javascript-shin-ichiba-ranking" aria-label="Permalink to &quot;javascript-shin-ichiba-ranking {#javascript-shin-ichiba-ranking}&quot;">​</a></h4><p>ニコ生ゲームのランキングに対応したゲームの雛形が生成されます。 <code>script/main.js</code> を編集することでゲームの作成が可能です。基本的に <code>script/_bootstrap.js</code> を編集する必要はありません。 このゲームでは、<code>script/main.js</code> の <code>main</code> 関数の引数 <code>param</code> に以下の値が新たに付与されています。</p><ul><li><code>param.sessionParameter</code>: <a href="/shin-ichiba/spec.html#session-parameter">セッションパラメータ</a></li></ul><p>ランキングモードに対応したニコ生ゲームの作り方については、<a href="/shin-ichiba/ranking/">こちら</a>を参照してください。</p><h4 id="typescript" tabindex="-1">typescript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;typescript {#typescript}&quot;">​</a></h4><p>TypeScript で書かれたゲームと、ビルドに必要なディレクトリ・ファイルが生成されます。 これらをビルドすることで、game ディレクトリ以下に Akashic で動作するゲームを生成します。 ビルドの方法は、生成される README.md を参照してください。</p><p>ゲームの内容は、<code>--type javascript</code> を指定した場合に生成されるゲームと同一です。</p><h4 id="typescript-minimal" tabindex="-1">typescript-minimal <a class="header-anchor" href="#typescript-minimal" aria-label="Permalink to &quot;typescript-minimal {#typescript-minimal}&quot;">​</a></h4><p><code>--type tyepescript</code> と同様に、TypeScript で書かれたゲームと、ビルドに必要なディレクトリ・ファイルが生成されます。</p><p>ゲームの内容は、<code>--type javascript-minimal</code> を指定した場合に生成されるゲームと同一です。</p><h4 id="typescript-shin-ichiba-ranking" tabindex="-1">typescript-shin-ichiba-ranking <a class="header-anchor" href="#typescript-shin-ichiba-ranking" aria-label="Permalink to &quot;typescript-shin-ichiba-ranking {#typescript-shin-ichiba-ranking}&quot;">​</a></h4><p><code>--type tyepescript</code> と同様に、TypeScript で書かれたゲームと、ビルドに必要なディレクトリ・ファイルが生成されます。</p><p>ゲームの内容は、<code>--type javascript-shin-ichiba-ranking</code> を指定した場合に生成されるゲームと同一です。</p><h4 id="github-template" tabindex="-1">GitHub リポジトリからのテンプレート生成 <a class="header-anchor" href="#github-template" aria-label="Permalink to &quot;GitHub リポジトリからのテンプレート生成 {#github-template}&quot;">​</a></h4><p><code>--type github:&lt;owner&gt;/&lt;repository&gt;</code> と指定した場合、GitHub からテンプレートを取得することができます。private repository など認証が必要な場合は <code>akashic config</code> で <code>init.github.protocol</code> を <code>ssh</code> に設定してください。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">akashic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init.github.protocol</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 初回のみ。認証を必要としない場合は不要。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">akashic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github:your-orgs/your-repo</span></span></code></pre></div><p>また <code>ghe:&lt;owner&gt;/&lt;repository&gt;</code> と指定することで GitHub Enterprise からテンプレートを生成できます。 GitHub Enterprise の URL は <code>akashic config</code> により設定できます。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">akashic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init.ghe.host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your.company.com</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 初回のみ</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">akashic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ghe:your-orgs/your-repo</span></span></code></pre></div><p>akashic init では以下の設定を利用します。設定は <code>akashic config</code> コマンドを利用して行います。</p><table tabindex="0"><thead><tr><th style="text-align:center;">プロパティ名</th><th style="text-align:center;">内容</th><th style="text-align:center;">デフォルト値</th></tr></thead><tbody><tr><td style="text-align:center;">init.repository</td><td style="text-align:center;">テンプレート配信サーバの URL。空文字列の時はサーバを利用しません。</td><td style="text-align:center;">空文字列</td></tr><tr><td style="text-align:center;">init.defaultTemplateType</td><td style="text-align:center;">テンプレートの種類が省略されたときに利用するテンプレート名。</td><td style="text-align:center;"><code>javascript</code></td></tr><tr><td style="text-align:center;">init.localTemplateDirectory</td><td style="text-align:center;">ローカルファイルシステムでテンプレートを保存する場所。</td><td style="text-align:center;"><code>$HOME/.akashic-templates/</code></td></tr><tr><td style="text-align:center;">init.github.host</td><td style="text-align:center;">GitHub のホスト名。</td><td style="text-align:center;"><code>github.com</code></td></tr><tr><td style="text-align:center;">init.github.protocol</td><td style="text-align:center;">GitHub からプロジェクトを clone する際のプロトコル。https または ssh が指定可能。</td><td style="text-align:center;"><code>https</code></td></tr><tr><td style="text-align:center;">init.ghe.host</td><td style="text-align:center;">GitHub Enterprise のホスト名。</td><td style="text-align:center;">指定なし</td></tr><tr><td style="text-align:center;">init.ghe.protocol</td><td style="text-align:center;">GitHub Enterprise からプロジェクトを clone する際のプロトコル。https または ssh が指定可能。</td><td style="text-align:center;"><code>https</code></td></tr></tbody></table><h3 id="local-template" tabindex="-1">ローカルマシンや Web サーバ上のテンプレートからの生成 <a class="header-anchor" href="#local-template" aria-label="Permalink to &quot;ローカルマシンや Web サーバ上のテンプレートからの生成 {#local-template}&quot;">​</a></h3><p><a href="./../template-guide.html">開発ツール » akashic init テンプレート利用ガイド</a> を参照してください。</p><h3 id="アクセス確認と保存" tabindex="-1">アクセス確認と保存 <a class="header-anchor" href="#アクセス確認と保存" aria-label="Permalink to &quot;アクセス確認と保存&quot;">​</a></h3><p><code>-t gihtub:</code> や <code>ghe:</code>、<code>-r</code> オプションで URL へアクセスする場合はプロンプトにて確認を行います。 プロンプトにて URL へのアクセスを許可した場合は、<code>$HOME/.akashicrc</code> へ最大 4 件保存します。5 件目を保存する場合は、最初の 1 件目が削除されます。 また、保存されている値とオプションで指定された値が同じ場合は、確認のプロンプトをスキップします。</p><h2 id="initで作られるファイル" tabindex="-1">init で作られるファイル <a class="header-anchor" href="#initで作られるファイル" aria-label="Permalink to &quot;init で作られるファイル {#initで作られるファイル}&quot;">​</a></h2><p>内容はテンプレートに依存します。 <code>javascript</code> や <code>javascript-shin-ichiba-ranking</code> で生成される主なファイル・ディレクトリは以下のとおりです。</p><h3 id="imageディレクトリ" tabindex="-1">image ディレクトリ <a class="header-anchor" href="#imageディレクトリ" aria-label="Permalink to &quot;image ディレクトリ {#imageディレクトリ}&quot;">​</a></h3><p>画像素材を配置するディレクトリ。</p><p>サポートされる拡張子は png/jpg であり、拡張子と画像フォーマットは一致している必要があります。それ以外の拡張子のファイル、または &quot;.&quot; から始まるファイルは無視されます。</p><h3 id="textディレクトリ" tabindex="-1">text ディレクトリ <a class="header-anchor" href="#textディレクトリ" aria-label="Permalink to &quot;text ディレクトリ {#textディレクトリ}&quot;">​</a></h3><p>テキスト素材を配置するディレクトリ。</p><p>サポートされる拡張子は特に指定がないため、 &quot;.&quot; から始まるファイル以外はすべて取り込まれます。 <em>取り込まれないファイルを指定する方法は検討中。</em></p><h3 id="audioディレクトリ" tabindex="-1">audio ディレクトリ <a class="header-anchor" href="#audioディレクトリ" aria-label="Permalink to &quot;audio ディレクトリ {#audioディレクトリ}&quot;">​</a></h3><p>音楽、効果音など、音素材を配置するディレクトリ。</p><p>サポートされる拡張子は .ogg, .m4a と .aac であり、拡張子とファイルフォーマットは一致している必要があります。それ以外の拡張子のファイル、または &quot;.&quot; から始まるファイルは無視されます。</p><p>他の素材と異なり、音素材は、ファイル名の拡張子部分のみが異なる複数のファイルをまとめて取り扱います。 ゲームの実行環境に応じて適切な形式が自動的に選択されます。 主要な実行環境をサポートするために、次のいずれかの組み合わせでファイルを置いてください。</p><ul><li>Ogg Vorbis 形式 (.ogg) と M4A 形式 (.m4a)</li><li>Ogg Vorbis 形式 (.ogg) と AAC 形式 (.aac)</li></ul><h3 id="scriptディレクトリ" tabindex="-1">script ディレクトリ <a class="header-anchor" href="#scriptディレクトリ" aria-label="Permalink to &quot;script ディレクトリ {#scriptディレクトリ}&quot;">​</a></h3><p>スクリプト素材を配置するディレクトリ。</p><p>サポートされる拡張子は.js と.json であり、拡張子とファイルフォーマットは一致している必要があります。それ以外の拡張子のファイル、または &quot;.&quot; から始まるファイルは無視されます。</p><p>慣習として、各 Scene を実装するファイルは、このディレクトリ内に &quot;Scene.js&quot; という接尾辞をつけて配置される事が推奨されます（例: titleScene.js, battleScene.js）。</p><h3 id="main.js" tabindex="-1">main.js ファイル <a class="header-anchor" href="#main.js" aria-label="Permalink to &quot;main.js ファイル {#main.js}&quot;">​</a></h3><p>ゲームの処理が記述されているファイル。</p><p>このファイルを編集することによってゲームを作成することが可能です。</p><h3 id="bootstrap-js-ファイル-bootstrap-js" tabindex="-1">_bootstrap.js ファイル {#_bootstrap.js} <a class="header-anchor" href="#bootstrap-js-ファイル-bootstrap-js" aria-label="Permalink to &quot;\\_bootstrap.js ファイル {#\\_bootstrap.js}&quot;">​</a></h3><p><code>--type javascript-shin-ichiba-ranking</code> を指定した時(もしくは <code>--type typescript-shin-ichiba-ranking</code> を指定後ビルドした時)のみ作られるファイルです。 このファイルがエントリーポイントとなりますが、ゲーム開発者がこのファイルを編集することは基本的にありません。 ここで行っていることは、以下の通りです。</p><ul><li>セッションパラメータの取得</li><li>main.js に自動的に遷移</li></ul><h3 id="game.jsonファイル" tabindex="-1">game.json ファイル <a class="header-anchor" href="#game.jsonファイル" aria-label="Permalink to &quot;game.json ファイル {#game.jsonファイル}&quot;">​</a></h3><p>ゲームの各種情報を記述するファイル。</p><p><code>akashic init --type javascript-minimal</code> を実行した直後は以下のような内容になっています。 (ただし width, height, fps は init で指定した値)</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">480</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;height&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">480</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;fps&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;assets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;mainScene&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;script&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;script/main.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;global&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>詳細な仕様は<a href="./../../manifest/game-json.html">リファレンス » game.json の仕様</a>を参照してください。</p>`,71),l=[n];function p(h,c,r,d,o,k){return a(),i("div",null,l)}const u=t(e,[["render",p]]);export{y as __pageData,u as default};
