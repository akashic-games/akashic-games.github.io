import{_ as s,c as i,o as a,a3 as e}from"./chunks/framework.DaCD_bki.js";const n="/assets/playing-nicolive-game.Cvv8a_mh.png",t="/assets/admission-app.0CjxMNpe.png",y=JSON.parse('{"title":"ニコ生ゲーム関連の仕様","description":"","frontmatter":{},"headers":[],"relativePath":"shin-ichiba/spec.md","filePath":"shin-ichiba/spec.md"}'),l={name:"shin-ichiba/spec.md"},p=e(`<h1 id="ニコ生ゲーム関連の仕様" tabindex="-1">ニコ生ゲーム関連の仕様 <a class="header-anchor" href="#ニコ生ゲーム関連の仕様" aria-label="Permalink to &quot;ニコ生ゲーム関連の仕様&quot;">​</a></h1><p>ここまでの文書で述べたことを含め、仕様や要求事項をまとめます。</p><h2 id="supported-modes" tabindex="-1">モード <a class="header-anchor" href="#supported-modes" aria-label="Permalink to &quot;モード {#supported-modes}&quot;">​</a></h2><p>ニコ生ゲームでは、 game.json に <code>environment.nicolive.supportedModes</code> の値が定義されている必要があります。</p><p>この値は文字列の配列でなければなりません。 配列の各要素は、次のいずれかでなければなりません。</p><ul><li><code>&quot;single&quot;</code> - ひとりプレイモードに対応する場合</li><li><code>&quot;ranking&quot;</code> - ランキングモードに対応する場合</li><li><code>&quot;multi_admission&quot;</code> - マルチプレイモードに対応する場合</li><li><code>&quot;multi&quot;</code> - マルチプレイモードに対応する場合で、起動時にプレイヤー募集をしない場合</li></ul><p>ひとりプレイモードで起動された場合、操作できるのは放送者だけになります。視聴者には放送者と同じ画面が表示されます。</p><p>ランキングモードで起動された場合、一人プレイのゲームが放送者と視聴者全員の手元で起動され、一定時間で自動的に終了したのちスコアが集計されます。 詳細は <a href="./ranking/">ニコ生ゲームを作ろう » ランキングゲーム</a> を参照してください。</p><p>マルチプレイモードで起動された場合、同じゲームの一つのプレイで放送者と各視聴者が操作できます。 詳細は <a href="./multi/">ニコ生ゲームを作ろう » マルチプレイゲーム</a> を参照してください。</p><p><code>&quot;multi_admission&quot;</code> と <code>&quot;multi&quot;</code> は排他的です。両方を指定した場合、 <code>&quot;multi&quot;</code> は無視されます。</p><p><code>&quot;ranking&quot;</code> または <code>&quot;multi_admission&quot;</code> の場合、ゲーム起動時に <a href="#admission">プレイヤーの募集</a> が行われます。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>後方互換性のため、当面の間 <code>environment.nicolive</code> の代わりに <code>environment.niconico</code> でも動作します。 <code>niconico</code> と <code>nicolive</code> が両方指定されている場合、 <code>niconico</code> 側の指定は無視されます。</p></div><h2 id="resolution-and-fps" tabindex="-1">解像度と FPS <a class="header-anchor" href="#resolution-and-fps" aria-label="Permalink to &quot;解像度と FPS {#resolution-and-fps}&quot;">​</a></h2><p>次の値である必要があります。</p><ul><li><strong>画面解像度</strong>: 1280x720 以下 (16:9 を推奨)</li><li><strong>FPS</strong>: 1 以上 60 以下 (30 または 60 を推奨)</li></ul><p>ニコニコ生放送内のゲームは放送画面に合うよう自動的に拡縮されます。放送画面上で縦横に余白なく表示できるよう、アスペクト比 16:9 を推奨します。公開されているいくつかのサンプルコンテンツ(<a href="https://github.com/akashic-contents/thiefBuster" target="_blank" rel="noreferrer">泥棒バスター</a>など))は、640x360 で作成されています。</p><h2 id="size" tabindex="-1">ファイルサイズ <a class="header-anchor" href="#size" aria-label="Permalink to &quot;ファイルサイズ {#size}&quot;">​</a></h2><p>次の条件を満たす必要があります。</p><ul><li><strong>zip 圧縮前の合計サイズ</strong>: 30MB 以下</li><li><strong>game.json のサイズ</strong>: 100KB 以下</li></ul><h2 id="ranking" tabindex="-1">ランキングゲームの gameState <a class="header-anchor" href="#ranking" aria-label="Permalink to &quot;ランキングゲームの gameState {#ranking}&quot;">​</a></h2><p><code>supportedModes</code> に <code>&quot;ranking&quot;</code> を指定するゲームでは、 <code>g.game.vars.gameState</code> が特別な意味を持ちます。</p><h3 id="score" tabindex="-1">スコア <a class="header-anchor" href="#score" aria-label="Permalink to &quot;スコア {#score}&quot;">​</a></h3><p>ランキングゲームは、ゲームの進行中、次の変数に <strong>スコア</strong> を代入しなければなりません。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.game.vars.gameState.score;</span></span></code></pre></div><p>スコアは 0 以上の整数でなければなりません。 上限はありませんが 99999 以下を推奨します。</p><p>ランキングモードでは <code>g.game.vars.gameState.score</code> の値をスコアとして扱い、ゲームの終了後、このスコアに基づいてランキングの順位が決定されます。</p><p>テンプレートでは以下のようにスコアを付与する処理が記述されています。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scene </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ game: g.game });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.game.vars.gameState </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { score: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene.onLoad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 制限時間</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // フォントの生成</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> font </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DynamicFont</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    game: g.game,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fontFamily: g.FontFamily.Serif,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    size: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">48</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // スコア表示用のラベル</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scoreLabel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    scene: scene,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SCORE: 0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    font: font,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fontSize: font.size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    textColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;black&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  scene.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scoreLabel);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  scene.onPointDownCapture.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 制限時間以内であればゲーム画面のタッチ1回ごとにSCOREに+1します</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      g.game.vars.gameState.score</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      scoreLabel.text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;SCORE: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.game.vars.gameState.score;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      scoreLabel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">invalidate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="play-threshold" tabindex="-1">プレイ閾値 <a class="header-anchor" href="#play-threshold" aria-label="Permalink to &quot;プレイ閾値 {#play-threshold}&quot;">​</a></h3><p>ランキングゲームでは <strong>プレイ閾値</strong> を定めることができます。 プレイ閾値以下のスコアは「プレイしなかったもの」として扱われ、ランキング上位者として表示されなくなります。 プレイ閾値は、次の変数に代入された値です。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.game.vars.gameState.playThreshold;</span></span></code></pre></div><p>値は整数でなければなりません。この変数に値が代入されていない場合、プレイ閾値は 0 として取り扱われます。 生存期間に応じてスコアが入るなど、プレイヤーが何も操作しなくてもスコアが 0 より大きくなってしまうゲームでは、この値を適切に設定してください。</p><p>この値は、ゲームに参加した人数が少ない場合に「全くプレイしていないのにランキングに名前が出ることがある」という違和感のある挙動を避けるために提供されています。</p><h3 id="clear-threshold" tabindex="-1">クリア閾値 <a class="header-anchor" href="#clear-threshold" aria-label="Permalink to &quot;クリア閾値 {#clear-threshold}&quot;">​</a></h3><p>同様に「ゲームをクリアしたとみなすか」にも閾値(クリア閾値)を定めることができます。クリア閾値は次の変数に代入された値です。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.game.vars.gameState.clearThreshold;</span></span></code></pre></div><p>ただしこの値は将来の拡張のために予約されているものです。現在のところ参照されません。</p><h2 id="session-parameter" tabindex="-1">セッションパラメータ <a class="header-anchor" href="#session-parameter" aria-label="Permalink to &quot;セッションパラメータ {#session-parameter}&quot;">​</a></h2><p>実行時、ニコ生ゲームにはいくつかの追加情報が与えられます:</p><ul><li>どのサービスで実行されているか</li><li>どのモードで起動されたか</li><li>ランキングモード時の制限時間</li><li>ランキングモード時の共通乱数シード など</li></ul><p>これらの追加情報(またはそれをまとめたオブジェクト)を <strong>セッションパラメータ</strong> と呼びます。</p><p>セッションパラメータは、与えられる場合、ゲーム開始直後に <code>g.MessageEvent</code> で通知されます。通知された <code>MessageEvent</code> を <code>e</code> とすると、 <code>(e.data.type === &quot;start&quot;)</code> である時、 <code>e.data.parameters</code> の値がセッションパラメータです。</p><p>次のコードは、セッションパラメータを取得する例です。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scene </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ game: g.game });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 何も送られて来なかった時は、空のオブジェクトで動作する</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sessionParameters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene.onMessage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (msg.data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg.data.type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;start&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg.data.parameters) { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// セッションパラメータのイベント</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		sessionParameters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg.data.parameters;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene.onLoad.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// 通常のゲームとしての初期化処理</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>セッションパラメータが与えられない場合には、そもそもこのイベントが来ないか、あるいは来たイベントに <code>parameters</code> がありません。</p><p>Akashic Engine では通常、イベントはシーンのロードタイミング(<code>g.Scene#loaded</code>)より後に受信されるため、 <code>loaded</code> の処理中にはこの値を参照できないことに注意してください。これは仕様による制限です。</p><p>厳密にセッションパラメータの受信を待って <code>loaded</code> の初期化処理を行いたい場合は、 <code>loaded</code> ではなく <code>message</code> トリガーの fire を待って処理を行う必要があります。 (ただしそうするとセッションパラメータが送られない環境では動作しないコンテンツになってしまうので、「 <code>g.Scene#update</code> の fire を数回待ってもこなければデフォルト値で開始する」などの対応も検討してください。)</p><h3 id="service" tabindex="-1">サービス (service) <a class="header-anchor" href="#service" aria-label="Permalink to &quot;サービス (service) {#service}&quot;">​</a></h3><p>セッションパラメータ <code>sessionParameters</code> がある時、 <code>sessionParameters.service</code> は実行環境を表す値です。</p><p>この値は将来の拡張のために用意されています。ニコ生ゲームの場合、値は常に <code>&quot;nicolive&quot;</code> です。</p><h3 id="mode" tabindex="-1">モード (mode) <a class="header-anchor" href="#mode" aria-label="Permalink to &quot;モード (mode) {#mode}&quot;">​</a></h3><p>セッションパラメータ <code>sessionParameters</code> がある時、 <code>sessionParameters.mode</code> で <strong>モード</strong> を参照できます。</p><p>この値は game.json の <code>environment.nicolive.supportedModes</code> (旧仕様で投稿した場合は <code>environment.niconico.supportedModes</code>) に記述した文字列のいずれかで、実際にゲームが起動されたモードを表します。 例えば、 <code>&quot;single&quot;</code> が送られてきたら「ひとりで遊ぶ」モードで、 <code>&quot;ranking&quot;</code> が送られてきたら「ランキング」モードで、ゲームが起動されています。</p><h3 id="total-time-limit" tabindex="-1">制限時間 (totalTimeLimit) <a class="header-anchor" href="#total-time-limit" aria-label="Permalink to &quot;制限時間 (totalTimeLimit) {#total-time-limit}&quot;">​</a></h3><p>セッションパラメータ <code>sessionParameters</code> がある時、 <code>sessionParameters.totalTimeLimit</code> の値は <strong>制限時間</strong> です。</p><p>この値はランキングモードの場合にのみ与えられます。与えられる場合、この値は秒数を表す整数です。 ランキングゲームは、起動からこの時間が経過した後、自動的に終了されます。</p><p><strong>この値はあくまでも目安であることに注意してください</strong> 。ゲーム起動後、厳密にこの時間で終了されることを保証するものではありません。 これはゲームリソースのダウンロード時間のばらつきや、スコア送信時の通信遅れを救済するためのサーバ側の多少のマージンなど、いくつかの要因でずれが生じるためです。</p><p>たとえば制限時間から逆算して「クリア画面」を作るような場合、念のため、<strong>制限時間の数秒前にはゲーム上の演出が完了するように作る</strong> ことを推奨します。</p><h3 id="random-seed" tabindex="-1">共通乱数シード (randomSeed) <a class="header-anchor" href="#random-seed" aria-label="Permalink to &quot;共通乱数シード (randomSeed) {#random-seed}&quot;">​</a></h3><p>セッションパラメータ <code>sessionParameters</code> がある時、 <code>sessionParameters.randomSeed</code> の値は <strong>共通乱数シード</strong> です。</p><p>この値はランキングモードの場合にのみ与えられます。与えられる場合、この値は整数です。</p><p>ランキングモードでは、各プレイヤーの手元で個別にゲームが実行されます。 そのため、プレイヤー間で標準の乱数生成器 (<code>g.game.random</code>) の結果は一致しません。 ゲーム開発者はこの値を使って、プレイヤー間で共通のシードを持つ乱数生成器(共通乱数生成器)を作ることができます。</p><p>共通乱数生成器を作る場合、共通にしたい乱数(クイズの出題順など)以外に使わないように注意してください。 例えばユーザ操作などに応じて共通乱数生成器を使うと、乱数の系列が他のプレイヤーとずれてしまって元も子もありません。</p><h3 id="difficulty" tabindex="-1">難易度設定 (difficulty) <a class="header-anchor" href="#difficulty" aria-label="Permalink to &quot;難易度設定 (difficulty) {#difficulty}&quot;">​</a></h3><p>セッションパラメータ <code>sessionParameters</code> がある時、 <code>sessionParameters.difficulty</code> の値は <strong>難易度設定</strong> です。</p><p>与えられる場合、1 以上 10 以下の整数です。 この値は、ゲームに対して「この難易度でゲームを行なって欲しい」という要望を通知するものです。 ゲーム開発者はこの値を見てゲームの難易度を調整することができます。これは必須ではありません。</p><p>(ただし、現時点ではゲーム起動時に難易度を選択する方法がありません。したがってこれは現在のところ「将来的な対応に備えて利用することができる値」に過ぎません。)</p><h3 id="game-time-limit" tabindex="-1">旧仕様: gameTimeLimit <a class="header-anchor" href="#game-time-limit" aria-label="Permalink to &quot;旧仕様: gameTimeLimit {#game-time-limit}&quot;">​</a></h3><p>セッションパラメータ <code>sessionParameters</code> がある時、 <code>sessionParameters.gameTimeLimit</code> の値が与えられることがあります。</p><p>この値は後方互換性のために残されているものです。 <code>totalTimeLimit</code> を利用してください。</p><h2 id="preferred-session-parameters" tabindex="-1">preferredSessionParameters <a class="header-anchor" href="#preferred-session-parameters" aria-label="Permalink to &quot;preferredSessionParameters {#preferred-session-parameters}&quot;">​</a></h2><p>ニコ生ゲームの game.json に <code>environment.nicolive.preferredSessionParameters</code> フィールドがある場合、 その内容はコンテンツにとって望ましいセッションパラメータの値として解釈されます。</p><p><code>preferredSessionParameters</code> は、与えられる場合、オブジェクトでなければなりません。 そのプロパティとして指定できるものは次の通りです:</p><table tabindex="0"><thead><tr><th style="text-align:center;">プロパティ</th><th style="text-align:center;">値</th><th style="text-align:left;">説明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>totalTimeLimit</code></td><td style="text-align:center;">20 以上 200 以下の整数</td><td style="text-align:left;"><code>&quot;ranking&quot;</code> モードで与えられる <code>totalTimeLimit</code> の値</td></tr></tbody></table><p>この値はあくまでも参考値として扱われます。 実際に渡されるセッションパラメータが、ここで指定した値と同じである保証はありません。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>後方互換性のため、 <code>environment.nicolive</code> がなく <code>environment.niconico</code> がある場合、そちらが参照されます。</p></div><h2 id="admission" tabindex="-1">プレイヤーの募集 <a class="header-anchor" href="#admission" aria-label="Permalink to &quot;プレイヤーの募集 {#admission}&quot;">​</a></h2><p><code>&quot;ranking&quot;</code>, <code>&quot;multi_admission&quot;</code> モードのニコ生ゲームは、ゲームの実際の起動に先立ってプレイヤーの募集が行われます。 これはニコニコ生放送の <a href="https://site.live.nicovideo.jp/recent/namagame.html" target="_blank" rel="noreferrer">生ゲームプレイ中</a> ページの「視聴者を待っている番組」欄に配信を掲出します。</p><p><img src="`+n+'" alt="視聴者を待っている画面ページ"></p><p>募集中は次のような画面が表示されます。放送者は任意のタイミングで募集を打ち切ってゲームを開始することができます。</p><p><img src="'+t+'" alt="プレイヤー募集画面"></p><p>プレイヤー募集は設定したモードに従って自動的に行われます。 またゲームの外部で、起動前に行われるため、ゲーム内での特別な対応は不要です。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>プレイヤー募集は、あくまでも配信外から視聴者 (プレイヤーの候補) を募集する (＝「生ゲームプレイ中」ページに掲出する) 機能であることに注意してください。</p><p>オンラインゲームのいわゆるマッチング機能のようなものではなく、何人集まったか、誰が集まったかなどの情報がゲームに与えられることはありません。 ゲーム側での特別な対応なしにプレイヤー募集を利用できるのはこのためです。</p><p>たとえばゲームの内容的に人数制限があり、参加者と観戦者を分けるようなゲームでは、ゲーム内で改めて参加者を募る必要があります。(配信内での &quot;参加者&quot; の募集)</p></div>',83),h=[p];function o(r,d,k,c,E,g){return a(),i("div",null,h)}const u=s(l,[["render",o]]);export{y as __pageData,u as default};
