import{_ as a,o as s,c as e,Q as n}from"./chunks/framework.f1c0562b.js";const g=JSON.parse('{"title":"ゲームに紐づけて情報を保持する","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/logic/game-vars.md","filePath":"reverse-reference/v3/logic/game-vars.md"}'),l={name:"reverse-reference/v3/logic/game-vars.md"},p=n(`<h1 id="ゲームに紐づけて情報を保持する" tabindex="-1">ゲームに紐づけて情報を保持する <a class="header-anchor" href="#ゲームに紐づけて情報を保持する" aria-label="Permalink to &quot;ゲームに紐づけて情報を保持する&quot;">​</a></h1><p>ゲームに紐づけて情報を保持するには、 <code>g.game.vars</code> を利用します。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 例: ゲームの参加プレイヤー情報を保持する配列を持たせる</span></span>
<span class="line"><span style="color:#E1E4E8;">g.game.vars.players </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 「プレイヤーが参加ボタンを押した」などの際にプレイヤーを追加する</span></span>
<span class="line"><span style="color:#E1E4E8;">g.game.vars.players.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  playerId: </span><span style="color:#9ECBFF;">&quot;(プレイヤーID)&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  score: </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 例: ゲームの参加プレイヤー情報を保持する配列を持たせる</span></span>
<span class="line"><span style="color:#24292E;">g.game.vars.players </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 「プレイヤーが参加ボタンを押した」などの際にプレイヤーを追加する</span></span>
<span class="line"><span style="color:#24292E;">g.game.vars.players.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  playerId: </span><span style="color:#032F62;">&quot;(プレイヤーID)&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  score: </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>シーンに紐づけて情報を保持する場合は、<a href="./scene-vars.html"><code>g.Scene#vars</code></a>を利用してください。</p><h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p><code>g.game.vars</code> は、ゲームエンジンのロジックからは参照されず、ゲーム開発者は任意の目的で使用できます。初期値は空のオブジェクトです。</p><p>ただし、ニコ生ゲームにおいては <code>g.game.vars.gameState</code> は特別な意味を持ちます。詳細は<a href="/shin-ichiba/ranking/ranking-by-template.html#handle-score">テンプレートでわかるランキングゲーム</a> を参照してください。</p><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="/akashic-engine/v3/classes/Game.html#vars">API リファレンス</a></li></ul>`,10),o=[p];function r(c,t,i,d,h,y){return s(),e("div",null,o)}const m=a(l,[["render",r]]);export{g as __pageData,m as default};
