import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.459ab1e9.js";const F=JSON.parse('{"title":"音を鳴らす","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial/v3/audio.md","filePath":"tutorial/v3/audio.md"}'),o={name:"tutorial/v3/audio.md"},l=p(`<h1 id="音を鳴らす" tabindex="-1">音を鳴らす <a class="header-anchor" href="#音を鳴らす" aria-label="Permalink to &quot;音を鳴らす&quot;">​</a></h1><p>このページのサンプルコードを<a class="asset--material--download" href="/zip/tutorial/v3/sample-audio.zip">ダウンロード</a></p><h2 id="se-gbgm" tabindex="-1">効果音と BGM <a class="header-anchor" href="#se-gbgm" aria-label="Permalink to &quot;効果音と BGM {#se-gbgm}&quot;">​</a></h2><p>Akashic Engine のゲームで音を鳴らす場合は、一つの効果音や音楽につき次のいずれかの組み合わせのファイルを用意する必要があります。 これは、Web ページで音を再生する際に、利用可能な形式がブラウザごとに異なっているためです。</p><ul><li>Ogg Vorbis 形式 (.ogg) と M4A 形式 (.m4a)</li><li>Ogg Vorbis 形式 (.ogg) と AAC 形式 (.aac)</li></ul><p>ファイルが用意できたら <code>se1.ogg</code> と <code>se1.m4a</code> を <code>audio</code> ディレクトリに配置して、 <code>akashic scan</code> コマンドでアセットとして追加します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">akashic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">scan</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">asset</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">akashic</span><span style="color:#24292E;"> </span><span style="color:#032F62;">scan</span><span style="color:#24292E;"> </span><span style="color:#032F62;">asset</span></span></code></pre></div><p>音声アセットはアセットの <code>play()</code> メソッドを呼び出して再生します。例えばファイルパスが <code>&quot;/audio/se1&quot;</code> の場合は、以下のコードで再生できます。 オーディオアセットの場合は拡張子抜きのファイルパスを指定することに注意してください。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">scene.asset.</span><span style="color:#B392F0;">getAudio</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/audio/se1&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">play</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">scene.asset.</span><span style="color:#6F42C1;">getAudio</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/audio/se1&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">play</span><span style="color:#24292E;">();</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>アセット ID で指定する場合は、以下のコードで再生できます。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">scene.asset.</span><span style="color:#B392F0;">getAudio</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;se1&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">play</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">scene.asset.</span><span style="color:#6F42C1;">getAudio</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;se1&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">play</span><span style="color:#24292E;">();</span></span></code></pre></div></div><p>シーンで効果音を利用するには、他のアセットと同じようにシーンオブジェクトのパラメータオブジェクトにアセットのファイルパスを指定します。以下は画像のタップまたはクリックで効果音を再生する例です。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">scene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    game: g.game,</span></span>
<span class="line"><span style="color:#E1E4E8;">    assetPaths: [</span><span style="color:#9ECBFF;">&quot;/audio/se1&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">  scene.onLoad.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sprite</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 必要なプロパティ</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    sprite.onPointDown.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      scene.asset.</span><span style="color:#B392F0;">getAudio</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/audio/se1&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">play</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">  g.game.</span><span style="color:#B392F0;">pushScene</span><span style="color:#E1E4E8;">(scene);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> main;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">scene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    game: g.game,</span></span>
<span class="line"><span style="color:#24292E;">    assetPaths: [</span><span style="color:#032F62;">&quot;/audio/se1&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  scene.onLoad.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sprite</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">...</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 必要なプロパティ</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"><span style="color:#24292E;">    sprite.onPointDown.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      scene.asset.</span><span style="color:#6F42C1;">getAudio</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/audio/se1&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">play</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  g.game.</span><span style="color:#6F42C1;">pushScene</span><span style="color:#24292E;">(scene);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> main;</span></span></code></pre></div><p>Akashic Engine では音声を自動的にループ再生させることで BGM を実現します。 BGM をループ再生させるには、<code>game.json</code> を編集して該当アセットの <code>systemId</code> プロパティの値を <code>music</code> に変更します。</p><p>例えば BGM として利用したいアセットの ID が <code>bgm</code> の場合、 <code>akashic scan</code> 直後は <code>game.json</code> の対応箇所は次のようになっています。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;bgm&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;audio&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;path&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;audio/bgm&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;systemId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;sound&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;duration&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8000</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;bgm&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;audio&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;path&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;audio/bgm&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;systemId&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;sound&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;duration&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8000</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>この部分を編集して以下のように <code>&quot;systemId&quot;: &quot;music&quot;</code> を指定します。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;bgm&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;audio&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;path&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;audio/bgm&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;systemId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;music&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;duration&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8000</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;bgm&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;audio&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;path&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;audio/bgm&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;systemId&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;music&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;duration&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8000</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>BGM も <code>play()</code> メソッドで再生を開始します。 BGM は自動的にループ再生されるので、<code>play()</code> メソッドはシーンロード時に一度だけ呼び出します。</p><p>以下のプログラムは上で出てきた効果音再生プログラムに BGM を追加したものです。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Google Chrome や iOS 上の Safari ではユーザ操作 (クリックなど) があるまで音が鳴らないという仕様があります。ゲームの開始直後から BGM を再生するような場合は最初に一度以上ユーザ操作 (クリックなど) をさせるような作りにしてください。詳細は <a href="/tips/common-pitfalls.html#audio-problem">Tips » よくある落とし穴 » 一部の環境でゲーム開始時に自動的に音声が再生されない</a> を参照してください。</p></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">scene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    game: g.game,</span></span>
<span class="line"><span style="color:#E1E4E8;">    assetPaths: [</span><span style="color:#9ECBFF;">&quot;/audio/**/*&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">  scene.onLoad.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sprite</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 必要なプロパティ</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    sprite.onPointDown.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      scene.asset.</span><span style="color:#B392F0;">getAudio</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/audio/se1&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">play</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">    scene.onPointDownCapture.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      scene.asset.</span><span style="color:#B392F0;">getAudio</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/audio/bgm&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">play</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">  g.game.</span><span style="color:#B392F0;">pushScene</span><span style="color:#E1E4E8;">(scene);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> main;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">scene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    game: g.game,</span></span>
<span class="line"><span style="color:#24292E;">    assetPaths: [</span><span style="color:#032F62;">&quot;/audio/**/*&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  scene.onLoad.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sprite</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">...</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 必要なプロパティ</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"><span style="color:#24292E;">    sprite.onPointDown.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      scene.asset.</span><span style="color:#6F42C1;">getAudio</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/audio/se1&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">play</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">    scene.onPointDownCapture.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      scene.asset.</span><span style="color:#6F42C1;">getAudio</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/audio/bgm&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">play</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  g.game.</span><span style="color:#6F42C1;">pushScene</span><span style="color:#24292E;">(scene);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> main;</span></span></code></pre></div>`,21),e=[l];function t(c,r,E,y,i,d){return a(),n("div",null,e)}const g=s(o,[["render",t]]);export{F as __pageData,g as default};
