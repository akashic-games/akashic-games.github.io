import{_ as e,C as n,o,c as l,H as t,Q as s}from"./chunks/framework.f1c0562b.js";const g=JSON.parse('{"title":"指定位置にあるタッチ可能なエンティティを探す","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/logic/find-touchable-entity.md","filePath":"reverse-reference/v3/logic/find-touchable-entity.md"}'),p={name:"reverse-reference/v3/logic/find-touchable-entity.md"},c=s(`<h1 id="指定位置にあるタッチ可能なエンティティを探す" tabindex="-1">指定位置にあるタッチ可能なエンティティを探す <a class="header-anchor" href="#指定位置にあるタッチ可能なエンティティを探す" aria-label="Permalink to &quot;指定位置にあるタッチ可能なエンティティを探す&quot;">​</a></h1><p>指定位置にあるタッチ可能なエンティティを探すには、<code>g.Scene#findPointSourceByPoint()</code> を利用します。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 指定座標上にタッチ可能なエンティティが存在する場合は、戻り値の target プロパティにエンティティが格納される。</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> pointSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scene.</span><span style="color:#B392F0;">findPointSourceByPoint</span><span style="color:#E1E4E8;">({ x: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, y: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (pointSource.target) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 指定された座標にエンティティが存在した場合。pointSource.target は見つかったエンティティ</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 存在しなかった場合</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 指定座標上にタッチ可能なエンティティが存在する場合は、戻り値の target プロパティにエンティティが格納される。</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> pointSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scene.</span><span style="color:#6F42C1;">findPointSourceByPoint</span><span style="color:#24292E;">({ x: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, y: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> });</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (pointSource.target) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 指定された座標にエンティティが存在した場合。pointSource.target は見つかったエンティティ</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 存在しなかった場合</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="利用例" tabindex="-1">利用例 <a class="header-anchor" href="#利用例" aria-label="Permalink to &quot;利用例&quot;">​</a></h2><p>次のコンテンツは、画面中央の十字の位置にあるタッチ可能なエンティティを毎フレーム探し、見つかる度にそのエンティティの <code>cssColor</code> プロパティをランダムな色に変更します。</p>`,6),r=s('<h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p><code>g.Scene#findPointSourceByPoint()</code> はシーン内で引数に渡された座標にあるタッチ可能なエンティティのうち、もっとも手前にあるエンティティを戻り値の <code>target</code> プロパティに格納して返します。対象が存在しない場合は <code>target</code> プロパティが <code>undefined</code> になります。</p><p><code>g.Scene#findPointSourceByPoint()</code> の第二引数 に <code>true</code> を渡すと、タッチ可能でないものを含めてもっとも手前にあるエンティティを探します。</p><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="/akashic-engine/v3/classes/Scene.html#findPointSourceByPoint">API リファレンス</a></li></ul>',5);function i(d,y,E,h,u,_){const a=n("PlaygroundElement");return o(),l("div",null,[c,t(a,{gameJsonUri:"/snippets/reverse-reference/logic/find-touchable-entity/game.json",width:600,height:400}),r])}const P=e(p,[["render",i]]);export{g as __pageData,P as default};
