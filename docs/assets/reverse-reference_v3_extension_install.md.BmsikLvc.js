import{_ as a,c as s,o as i,a3 as e}from"./chunks/framework.DaCD_bki.js";const u=JSON.parse('{"title":"拡張ライブラリを導入する","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/extension/install.md","filePath":"reverse-reference/v3/extension/install.md"}'),n={name:"reverse-reference/v3/extension/install.md"},t=e(`<h1 id="拡張ライブラリを導入する" tabindex="-1">拡張ライブラリを導入する <a class="header-anchor" href="#拡張ライブラリを導入する" aria-label="Permalink to &quot;拡張ライブラリを導入する&quot;">​</a></h1><p>拡張ライブラリを導入するには <code>akashic</code> コマンドの <code>akashic install</code> を利用します。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">akashic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @akashic-extension/akashic-timeline</span></span></code></pre></div><p>インストールしたライブラリの利用方法は、各ライブラリの README などを参照してください。</p><h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p><code>akashic install</code> コマンドは <code>game.json</code> の置かれているディレクトリでコマンドを実行します。</p><p>このコマンドは、内部的に <code>npm install --save -save-exact</code> を実行することで、拡張ライブラリを <code>node_modules</code> ディレクトリにダウンロード・インストールします。さらに、インストールされた拡張ライブラリの情報(ファイルパスなど)を game.json に書き込みます。これは、Akashic コンテンツでは、予めすべてのリソースへのパスが game.json に書き込まれている必要があるためです。これによりコンテンツ内から <code>require()</code> を使って拡張ライブラリを読み込めるようになります。</p><p><code>akashic-timeline</code> の拡張ライブラリをコンテンツに追加すると、<code>game.json</code> には以下のような記述が追加されます。<code>game.json</code> に追加される記述についてはゲーム開発者が意識する必要はありません。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">	...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	&quot;globalScripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&quot;node_modules/@akashic-extension/akashic-timeline/lib/ActionType.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&quot;node_modules/@akashic-extension/akashic-timeline/lib/Easing.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&quot;node_modules/@akashic-extension/akashic-timeline/lib/Timeline.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&quot;node_modules/@akashic-extension/akashic-timeline/lib/Tween.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&quot;node_modules/@akashic-extension/akashic-timeline/lib/index.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	&quot;moduleMainScripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">		&quot;@akashic-extension/akashic-timeline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node_modules/@akashic-extension/akashic-timeline/lib/index.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>公式に提供されている Akashic 向け拡張ライブラリには次のようなものがあります。</p><ul><li><a href="https://github.com/akashic-games/akashic-animation" target="_blank" rel="noreferrer">akashic-animation</a>: Akashic Engine 用のアニメーションライブラリです。</li><li><a href="https://github.com/akashic-games/akashic-box2d" target="_blank" rel="noreferrer">akashic-box2d</a>: 2D 物理演算ライブラリである Box2DWeb を Akashic で利用するためのモジュールです。</li><li><a href="https://github.com/akashic-games/akashic-hover-plugin" target="_blank" rel="noreferrer">akashic-hover-plugin</a>: Akashic でマウスホバー可能なエンティティを利用することができるプラグインです。</li><li><a href="https://github.com/akashic-games/akashic-label" target="_blank" rel="noreferrer">akashic-label</a>:Akashic Engine 用のテキスト描画ライブラリです。</li><li><a href="https://github.com/akashic-games/akashic-tile" target="_blank" rel="noreferrer">akashic-tile</a>: Akashic Engine 用のタイルマップ描画ライブラリです。</li><li><a href="https://github.com/akashic-games/akashic-timeline" target="_blank" rel="noreferrer">akashic-timeline</a>:Akashic Engine 用のトゥイーンアニメーションライブラリです。</li><li><a href="https://github.com/akashic-games/collision-js" target="_blank" rel="noreferrer">collision-js</a>: 算術ライブラリを含むコリジョンライブラリです。</li><li><a href="https://github.com/akashic-games/raycaster-js" target="_blank" rel="noreferrer">raycaster-js</a>: raycasting 法によってタイルマップを 3D 描画するソフトウェアレンダラーです。</li></ul><p>公式で公開されている Akashic Engine 向け拡張ライブラリ以外のライブラリを利用する場合は、それら各ライブラリの利用条件・ライセンスにも従う必要があります。</p><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="/tutorial/v3/library.html">拡張ライブラリを使う</a></li></ul>`,15),l=[t];function h(o,r,c,k,p,d){return i(),s("div",null,l)}const E=a(n,[["render",h]]);export{u as __pageData,E as default};
