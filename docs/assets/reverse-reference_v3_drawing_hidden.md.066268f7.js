import{_ as e,C as n,o as p,c as o,H as l,Q as s}from"./chunks/framework.f1c0562b.js";const _=JSON.parse('{"title":"非表示にする","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/drawing/hidden.md","filePath":"reverse-reference/v3/drawing/hidden.md"}'),c={name:"reverse-reference/v3/drawing/hidden.md"},t=s(`<h1 id="非表示にする" tabindex="-1">非表示にする <a class="header-anchor" href="#非表示にする" aria-label="Permalink to &quot;非表示にする&quot;">​</a></h1><p>エンティティは <code>hidden</code> プロパティ、もしくは <code>hide()</code> で非表示状態にできます。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> sprite </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">,      </span><span style="color:#6A737D;">// その他のプロパティ</span></span>
<span class="line"><span style="color:#E1E4E8;">  hidden: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 非表示にした状態で生成する</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> sprite </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">,      </span><span style="color:#6A737D;">// その他のプロパティ</span></span>
<span class="line"><span style="color:#24292E;">  hidden: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 非表示にした状態で生成する</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sprite.</span><span style="color:#B392F0;">hide</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 非表示状態にする。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">sprite.</span><span style="color:#6F42C1;">hide</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 非表示状態にする。</span></span></code></pre></div><p>エンティティ追加時から非表示にするには、エンティティ生成時に <code>hidden</code> プロパティを <code>true</code> に設定します。表示状態のエンティティを非表示にするには、<code>hide()</code> を利用します。 <code>hide()</code> 利用時には <code>modified()</code> を呼び出す必要はありません。</p><h2 id="利用例" tabindex="-1">利用例 <a class="header-anchor" href="#利用例" aria-label="Permalink to &quot;利用例&quot;">​</a></h2><p>次のコンテンツは画像が非表示で表示され、シーンをクリックするごとに画像の表示・非表示が切り替わります。</p>`,8),r=s(`<h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p>エンティティを非表示状態にするには <code>hidden</code> プロパティ、もしくは <code>hide()</code> を利用します。</p><p>エンティティが非表示状態の時は <code>pointDown</code>, <code>pointMove</code>, <code>pointUp</code> などのイベントも利用できなくなります。</p><p>下記のコードでは、生成した <code>Sprite</code> は 非表示状態で描画されます。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> sprite </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  scene: scene,</span></span>
<span class="line"><span style="color:#E1E4E8;">  src: scene.asset.</span><span style="color:#B392F0;">getImageById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;player&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#6A737D;">// アセットID &quot;player&quot; が画像アセットだとします</span></span>
<span class="line"><span style="color:#E1E4E8;">  hidden: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(sprite);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> sprite </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  scene: scene,</span></span>
<span class="line"><span style="color:#24292E;">  src: scene.asset.</span><span style="color:#6F42C1;">getImageById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;player&quot;</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// アセットID &quot;player&quot; が画像アセットだとします</span></span>
<span class="line"><span style="color:#24292E;">  hidden: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(sprite);</span></span></code></pre></div><p>生成後のエンティティの表示状態は <code>visible()</code> で取得できます。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sprite.</span><span style="color:#B392F0;">visible</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// ==&gt; false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">sprite.</span><span style="color:#6F42C1;">visible</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// ==&gt; false</span></span></code></pre></div><p>非表示状態のエンティティを表示状態にするには <code>show()</code> を利用します。 <code>show()</code> 利用時には <code>modified()</code> を呼び出す必要はありません。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sprite.</span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">sprite.</span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">();</span></span></code></pre></div><p>表示状態のエンティティを非表示にするには、<code>hide()</code> を利用します。 <code>hide()</code> 利用時には <code>modified()</code> を呼び出す必要はありません。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sprite.</span><span style="color:#B392F0;">hide</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">sprite.</span><span style="color:#6F42C1;">hide</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="/akashic-engine/v3/classes/E.html#hide">API リファレンス</a></li></ul>`,13);function i(d,y,E,h,v,g){const a=n("PlaygroundElement");return p(),o("div",null,[t,l(a,{gameJsonUri:"/snippets/reverse-reference/drawing/hidden/game.json",width:600,height:400}),r])}const b=e(c,[["render",i]]);export{_ as __pageData,b as default};
