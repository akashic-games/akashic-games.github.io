import{_ as e,c as i,I as n,a3 as a,o as t,E as p}from"./chunks/framework.B_s5ISUx.js";const k=JSON.parse('{"title":"サンプルを改造してみよう","description":"","frontmatter":{},"headers":[],"relativePath":"shin-ichiba/mod-galaxy-wars/index.md","filePath":"shin-ichiba/mod-galaxy-wars/index.md"}'),o={name:"shin-ichiba/mod-galaxy-wars/index.md"},l=a('<h1 id="サンプルを改造してみよう" tabindex="-1">サンプルを改造してみよう <a class="header-anchor" href="#サンプルを改造してみよう" aria-label="Permalink to &quot;サンプルを改造してみよう&quot;">​</a></h1><p><a href="./../mod-game.html">素材を差し替えてみよう</a> では、サンプルゲームの画像ファイルを差し替えてオリジナルのゲームを作る手順を紹介しました。 素材の差し替えは手軽ではあるものの、できることに限りがあります。 ここでは <strong>サンプルゲームのプログラム自体を変更</strong> して、より大きくゲームを改造する流れを解説します。</p><p>プログラムの改造は、対象のゲームに大きく依存するので、共通の・一般的な手順はありません。 しかし改造の一つの例を通して、大まかな考え方とプログラミングの基本的な概念を紹介します。</p><h2 id="想定読者" tabindex="-1">想定読者 <a class="header-anchor" href="#想定読者" aria-label="Permalink to &quot;想定読者&quot;">​</a></h2><p>本ガイドでは「プログラミングという言葉は知っているが、実際にプログラムを書いたことはない」方を想定しています。 プログラミング言語として JavaScript を使いますが、JavaScript の知識は必要はありません (適宜解説します) 。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>プログラミング一般と JavaScript について基本的な知識がある場合は、 ゼロからゲームを作るガイド記事として <a href="./../breakout/index.html">ガイド集 » ブロック崩しを作ろう</a> も参照してください。</p></div><h2 id="改造の内容" tabindex="-1">改造の内容 <a class="header-anchor" href="#改造の内容" aria-label="Permalink to &quot;改造の内容&quot;">​</a></h2><p>題材として、サンプルゲーム <a href="/demo/GalaxyWars.html">Galaxy Wars</a> を使います。 Galaxy Wars はマウスやタップでプレイヤーを操作する縦型2Dシューティングゲームです。以下で遊んでみてください。</p>',8),c=a(`<p>これに対して以下の変更を行って、その流れを順に紹介します。</p><ul><li>最大 HP の変更</li><li>回復アイテムの強化</li><li>効果音の追加</li></ul><h2 id="本チュートリアルの見方" tabindex="-1">本チュートリアルの見方 <a class="header-anchor" href="#本チュートリアルの見方" aria-label="Permalink to &quot;本チュートリアルの見方&quot;">​</a></h2><p>本チュートリアルは実際に JavaScript のコードを書きながら進めていきます。 コードを書き写す際は、コピー・ペースト機能も活用してください。</p><p>コードについては、以下のように各行の左側に <code>+</code> や <code>-</code> 記号の付いたシンタックスハイライトで表示している場合があります。 <code>+</code> がついた行は <strong>追加する行</strong>、 <code>-</code> が付いた行は <strong>削除する行</strong> を示しています。</p><p>以下の例では、 <code>削除するコード</code> と書かれた行を削除し、その部分に <code>追加するコード</code> を追加しています。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line"><span>既存のコード</span></span>
<span class="line diff remove"><span>削除するコード</span></span>
<span class="line diff add"><span>追加するコード</span></span></code></pre></div><p>これはつまり、</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>既存のコード</span></span>
<span class="line"><span>削除するコード</span></span></code></pre></div><p>というコードを</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>既存のコード</span></span>
<span class="line"><span>追加するコード</span></span></code></pre></div><p>のように修正することを意味しています。</p><p>また、コードの随所に <code>...</code> という表記を使用しています。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (条件) {</span></span>
<span class="line highlighted"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>これは、追加するコードとは無関係の部分においてのみ、コードの内容を省略していることを示しています。 コピーペーストする際は <code>...</code> の部分まで含まないように注意してください。</p>`,15);function d(h,r,g,_,u,m){const s=p("PlaygroundElement");return t(),i("div",null,[l,n(s,{gameJsonUri:"/snippets/shin-ichiba/galaxy-wars/game.json",width:600,height:400}),c])}const v=e(o,[["render",d]]);export{k as __pageData,v as default};
