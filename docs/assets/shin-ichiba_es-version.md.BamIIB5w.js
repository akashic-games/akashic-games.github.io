import{_ as a,c as i,o as e,a3 as s}from"./chunks/framework.B_s5ISUx.js";const E=JSON.parse('{"title":"ECMAScript のバージョン (JavaScript で利用できる機能) について","description":"","frontmatter":{},"headers":[],"relativePath":"shin-ichiba/es-version.md","filePath":"shin-ichiba/es-version.md"}'),t={name:"shin-ichiba/es-version.md"},c=s('<h1 id="ecmascript-のバージョン-javascript-で利用できる機能-について" tabindex="-1">ECMAScript のバージョン (JavaScript で利用できる機能) について <a class="header-anchor" href="#ecmascript-のバージョン-javascript-で利用できる機能-について" aria-label="Permalink to &quot;ECMAScript のバージョン (JavaScript で利用できる機能) について&quot;">​</a></h1><h2 id="abstract" tabindex="-1">要約 <a class="header-anchor" href="#abstract" aria-label="Permalink to &quot;要約 {#abstract}&quot;">​</a></h2><ul><li>ニコ生ゲームにおいて <strong>ES2016 以降の機能は利用しないでください</strong> (2024 年 9 月現在)。</li><li>ただし次のいずれかの場合、ES2016 以降の機能でも <strong>構文や演算子</strong> は利用できます。 <ul><li>TypeScript テンプレートでゲームを作成している</li><li><code>akashic-cli@3.0.0</code> 以降を利用している</li></ul></li></ul><h2 id="es-versions" tabindex="-1">ECMAScript のバージョンと動作環境問題 <a class="header-anchor" href="#es-versions" aria-label="Permalink to &quot;ECMAScript のバージョンと動作環境問題 {#es-versions}&quot;">​</a></h2><p>JavaScript の構文や組み込みの機能は、<a href="https://262.ecma-international.org/" target="_blank" rel="noreferrer">ECMAScript</a> (ECMA-262) として規格化されています。 規格は毎年更新されていて、新しい版ほど高機能になります。</p><p>たとえば <code>const</code>, <code>let</code> やアロー関数、 <code>Map</code> と <code>Set</code> などは 2015 年の版 (ES2015) で追加された機能です。 同様に、冪乗演算子 <code>**</code> は 2016 年の版 (ES2016)、 <code>async</code> 関数は 2017 年、optional chaining 演算子 <code>?.</code> は 2020 年の版で追加されました。</p><p>新しい版の機能は便利なことも多い一方、 <strong>実行環境によってはサポートされていない</strong> 可能性があります。 サポートされていない機能を利用すると、プログラムは単にエラーになり、続行できません。</p><p>特に演算子や構文がサポートされていない場合、プログラムは一行も実行されることなくエラーになるため 「ゲーム画面にエラーメッセージを表示してプレイヤーにソフトウェア更新を促す」といった対応すらできません。</p><h2 id="es-on-namagame" tabindex="-1">ニコ生ゲームのサポート範囲 <a class="header-anchor" href="#es-on-namagame" aria-label="Permalink to &quot;ニコ生ゲームのサポート範囲 {#es-on-namagame}&quot;">​</a></h2><p>この問題を避けるため、 <strong>ニコ生ゲームでは現在、ES2015 までの機能をサポート範囲</strong> としています。 2024 年 9 月現在、ES2016 以降の機能の利用は避けるようにしてください。</p><p>避けるべき機能の例:</p><ul><li><code>**</code>, <code>?.</code>, <code>??</code>, <code>&amp;&amp;=</code>, <code>||=</code> などの演算子</li><li>オブジェクト内の <code>...</code></li><li>変数束縛なしの <code>catch</code> 節</li><li>配列の <code>flat()</code>, <code>flatMap()</code>, <code>at()</code></li><li>文字列の <code>padStart()</code>, <code>padEnd()</code>, <code>matchAll()</code></li><li><code>BigInt</code>, <code>WeakRef</code></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>これらは一例です。「ES2016 以降」に該当する機能の具体的な内容については、 Ecma TC39 の <a href="https://github.com/tc39/proposals/blob/main/finished-proposals.md" target="_blank" rel="noreferrer">Finished Proposals</a> などを参照してください。 このページは 2016 年以降の版に含められた仕様の一覧になっているので、書かれているものは全て ES2016 以降に当てはまります。</p></div><p>ただし後述のとおり、TypeScript テンプレートと <code>akashic-cli@3.0.0</code> 以降では、<strong>この制限は一部緩和されます</strong> 。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>ニコ生ゲームのこの制限は、主にニコニコ生放送がサポートする古い機種のスマートフォンによって生じています。 将来的に Android などのサポート状況が変化した場合、この制限は緩和されます。</p></div><h2 id="donwpile" tabindex="-1">akashic-cli@3.0.0 以降を利用している場合 <a class="header-anchor" href="#donwpile" aria-label="Permalink to &quot;akashic-cli@3.0.0 以降を利用している場合 {#donwpile}&quot;">​</a></h2><p><code>akahsic-cli@3.0.0</code> 以降の akashic export コマンドは、 内部でスクリプトアセットを変換して、ES2015 環境に対応した .js ファイルを生成するようになっています。</p><p>そのため <strong>構文や演算子に関しては ES2016 以降の機能を利用できます</strong> 。 たとえば (ES2020 で追加された) <code>??</code> 演算子を利用する以下のコードは、</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">??</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>ES2015 までの機能だけを使う等価なコードとして以下の内容が .js ファイルに出力されます。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>この <strong>この変換は構文や演算子に限られることに注意</strong> してください。 クラスやオブジェクトのメソッドなどには対応していません。 たとえば以下のものは利用できません。</p><ul><li>配列の <code>flat()</code>, <code>flatMap()</code>, <code>at()</code></li><li>文字列の <code>padStart()</code>, <code>padEnd()</code>, <code>trimStart()</code>, <code>trimEnd()</code>, <code>matchAll()</code></li><li><code>BigInt</code>, <code>WeakRef</code> など</li></ul></div><h2 id="typescript-target" tabindex="-1">TypeScript で開発している場合 <a class="header-anchor" href="#typescript-target" aria-label="Permalink to &quot;TypeScript で開発している場合 {#typescript-target}&quot;">​</a></h2><p>TypeScript テンプレートを利用している場合も同様に、ES2016 以降の構文や演算子を利用できます。 これは akashic-cli のバージョンに依存しません。</p><p>TypeScript コンパイラには「生成する .js ファイルの ECMAScript バージョンを指定する機能」があり (tsconfig.json の <a href="https://www.typescriptlang.org/tsconfig/#target" target="_blank" rel="noreferrer"><code>&quot;target&quot;</code></a> プロパティ)、Akashic Engine の TypeScript テンプレートは以前からこの設定を行なっていたためです。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>やはりこちらの変換も <strong>構文や演算子に限られる</strong> ことに注意してください。 クラスやオブジェクトのメソッドなどには対応していません。 TypeScript テンプレートでは、ES2015 に変換できない新しい機能を利用するとコンパイルエラーになるよう設定しています。</p></div>',26),o=[c];function l(p,r,d,n,h,k){return e(),i("div",null,o)}const m=a(t,[["render",l]]);export{E as __pageData,m as default};
