import{_ as n,c as s,I as i,a3 as t,o as a,E as o}from"./chunks/framework.B_s5ISUx.js";const b=JSON.parse('{"title":"右クリックできるようにする","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/operation/right-click.md","filePath":"reverse-reference/v3/operation/right-click.md"}'),d={name:"reverse-reference/v3/operation/right-click.md"},l=t(`<h1 id="右クリックできるようにする" tabindex="-1">右クリックできるようにする <a class="header-anchor" href="#右クリックできるようにする" aria-label="Permalink to &quot;右クリックできるようにする&quot;">​</a></h1><p>マウスの中ボタンや右ボタンを識別するには、 <code>g.PointEvent#button</code> を利用します。</p><div class="warning custom-block"><p class="custom-block-title">IMPORTANT</p><p>ニコ生ゲームでは、マウスの中ボタンや右ボタンがゲームプレイ上必須にならないようにしてください。 スマートフォンユーザに遊べないゲームになってしまうためです。</p></div><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">button.onPointDown.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ev</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ev.button </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // マウス左ボタンまたはタッチの押下時の処理</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ev.button </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // マウス右ボタンの押下時の処理</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // それ以外の押下時の処理</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="利用例" tabindex="-1">利用例 <a class="header-anchor" href="#利用例" aria-label="Permalink to &quot;利用例&quot;">​</a></h2><p>次のコンテンツでは、ゲーム画面内でマウス左ボタンを押下すると矩形が青色に、右ボタンを押下すると矩形が赤色に変化します。</p>`,7),c=t('<h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p><code>g.E#onPointDown</code> や <code>g.Scene#onPointMoveCapture</code> などの操作通知は、タッチ操作とマウス操作を統一して通知します。 これによりプレイヤーは「スマートフォンでのタップ」でも「マウスの左・右ボタンクリック」でも同じようにゲームを操作することができます。</p><p><code>g.PointEvent#button</code> を参照すると、このうちマウスの右ボタンや中ボタンでの操作を識別することができます。 <strong><code>button</code> は次のいずれかの数値で、ボタンなどの状態変化を表します</strong> 。</p><table tabindex="0"><thead><tr><th style="text-align:center;"><code>button</code></th><th style="text-align:left;">意味</th></tr></thead><tbody><tr><td style="text-align:center;"><code>-1</code></td><td style="text-align:left;">最後のイベント以降、ボタンもタッチ接触も変化していない<br>(<code>onPointMove</code>, <code>onPointMoveCapture</code> のみ)</td></tr><tr><td style="text-align:center;"><code>0</code></td><td style="text-align:left;">マウスの左ボタン、タッチ接触の状態が変化した</td></tr><tr><td style="text-align:center;"><code>1</code></td><td style="text-align:left;">マウスの中ボタンの状態が変化した</td></tr><tr><td style="text-align:center;"><code>2</code></td><td style="text-align:left;">マウスの右ボタンの状態が変化した</td></tr></tbody></table><p>例えばマウスの右ボタンが押下された時は、 <code>onPointDown</code> トリガーに通知される <code>g.PointDownEvent</code> の <code>button</code> が <code>2</code> になります。</p><h3 id="複数のマウスボタン押下" tabindex="-1">複数のマウスボタン押下 <a class="header-anchor" href="#複数のマウスボタン押下" aria-label="Permalink to &quot;複数のマウスボタン押下&quot;">​</a></h3><p>複数のマウスボタンの押下は、<code>onPointDown</code> ではなく <code>onPointMove</code> で通知されることに注意してください。</p><p>たとえば「左ボタン押下、マウス移動、右ボタン押下、マウス移動、右ボタン解放、左ボタン解放」の順で操作した時、通知されるトリガーと <code>button</code> の値は次のようになります。</p><table tabindex="0"><thead><tr><th style="text-align:center;">順</th><th style="text-align:center;">プレイヤーの操作</th><th style="text-align:center;">通知されるトリガー</th><th style="text-align:center;"><code>button</code> の値</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">左ボタン押下</td><td style="text-align:center;"><code>onPointDown</code></td><td style="text-align:center;"><code>0</code></td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">マウス移動</td><td style="text-align:center;"><code>onPointMove</code></td><td style="text-align:center;"><code>-1</code></td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">右ボタン押下</td><td style="text-align:center;"><code>onPointMove</code></td><td style="text-align:center;"><code>2</code></td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">マウス移動</td><td style="text-align:center;"><code>onPointMove</code></td><td style="text-align:center;"><code>-1</code></td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">右ボタン解放</td><td style="text-align:center;"><code>onPointMove</code></td><td style="text-align:center;"><code>2</code></td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;">左ボタン解放</td><td style="text-align:center;"><code>onPointUp</code></td><td style="text-align:center;"><code>0</code></td></tr></tbody></table><p>右ボタンの押下や解放が <code>onPointMove</code> の <code>g.PointMoveEvent</code> で通知されます。 <code>g.PointMoveEvent#button</code> が <code>-1</code> でない時、行われた操作が押下なのか解放なのかは、ゲーム側で判断する必要があります。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>button</code> の値や同時押しに関する挙動は、Web ブラウザの <code>PointerEvent</code> の仕様に基づくものです。</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>マルチタッチとの違いに注意してください。 マルチタッチの場合、 <code>pointerId</code> が異なる複数の <code>g.PointDownEvent</code> が通知されます。</p></div>',12);function r(h,p,k,g,y,E){const e=o("PlaygroundElement");return a(),s("div",null,[l,i(e,{gameJsonUri:"/snippets/reverse-reference/operation/right-click/game.json",width:600,height:400}),c])}const v=n(d,[["render",r]]);export{b as __pageData,v as default};
