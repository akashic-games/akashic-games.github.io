import{_ as a,c as s,o as i,a3 as e}from"./chunks/framework.B_s5ISUx.js";const g=JSON.parse('{"title":"拡張ライブラリを使う","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial/v2/8-install.md","filePath":"tutorial/v2/8-install.md"}'),n={name:"tutorial/v2/8-install.md"},t=e(`<h1 id="拡張ライブラリを使う" tabindex="-1">拡張ライブラリを使う <a class="header-anchor" href="#拡張ライブラリを使う" aria-label="Permalink to &quot;拡張ライブラリを使う&quot;">​</a></h1><p>Akashic Engine に限らず、Node.js では、npm コマンドを利用して自作のパッケージを公開したり、既に公開されているパッケージをダウンロード・インストールすることができます。 Akashic Engine の拡張ライブラリは npm パッケージとして実装できます。ゲーム開発者は npm の仕組みを使うことで、拡張ライブラリを自由に公開・利用することができます。</p><p>既に公開されている拡張ライブラリとしては、トゥイーンアニメーションライブラリの <a href="https://github.com/akashic-games/akashic-timeline" target="_blank" rel="noreferrer">akashic-timeline</a> や高機能版テキスト描画エンティティの <a href="https://github.com/akashic-games/akashic-label" target="_blank" rel="noreferrer">akashic-label</a> などが挙げられます。</p><h2 id="akashic-コンテンツに拡張ライブラリを追加する" tabindex="-1">Akashic コンテンツに拡張ライブラリを追加する <a class="header-anchor" href="#akashic-コンテンツに拡張ライブラリを追加する" aria-label="Permalink to &quot;Akashic コンテンツに拡張ライブラリを追加する&quot;">​</a></h2><p>拡張ライブラリは、akashic コマンドの <code>akashic install</code> を利用することでゲームに追加できます。</p><p>例えば、コンテンツから akashic-timeline (パッケージ名は <code>@akashic-extension/akashic-timeline</code>) を利用したい場合、game.json の置かれているディレクトリで以下のコマンドを実行します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">akashic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @akashic-extension/akashic-timeline</span></span></code></pre></div><p><code>akashic install</code> コマンドは、内部的に <code>npm install --save -save-exact</code> を実行することで、拡張ライブラリを <code>node_modules</code> ディレクトリにダウンロード・インストールします。さらに、インストールされた拡張ライブラリの情報(ファイルパスなど)を game.json に書き込みます。これは、Akashic コンテンツでは、予めすべてのリソースへのパスが game.json に書き込まれている必要があるためです。これによりコンテンツ内から <code>require()</code> を使って拡張ライブラリを読み込めるようになります。</p><p>例として、 <code>akashic-timeline</code> の拡張ライブラリをコンテンツに追加すると、game.json には以下のような記述が追加されます。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;globalScripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;node_modules/@akashic-extension/akashic-timeline/lib/ActionType.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;node_modules/@akashic-extension/akashic-timeline/lib/Easing.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;node_modules/@akashic-extension/akashic-timeline/lib/Timeline.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;node_modules/@akashic-extension/akashic-timeline/lib/Tween.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;node_modules/@akashic-extension/akashic-timeline/lib/index.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;moduleMainScripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;@akashic-extension/akashic-timeline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node_modules/@akashic-extension/akashic-timeline/lib/index.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>コンテンツからは、以下のようにして拡張ライブラリを読み込めます。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@akashic-extension/akashic-timeline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>akashic-timeline の実際的な使い方は <a href="https://github.com/akashic-games/akashic-timeline/blob/master/getstarted.md" target="_blank" rel="noreferrer">ドキュメント</a> を参照してください。</p><p>拡張ライブラリが不要になった場合、 <code>akashic uninstall</code> コマンドを使うことで、拡張ライブラリをコンテンツから削除することができます。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">akashic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @akashic-extension/akashic-timeline</span></span></code></pre></div><p>このコマンドは、 <code>npm uninstall</code> を実行して拡張ライブラリを削除したのち、game.json から関連する情報を削除します。</p><p>誤って <code>npm install</code> コマンドで拡張ライブラリをインストールした場合は、 <code>npm uninstall</code> コマンドで拡張ライブラリを一度アンインストールし、その後 <code>akashic install</code> コマンドで再インストールしてください。</p><p>（拡張ライブラリを再インストールしてもインストールしたライブラリを正常に利用できない場合、一度 <code>node_modules</code> ディレクトリを削除して、インストール済みの拡張ライブラリ全体を再インストールしてください。）</p><h2 id="akashic-向け拡張ライブラリではないパッケージの利用" tabindex="-1">Akashic 向け拡張ライブラリではないパッケージの利用 <a class="header-anchor" href="#akashic-向け拡張ライブラリではないパッケージの利用" aria-label="Permalink to &quot;Akashic 向け拡張ライブラリではないパッケージの利用&quot;">​</a></h2><p><code>akashic install</code> コマンドは、Akashic 向けの拡張ライブラリではない npm パッケージもインストールできます。たとえば、シミュレーションゲームで敵キャラクタの移動ルートを決めるために「グラフ探索アルゴリズムを実装した汎用のライブラリパッケージ」を導入して使う、というようなことができます。</p><p>ただし、Akashic Engine はそのようなパッケージの動作を保証してはいません。 Akashic Engine で利用できるパッケージの条件は、 <code>fs</code> や <code>http</code> などの Node.js コアモジュールを利用していないこと、 <code>Math.random()</code> を利用していないことです。また、原則的に DOM を利用することもできません。これらは Akashic Engine の動作に意図しない影響を及ぼすため、利用しないでください。</p><h2 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h2><p><code>akashic install</code> を用いる必要があるのは、「コンテンツの実行時に必要な npm パッケージ」だけであることに注意してください。</p><p>実行時に必要ない npm パッケージは、 <code>akashic install</code> ではなく <code>npm install</code> を利用してください。例えば、TypeScript や Browserify などのビルドツールは、通常実行時には利用されません(コンテンツから <code>require()</code> されません)。これらを <code>akashic install</code> してしまうと、不要なファイルが game.json に書き込まれてしまい、ロードに時間がかかる、コンテンツが実行時エラーを起こすなどの問題が生じる場合があります。</p><p>ある npm パッケージがコンテンツ実行に必要なのか、ビルドに必要なのかは、package.json の dependencies と devDependencies のどちらに記述するかの違いとして考えることができます。一般には、package.json の dependencies に記述されるものは <code>akashic install</code> を、それ以外は <code>npm install</code> を実行してインストールしてください。 package.json の仕様については、 <a href="https://docs.npmjs.com/files/package.json" target="_blank" rel="noreferrer">こちら</a> に詳しい説明があります。</p><h2 id="npm-について" tabindex="-1">npm について <a class="header-anchor" href="#npm-について" aria-label="Permalink to &quot;npm について&quot;">​</a></h2><p>npm コマンドの詳細な使い方については、 <a href="https://docs.npmjs.com/" target="_blank" rel="noreferrer">npm 公式サイト</a> を参照してください。</p>`,27),l=[t];function h(p,o,c,k,d,r){return i(),s("div",null,l)}const u=a(n,[["render",h]]);export{g as __pageData,u as default};
