import{_ as p}from"./chunks/TutorialDemoContentElement.vue_vue_type_script_setup_true_lang.74d9fa76.js";import{C as l,o,c as e,H as n,Q as s}from"./chunks/framework.459ab1e9.js";import"./chunks/PlaygroundElement.a6c532a4.js";const c="/assets/breakout_title.4e74e9fa.png",t="/assets/breakout_description.cb561562.png",r="/assets/screenshot_make-opening-and-ending_1.06168386.png",E="/assets/screenshot_make-opening-and-ending_2.9768f93b.png",y="/assets/breakout_finish.e9382cd2.png",i="/assets/breakout_result.c6318cc0.png",d="/assets/screenshot_make-opening-and-ending_3.58c747f3.png",f="/assets/screenshot_make-opening-and-ending_4.0026bf96.png",F="/assets/screenshot_make-opening-and-ending_5.40726644.png",g=s('<h1 id="オープニングとエンディング" tabindex="-1">オープニングとエンディング <a class="header-anchor" href="#オープニングとエンディング" aria-label="Permalink to &quot;オープニングとエンディング&quot;">​</a></h1><p>本章では、オープニング演出とエンディング演出の追加について説明します。</p><h2 id="オープニング演出の作成" tabindex="-1">オープニング演出の作成 <a class="header-anchor" href="#オープニング演出の作成" aria-label="Permalink to &quot;オープニング演出の作成&quot;">​</a></h2><p>オープニングはゲームの概要を説明する重要な部分です。 とくにランキング形式のニコ生ゲームにおいては、ゲームの起動時間に制約があります。 この時間の中で、簡潔かつわかりやすくゲームのルールを伝えられることが重要になります。</p><p>今回は以下のタイトルロゴと説明を順番に表示するようなオープニングを実装してみます。 以下の画像をそれぞれダウンロードして <code>assets/opening/</code> ディレクトリに保存しておきます。</p><h3 id="タイトルロゴ" tabindex="-1">タイトルロゴ <a class="header-anchor" href="#タイトルロゴ" aria-label="Permalink to &quot;タイトルロゴ&quot;">​</a></h3><p><a href="./assets/breakout_title.png"><img src="'+c+'" alt=""></a></p><h3 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h3><p><a href="./assets/breakout_description.png"><img src="'+t+'" alt=""></a></p><p>配置後、忘れずに <code>akashic scan</code> を実行します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">akashic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">scan</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">asset</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">akashic</span><span style="color:#24292E;"> </span><span style="color:#032F62;">scan</span><span style="color:#24292E;"> </span><span style="color:#032F62;">asset</span></span></code></pre></div><p><img src="'+r+`" alt=""></p><p>それではオープニング用のシーン <code>openingScene</code> を新規に作成します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">param</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">game</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> g.game; </span><span style="color:#6A737D;">// よくアクセスするため変数に保持しておく</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// オープニング用シーンの作成</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">openingScene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">({</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        game,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        assetPaths: [</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;/assets/opening/*&quot;</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        ],</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    openingScene.onLoad.</span><span style="color:#B392F0;">addOnce</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">titleLogo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            scene: openingScene,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            src: openingScene.asset.</span><span style="color:#B392F0;">getImage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/assets/opening/breakout_title.png&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            x: game.width </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            y: game.height </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            anchorX: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            anchorY: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        openingScene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(titleLogo);</span></span>
<span class="line diff add"><span style="color:#E1E4E8;"> </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">descriptionLogo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            scene: openingScene,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            src: openingScene.asset.</span><span style="color:#B392F0;">getImage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/assets/opening/breakout_description.png&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            x: game.width </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            y: game.height </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            anchorX: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            anchorY: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;"> </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        openingScene.</span><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            titleLogo.</span><span style="color:#B392F0;">destroy</span><span style="color:#E1E4E8;">();</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            openingScene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(descriptionLogo);</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        }, </span><span style="color:#79B8FF;">2000</span><span style="color:#E1E4E8;">);</span></span>
<span class="line diff add"><span style="color:#E1E4E8;"> </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        openingScene.</span><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            game.</span><span style="color:#B392F0;">replaceScene</span><span style="color:#E1E4E8;">(scene);</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        }, </span><span style="color:#79B8FF;">6000</span><span style="color:#E1E4E8;">);</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    game.</span><span style="color:#B392F0;">pushScene</span><span style="color:#E1E4E8;">(openingScene);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">scene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        game,</span></span>
<span class="line"><span style="color:#E1E4E8;">        assetPaths: [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;/assets/images/*&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;/assets/se/*&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;/assets/fonts/*&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#005CC5;">exports</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">main</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">param</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">game</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> g.game; </span><span style="color:#6A737D;">// よくアクセスするため変数に保持しておく</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// オープニング用シーンの作成</span></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">openingScene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">({</span></span>
<span class="line diff add"><span style="color:#24292E;">        game,</span></span>
<span class="line diff add"><span style="color:#24292E;">        assetPaths: [</span></span>
<span class="line diff add"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;/assets/opening/*&quot;</span></span>
<span class="line diff add"><span style="color:#24292E;">        ],</span></span>
<span class="line diff add"><span style="color:#24292E;">    });</span></span>
<span class="line diff add"><span style="color:#24292E;">    openingScene.onLoad.</span><span style="color:#6F42C1;">addOnce</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">titleLogo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line diff add"><span style="color:#24292E;">            scene: openingScene,</span></span>
<span class="line diff add"><span style="color:#24292E;">            src: openingScene.asset.</span><span style="color:#6F42C1;">getImage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/assets/opening/breakout_title.png&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line diff add"><span style="color:#24292E;">            x: game.width </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            y: game.height </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            anchorX: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            anchorY: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">        });</span></span>
<span class="line diff add"><span style="color:#24292E;">        openingScene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(titleLogo);</span></span>
<span class="line diff add"><span style="color:#24292E;"> </span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">descriptionLogo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line diff add"><span style="color:#24292E;">            scene: openingScene,</span></span>
<span class="line diff add"><span style="color:#24292E;">            src: openingScene.asset.</span><span style="color:#6F42C1;">getImage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/assets/opening/breakout_description.png&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line diff add"><span style="color:#24292E;">            x: game.width </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            y: game.height </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            anchorX: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            anchorY: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">        });</span></span>
<span class="line diff add"><span style="color:#24292E;"> </span></span>
<span class="line diff add"><span style="color:#24292E;">        openingScene.</span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line diff add"><span style="color:#24292E;">            titleLogo.</span><span style="color:#6F42C1;">destroy</span><span style="color:#24292E;">();</span></span>
<span class="line diff add"><span style="color:#24292E;">            openingScene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(descriptionLogo);</span></span>
<span class="line diff add"><span style="color:#24292E;">        }, </span><span style="color:#005CC5;">2000</span><span style="color:#24292E;">);</span></span>
<span class="line diff add"><span style="color:#24292E;"> </span></span>
<span class="line diff add"><span style="color:#24292E;">        openingScene.</span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line diff add"><span style="color:#24292E;">            game.</span><span style="color:#6F42C1;">replaceScene</span><span style="color:#24292E;">(scene);</span></span>
<span class="line diff add"><span style="color:#24292E;">        }, </span><span style="color:#005CC5;">6000</span><span style="color:#24292E;">);</span></span>
<span class="line diff add"><span style="color:#24292E;">    });</span></span>
<span class="line diff add"><span style="color:#24292E;">    game.</span><span style="color:#6F42C1;">pushScene</span><span style="color:#24292E;">(openingScene);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">scene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        game,</span></span>
<span class="line"><span style="color:#24292E;">        assetPaths: [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;/assets/images/*&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;/assets/se/*&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;/assets/fonts/*&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        ],</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span></code></pre></div><p><code>openingScene</code> では、最初にゲームのロゴを2秒間表示し、その後ゲームの説明を4秒間 (ゲーム開始から6秒後まで) 表示します。 <code>scene.setTimeout()</code> は <code>scene.setInterval()</code> に似ていますが、繰り返しではなく一度のみ処理が実行されます。 <code>scene</code> の部分には <code>openingScene</code> を指定することに注意してください。</p><p>ゲームのシーンへと遷移には <code>game.replaceScene()</code> を利用しています。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>game.pushScene()</code> は現在のシーンスタックに対して遷移先のシーンを追加するため、遷移元のシーンの状態を保存します。 一方 <code>game.replaceScene()</code> は遷移元のシーンを遷移先のシーンに置き換えます。 最初に追加するシーン以外で、戻る必要のないシーン遷移では <code>game.replaceScene()</code> を利用すべきでしょう。</p></div><p>最後にコード末尾にある <code>game.pushScene(scene)</code> を削除します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    scene.onLoad.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">pointInRect</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">y</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line diff remove"><span style="color:#E1E4E8;">    game.</span><span style="color:#B392F0;">pushScene</span><span style="color:#E1E4E8;">(scene);</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">    scene.onLoad.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">pointInRect</span><span style="color:#24292E;">(</span><span style="color:#E36209;">x</span><span style="color:#24292E;">, </span><span style="color:#E36209;">y</span><span style="color:#24292E;">, </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line diff remove"><span style="color:#24292E;">    game.</span><span style="color:#6F42C1;">pushScene</span><span style="color:#24292E;">(scene);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>ゲームを実行してみましょう。 ゲームロゴの後に説明が表示され、その後ゲーム画面へと遷移します。</p><p><img src="`+E+'" alt=""></p><h2 id="エンディング演出の作成" tabindex="-1">エンディング演出の作成 <a class="header-anchor" href="#エンディング演出の作成" aria-label="Permalink to &quot;エンディング演出の作成&quot;">​</a></h2><p>エンディング画面では、ゲームの終了通知と獲得したスコアの2つの要素を表示します。</p><h3 id="終了ロゴ" tabindex="-1">終了ロゴ <a class="header-anchor" href="#終了ロゴ" aria-label="Permalink to &quot;終了ロゴ&quot;">​</a></h3><p>まずは終了を通知するロゴをゲームに組み込みます。 以下の画像をダウンロードして <code>assets/images</code> へ配置してください。</p><p><a href="./assets/breakout_finish.png"><img src="'+y+`" alt=""></a></p><p>ゲーム終了時に終了ロゴを表示するように修正します。 前に残しておいた <code>// TODO: 終了処理</code> というコメントの部分に移動して、終了ロゴを表示させるコードを追加します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 残り時間の更新</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">timer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scene.</span><span style="color:#B392F0;">setInterval</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            remainingTime</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (remainingTime </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                scene.</span><span style="color:#B392F0;">clearInterval</span><span style="color:#E1E4E8;">(timer);</span></span>
<span class="line"><span style="color:#E1E4E8;">                vx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                vy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line diff remove"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// TODO: 終了処理</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 終了ロゴを表示</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">finishLogo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    scene,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    src: scene.asset.</span><span style="color:#B392F0;">getImage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/assets/images/breakout_finish.png&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    x: game.width </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    y: game.height </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    anchorX: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    anchorY: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(finishLogo);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">updateTimer</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }, </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 残り時間の更新</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">timer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scene.</span><span style="color:#6F42C1;">setInterval</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            remainingTime</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (remainingTime </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                scene.</span><span style="color:#6F42C1;">clearInterval</span><span style="color:#24292E;">(timer);</span></span>
<span class="line"><span style="color:#24292E;">                vx </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                vy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line diff remove"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// TODO: 終了処理</span></span>
<span class="line diff add"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 終了ロゴを表示</span></span>
<span class="line diff add"><span style="color:#24292E;">                </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">finishLogo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line diff add"><span style="color:#24292E;">                    scene,</span></span>
<span class="line diff add"><span style="color:#24292E;">                    src: scene.asset.</span><span style="color:#6F42C1;">getImage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/assets/images/breakout_finish.png&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line diff add"><span style="color:#24292E;">                    x: game.width </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">                    y: game.height </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">                    anchorX: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">                    anchorY: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">                });</span></span>
<span class="line diff add"><span style="color:#24292E;">                scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(finishLogo);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">updateTimer</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }, </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">);</span></span></code></pre></div><p>終了時に効果音を鳴らします。 <code>scene.onLoad</code> の直後でオーディオ再生コンテキストを生成します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    scene.onLoad.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sePaddleAsset</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scene.asset.</span><span style="color:#B392F0;">getAudio</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/assets/se/se_paddle&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sePaddle</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> game.audio.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(sePaddleAsset);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">seBlockAsset</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scene.asset.</span><span style="color:#B392F0;">getAudio</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/assets/se/se_block&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">seBlock</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> game.audio.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(seBlockAsset);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">seMissAsset</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scene.asset.</span><span style="color:#B392F0;">getAudio</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/assets/se/se_miss&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">seMiss</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> game.audio.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(seMissAsset);</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">seFinishAsset</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scene.asset.</span><span style="color:#B392F0;">getAudio</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/assets/se/se_finish&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">seFinish</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> game.audio.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(seFinishAsset);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">    scene.onLoad.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sePaddleAsset</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scene.asset.</span><span style="color:#6F42C1;">getAudio</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/assets/se/se_paddle&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sePaddle</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> game.audio.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(sePaddleAsset);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">seBlockAsset</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scene.asset.</span><span style="color:#6F42C1;">getAudio</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/assets/se/se_block&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">seBlock</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> game.audio.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(seBlockAsset);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">seMissAsset</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scene.asset.</span><span style="color:#6F42C1;">getAudio</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/assets/se/se_miss&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">seMiss</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> game.audio.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(seMissAsset);</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">seFinishAsset</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scene.asset.</span><span style="color:#6F42C1;">getAudio</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/assets/se/se_finish&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">seFinish</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> game.audio.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(seFinishAsset);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span></code></pre></div><p>ロゴ表示部分で効果音を再生します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 残り時間の更新</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">timer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scene.</span><span style="color:#B392F0;">setInterval</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            remainingTime</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (remainingTime </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                scene.</span><span style="color:#B392F0;">clearInterval</span><span style="color:#E1E4E8;">(timer);</span></span>
<span class="line"><span style="color:#E1E4E8;">                vx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                vy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 終了ロゴを表示</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">finishLogo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">                });</span></span>
<span class="line"><span style="color:#E1E4E8;">                scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(finishLogo);</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                seFinish.</span><span style="color:#B392F0;">play</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">updateTimer</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }, </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 残り時間の更新</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">timer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scene.</span><span style="color:#6F42C1;">setInterval</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            remainingTime</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (remainingTime </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                scene.</span><span style="color:#6F42C1;">clearInterval</span><span style="color:#24292E;">(timer);</span></span>
<span class="line"><span style="color:#24292E;">                vx </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                vy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 終了ロゴを表示</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">finishLogo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">                });</span></span>
<span class="line"><span style="color:#24292E;">                scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(finishLogo);</span></span>
<span class="line diff add"><span style="color:#24292E;">                seFinish.</span><span style="color:#6F42C1;">play</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">updateTimer</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }, </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="スコア結果表示" tabindex="-1">スコア結果表示 <a class="header-anchor" href="#スコア結果表示" aria-label="Permalink to &quot;スコア結果表示&quot;">​</a></h3><p>最後に、プレイヤーが獲得したスコアを表示するための結果画面を作成しましょう。 以下の画像をダウンロードして <code>assets/ending</code> ディレクトリへと配置してください。</p><p><a href="./assets/breakout_result.png"><img src="`+i+`" alt=""></a></p><p>結果画面では、スコア表示をわかりやすく目立つように、大きめのサイズのビットマップフォントを新たに作成します。 以下のコマンドを実行して <code>font-number-large</code> を作成します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">bmpfont-generator</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rounded-mplus-2p-black.ttf</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-F</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;#fff&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-S</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;#000&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--stroke-width</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;0123456789+-&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-H</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--margin</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">assets/fonts/font-number-large.png</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">bmpfont-generator</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rounded-mplus-2p-black.ttf</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-F</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;#fff&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-S</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;#000&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--stroke-width</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;0123456789+-&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-H</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">80</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--margin</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">assets/fonts/font-number-large.png</span></span></code></pre></div><p><code>akashic scan</code> コマンドで変更を適用します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">akashic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">scan</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">asset</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">akashic</span><span style="color:#24292E;"> </span><span style="color:#032F62;">scan</span><span style="color:#24292E;"> </span><span style="color:#032F62;">asset</span></span></code></pre></div><p>結果画面を表示するシーン <code>endingScene</code> を作成します。 このシーンでは、スコアと表示されているパネル上に先ほど作成したフォント <code>font-number-large</code> でプレイヤーのスコアを表示します。 <code>scene.onLoad</code> の後ろ (コードの最終行付近) に以下のコードを追加します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    scene.onLoad.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">endingScene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">({</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        game,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        assetPaths: [</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;/assets/fonts/*&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;/assets/ending/*&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        ],</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    endingScene.onLoad.</span><span style="color:#B392F0;">addOnce</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// スコア用フォントの作成</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">font</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">BitmapFont</span><span style="color:#E1E4E8;">({</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            scene: endingScene,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            src: endingScene.asset.</span><span style="color:#B392F0;">getImage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/assets/fonts/font-number-large.png&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            glyphInfo: endingScene.asset.</span><span style="color:#B392F0;">getJSONContent</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/assets/fonts/font-number-large_glyphs.json&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;"> </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// スコア表示用のパネル表示</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resultPanel</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            scene: endingScene,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            src: endingScene.asset.</span><span style="color:#B392F0;">getImage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/assets/ending/breakout_result.png&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            x: game.width </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            y: game.height </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            anchorX: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            anchorY: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        endingScene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(resultPanel);</span></span>
<span class="line diff add"><span style="color:#E1E4E8;"> </span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// スコア結果表示エンティティの作成</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resultScoreLabel</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Label</span><span style="color:#E1E4E8;">({</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            scene: endingScene,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            font,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            fontSize: font.size,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            text: </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">game</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">vars</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">gameState</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">score</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            x: resultPanel.x,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            y: resultPanel.y </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            anchorX: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            anchorY: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        endingScene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(resultScoreLabel);</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">    scene.onLoad.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">endingScene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">({</span></span>
<span class="line diff add"><span style="color:#24292E;">        game,</span></span>
<span class="line diff add"><span style="color:#24292E;">        assetPaths: [</span></span>
<span class="line diff add"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;/assets/fonts/*&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;/assets/ending/*&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">        ],</span></span>
<span class="line diff add"><span style="color:#24292E;">    });</span></span>
<span class="line diff add"><span style="color:#24292E;">    endingScene.onLoad.</span><span style="color:#6F42C1;">addOnce</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// スコア用フォントの作成</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">font</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">BitmapFont</span><span style="color:#24292E;">({</span></span>
<span class="line diff add"><span style="color:#24292E;">            scene: endingScene,</span></span>
<span class="line diff add"><span style="color:#24292E;">            src: endingScene.asset.</span><span style="color:#6F42C1;">getImage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/assets/fonts/font-number-large.png&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line diff add"><span style="color:#24292E;">            glyphInfo: endingScene.asset.</span><span style="color:#6F42C1;">getJSONContent</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/assets/fonts/font-number-large_glyphs.json&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line diff add"><span style="color:#24292E;">        });</span></span>
<span class="line diff add"><span style="color:#24292E;"> </span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// スコア表示用のパネル表示</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resultPanel</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line diff add"><span style="color:#24292E;">            scene: endingScene,</span></span>
<span class="line diff add"><span style="color:#24292E;">            src: endingScene.asset.</span><span style="color:#6F42C1;">getImage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/assets/ending/breakout_result.png&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line diff add"><span style="color:#24292E;">            x: game.width </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            y: game.height </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            anchorX: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            anchorY: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">        });</span></span>
<span class="line diff add"><span style="color:#24292E;">        endingScene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(resultPanel);</span></span>
<span class="line diff add"><span style="color:#24292E;"> </span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// スコア結果表示エンティティの作成</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resultScoreLabel</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Label</span><span style="color:#24292E;">({</span></span>
<span class="line diff add"><span style="color:#24292E;">            scene: endingScene,</span></span>
<span class="line diff add"><span style="color:#24292E;">            font,</span></span>
<span class="line diff add"><span style="color:#24292E;">            fontSize: font.size,</span></span>
<span class="line diff add"><span style="color:#24292E;">            text: </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">game</span><span style="color:#032F62;">.</span><span style="color:#24292E;">vars</span><span style="color:#032F62;">.</span><span style="color:#24292E;">gameState</span><span style="color:#032F62;">.</span><span style="color:#24292E;">score</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            x: resultPanel.x,</span></span>
<span class="line diff add"><span style="color:#24292E;">            y: resultPanel.y </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            anchorX: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            anchorY: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">        });</span></span>
<span class="line diff add"><span style="color:#24292E;">        endingScene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(resultScoreLabel);</span></span>
<span class="line diff add"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>ゲームの終了後に <code>endingScene</code> へと遷移するようにコードを追加します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 残り時間の更新</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">timer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scene.</span><span style="color:#B392F0;">setInterval</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            remainingTime</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (remainingTime </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                scene.</span><span style="color:#B392F0;">clearInterval</span><span style="color:#E1E4E8;">(timer);</span></span>
<span class="line"><span style="color:#E1E4E8;">                vx </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                vy </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 終了ロゴを表示</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">finishLogo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">                });</span></span>
<span class="line"><span style="color:#E1E4E8;">                scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(finishLogo);</span></span>
<span class="line"><span style="color:#E1E4E8;">                seFinish.</span><span style="color:#B392F0;">play</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// エンディングシーンへと遷移</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                scene.</span><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    game.</span><span style="color:#B392F0;">replaceScene</span><span style="color:#E1E4E8;">(endingScene);</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                }, </span><span style="color:#79B8FF;">3000</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">updateTimer</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }, </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 残り時間の更新</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">timer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scene.</span><span style="color:#6F42C1;">setInterval</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            remainingTime</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (remainingTime </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                scene.</span><span style="color:#6F42C1;">clearInterval</span><span style="color:#24292E;">(timer);</span></span>
<span class="line"><span style="color:#24292E;">                vx </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                vy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 終了ロゴを表示</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">finishLogo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">                });</span></span>
<span class="line"><span style="color:#24292E;">                scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(finishLogo);</span></span>
<span class="line"><span style="color:#24292E;">                seFinish.</span><span style="color:#6F42C1;">play</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// エンディングシーンへと遷移</span></span>
<span class="line diff add"><span style="color:#24292E;">                scene.</span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line diff add"><span style="color:#24292E;">                    game.</span><span style="color:#6F42C1;">replaceScene</span><span style="color:#24292E;">(endingScene);</span></span>
<span class="line diff add"><span style="color:#24292E;">                }, </span><span style="color:#005CC5;">3000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">updateTimer</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }, </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">);</span></span></code></pre></div><p>ゲームを実行してみましょう。 左上の残り時間が <code>0</code> になったタイミングで「Finish!」というロゴが表示され、その後獲得スコアが表示されれば成功です。</p><p><img src="`+d+'" alt=""><img src="'+f+'" alt=""></p><h2 id="番外編-トゥイーンアニメーションを使った演出" tabindex="-1">番外編: トゥイーンアニメーションを使った演出 <a class="header-anchor" href="#番外編-トゥイーンアニメーションを使った演出" aria-label="Permalink to &quot;番外編: トゥイーンアニメーションを使った演出&quot;">​</a></h2><p>トゥイーンアニメーション（Tween Animation）はアニメーションを作成する手法の一つで、物体やオブジェクトがある状態から別の状態に滑らかに変化するような動きを実現できます。 ゲーム制作だけではなく Web サイトのアニメーション演出など広く使われています。</p><p>Akashic Engine では、トゥイーンアニメーションを手軽に利用できる拡張ライブラリ <a href="https://github.com/akashic-games/akashic-timeline" target="_blank" rel="noreferrer">akashic-timeline</a> を提供しています。 以下をクリックすることでデモを動作させることができます。</p>',48),h=s(`<p>今回は、実際に akashic-timeline を使って、残り時間が少なくなったときに画面全体を赤く明滅させるような警告表示を導入してみます。</p><h3 id="akashic-timeline-のインストール" tabindex="-1">akashic-timeline のインストール <a class="header-anchor" href="#akashic-timeline-のインストール" aria-label="Permalink to &quot;akashic-timeline のインストール&quot;">​</a></h3><p>akashic-timeline は <code>akashic install</code> コマンドを使ってインストールできます。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">akashic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@akashic-extension/akashic-timeline</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">akashic</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@akashic-extension/akashic-timeline</span></span></code></pre></div><p>以下のように出力されていることを確認します。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">INFO: Installing @akashic-extension/akashic-timeline...</span></span>
<span class="line"><span style="color:#e1e4e8;">INFO: Adding file paths to globalScripts...</span></span>
<span class="line"><span style="color:#e1e4e8;">INFO: Adding file paths to moduleMainScripts...</span></span>
<span class="line"><span style="color:#e1e4e8;">INFO: Done!</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">INFO: Installing @akashic-extension/akashic-timeline...</span></span>
<span class="line"><span style="color:#24292e;">INFO: Adding file paths to globalScripts...</span></span>
<span class="line"><span style="color:#24292e;">INFO: Adding file paths to moduleMainScripts...</span></span>
<span class="line"><span style="color:#24292e;">INFO: Done!</span></span></code></pre></div><h3 id="akashic-timeline-の利用" tabindex="-1">akashic-timeline の利用 <a class="header-anchor" href="#akashic-timeline-の利用" aria-label="Permalink to &quot;akashic-timeline の利用&quot;">​</a></h3><p>コードの冒頭で <code>require()</code> を使用し、以降は <code>tl</code> 変数を介して akashic-timeline を利用します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line diff add"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">tl</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;@akashic-extension/akashic-timeline&quot;</span><span style="color:#E1E4E8;">); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">param</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">...</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line diff add"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">tl</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;@akashic-extension/akashic-timeline&quot;</span><span style="color:#24292E;">); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">exports</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">main</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">param</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">...</span></span></code></pre></div><p>トゥイーンの作成には、まずはシーンに紐づいた <code>Timeline</code> を生成する必要があります。 <code>scene</code> の生成直後で <code>Timeline</code> を生成します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">scene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        game,</span></span>
<span class="line"><span style="color:#E1E4E8;">        assetPaths: [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;/assets/images/*&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;/assets/se/*&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;/assets/fonts/*&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">timeline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> tl.</span><span style="color:#B392F0;">Timeline</span><span style="color:#E1E4E8;">(scene); </span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">scene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        game,</span></span>
<span class="line"><span style="color:#24292E;">        assetPaths: [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;/assets/images/*&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;/assets/se/*&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;/assets/fonts/*&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        ],</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line diff add"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">timeline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> tl.</span><span style="color:#6F42C1;">Timeline</span><span style="color:#24292E;">(scene); </span></span></code></pre></div><p>トゥイーンを適用する警告用の赤い背景 <code>warning</code> は、<code>blockContainer</code> が生成された直後に作成します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">blockContainer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">E</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            scene,</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">        scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(blockContainer);</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 残り時間が少ないときの警告表示</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">warning</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">FilledRect</span><span style="color:#E1E4E8;">({</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            scene,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            cssColor: </span><span style="color:#9ECBFF;">&quot;#f00&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            x: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            y: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            width: game.width,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            height: game.height,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            opacity: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 初期状態は透過</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(warning);</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">blockContainer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">E</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            scene,</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">        scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(blockContainer);</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 残り時間が少ないときの警告表示</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">warning</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">FilledRect</span><span style="color:#24292E;">({</span></span>
<span class="line diff add"><span style="color:#24292E;">            scene,</span></span>
<span class="line diff add"><span style="color:#24292E;">            cssColor: </span><span style="color:#032F62;">&quot;#f00&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            x: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            y: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            width: game.width,</span></span>
<span class="line diff add"><span style="color:#24292E;">            height: game.height,</span></span>
<span class="line diff add"><span style="color:#24292E;">            opacity: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 初期状態は透過</span></span>
<span class="line diff add"><span style="color:#24292E;">        });</span></span>
<span class="line diff add"><span style="color:#24292E;">        scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(warning);</span></span></code></pre></div><p><code>opacity</code> に <code>0</code> を設定することで、エンティティを透過状態にしています。</p><p>残り時間の更新処理で、トゥイーンを使って警告用の背景を明滅させます。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 残り時間の更新</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">timer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scene.</span><span style="color:#B392F0;">setInterval</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            remainingTime</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (remainingTime </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">...</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (remainingTime </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">tween</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> timeline.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(warning, {</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    loop: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// ループを有効にする</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 警告用の明滅トゥイーンの作成</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                tween</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    .</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">({ opacity: </span><span style="color:#79B8FF;">0.2</span><span style="color:#E1E4E8;"> }, </span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 300 ミリ秒で透過度 20%</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    .</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">({ opacity: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> }, </span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 300 ミリ秒で透過度を 0% に</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    .</span><span style="color:#B392F0;">wait</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">)</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    .</span><span style="color:#B392F0;">call</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (remainingTime </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) tween.</span><span style="color:#B392F0;">cancel</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 終了したらトゥイーンを終了</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">                    });</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">updateTimer</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }, </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 残り時間の更新</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">timer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scene.</span><span style="color:#6F42C1;">setInterval</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            remainingTime</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (remainingTime </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">...</span></span>
<span class="line diff add"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (remainingTime </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">) {</span></span>
<span class="line diff add"><span style="color:#24292E;">                </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">tween</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> timeline.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(warning, {</span></span>
<span class="line diff add"><span style="color:#24292E;">                    loop: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// ループを有効にする</span></span>
<span class="line diff add"><span style="color:#24292E;">                });</span></span>
<span class="line diff add"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 警告用の明滅トゥイーンの作成</span></span>
<span class="line diff add"><span style="color:#24292E;">                tween</span></span>
<span class="line diff add"><span style="color:#24292E;">                    .</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">({ opacity: </span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;"> }, </span><span style="color:#005CC5;">300</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 300 ミリ秒で透過度 20%</span></span>
<span class="line diff add"><span style="color:#24292E;">                    .</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">({ opacity: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> }, </span><span style="color:#005CC5;">300</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 300 ミリ秒で透過度を 0% に</span></span>
<span class="line diff add"><span style="color:#24292E;">                    .</span><span style="color:#6F42C1;">wait</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">400</span><span style="color:#24292E;">)</span></span>
<span class="line diff add"><span style="color:#24292E;">                    .</span><span style="color:#6F42C1;">call</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line diff add"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (remainingTime </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) tween.</span><span style="color:#6F42C1;">cancel</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 終了したらトゥイーンを終了</span></span>
<span class="line diff add"><span style="color:#24292E;">                    });</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">updateTimer</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }, </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">);</span></span></code></pre></div><p><code>remainingTime</code> が <code>10</code> になったときに警告の表示を開始します。</p><p>トゥイーンの生成には <code>timeline.create()</code> を用います。 第1引数には対象のエンティティを、第2引数にはオプションを指定します。 オプションで <code>loop</code> を <code>true</code> にしているため、トゥイーンアニメーションが繰り返し再生されます。</p><p>戻り値である変数 <code>tween</code> に、実際のトゥイーンの変化をメソッドチェーン形式で定義します。</p><p><code>to()</code> メソッドはエンティティの指定されたプロパティを変化させるためのもので、ここでは <code>opacity</code> を指定しています。 第2引数には変化にかかる時間をミリ秒単位で指定します。</p><p><code>wait()</code> メソッドは指定のミリ秒だけトゥイーンを一時停止します。</p><p><code>call()</code> メソッドは任意の関数を呼び出すもので、残り時間 <code>remainingTime</code> が <code>0</code> になったとき、トゥイーンをキャンセルして警告用の表示を停止します。</p><p>以上から、このトゥイーンは以下のような挙動を示します。</p><ol><li><code>warning.opacity</code> を <code>300</code> ミリ秒かけて <code>0.2</code> に変化させる</li><li><code>warning.opacity</code> を <code>300</code> ミリ秒かけて <code>0</code> に変化させる</li><li><code>400</code> ミリ秒待機する</li><li><code>remainingTime</code> が <code>0</code> であればトゥイーンをキャンセル、そうでなければ 1. へループ</li></ol><p><img src="`+F+'" alt=""></p><p>これで警告表示を実現できました。</p><p>akashic-timeline には他にも様々な機能が備わっています。 詳細については <a href="https://github.com/akashic-games/akashic-timeline/blob/master/getstarted.md" target="_blank" rel="noreferrer">ガイド文書</a> や <a href="https://akashic-games.github.io/akashic-timeline/api/" target="_blank" rel="noreferrer">API リファレンス</a> を参照してください。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Akashic Engine が提供する拡張ライブラリとして、二次元の物理エンジンをサポートする <a href="https://github.com/akashic-games/akashic-box2d" target="_blank" rel="noreferrer">akashic-box2d</a>、複数行の文字表示をサポートする <a href="https://github.com/akashic-games/akashic-label" target="_blank" rel="noreferrer">akashic-label</a> など他にも多くのものがあります。</p><p>また、もちろん開発者自身で拡張ライブラリを作成することもできます。 詳細については <a href="/tutorial/v3/library.html">拡張ライブラリを使う</a> も参照してください。</p></div><h2 id="完成したゲームとソースコード" tabindex="-1">完成したゲームとソースコード <a class="header-anchor" href="#完成したゲームとソースコード" aria-label="Permalink to &quot;完成したゲームとソースコード&quot;">​</a></h2>',29),C=s('<h2 id="おわりに" tabindex="-1">おわりに <a class="header-anchor" href="#おわりに" aria-label="Permalink to &quot;おわりに&quot;">​</a></h2><p>おつかれさまです！ 以上で「ブロックくずしをつくろう」のチュートリアルは終了となります。 本チュートリアルを通してゲーム開発に興味が湧いたのなら、ぜひ Akashic Engine を使って自身のゲームを作成してみましょう。</p><p>冒頭でも説明した通り、作成したゲームはニコニコ生放送上で遊ぶことができます。 <a href="/shin-ichiba/submit.html">ニコ生ゲームを投稿しよう</a> から、実際に作成したゲームをニコニコ生放送上で遊ぶための手順を確認することができます。</p><p>今回作成したゲームは一人プレイのものですが、Akashic Engine を使うと放送者と視聴者が参加できるマルチプレイのゲームも簡単に作成することができます。 マルチプレイのゲームを作成するためのガイドについては <a href="/shin-ichiba/multi/">ニコ生ゲームを作ろう » マルチプレイゲーム</a> を参照してください。</p><p>その他ニコ生ゲームを作る際の情報については <a href="/shin-ichiba/">ニコ生ゲームを作ろう</a> にまとまっています。 ニコ生ゲームを作成する際には、これらのページも併せて参照してください。</p>',5),v=JSON.parse('{"title":"オープニングとエンディング","description":"","frontmatter":{},"headers":[],"relativePath":"shin-ichiba/breakout/make-opening-and-ending.md","filePath":"shin-ichiba/breakout/make-opening-and-ending.md"}'),u={name:"shin-ichiba/breakout/make-opening-and-ending.md"},q=Object.assign(u,{setup(m){return(A,B)=>{const a=l("PlaygroundElement");return o(),e("div",null,[g,n(a,{"game-json-uri":"/demo/content/externals/timeline-sample/game.json",width:320,height:320,"show-download":!1,"show-tab":!1}),h,n(p,{name:"make-opening-and-ending"}),C])}}});export{v as __pageData,q as default};
