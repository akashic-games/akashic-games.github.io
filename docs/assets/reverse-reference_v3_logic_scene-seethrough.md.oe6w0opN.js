import{_ as a,c as i,I as n,a3 as e,o as t,E as h}from"./chunks/framework.DaCD_bki.js";const m=JSON.parse('{"title":"下のシーンに重ねて描画されるシーンを作る","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/logic/scene-seethrough.md","filePath":"reverse-reference/v3/logic/scene-seethrough.md"}'),o={name:"reverse-reference/v3/logic/scene-seethrough.md"},r=e(`<h1 id="下のシーンに重ねて描画されるシーンを作る" tabindex="-1">下のシーンに重ねて描画されるシーンを作る <a class="header-anchor" href="#下のシーンに重ねて描画されるシーンを作る" aria-label="Permalink to &quot;下のシーンに重ねて描画されるシーンを作る&quot;">​</a></h1><p>シーン生成時に <code>seethrough</code> オプションを指定すると、そのシーンはシーンスタックの一つの下のシーンに重ねて描画されます。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> seethroughScene </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  game: g.game,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  seethrough: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// sheetourhgScene に遷移する。ただし現在のシーンは下 (奥側) に描画されつづける。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g.game.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pushScene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(seethroughScene);</span></span></code></pre></div><p>前のシーンに戻る場合は、<a href="./popscene.html"><code>g.game.popScene()</code> を利用してください。</a></p><h2 id="利用例" tabindex="-1">利用例 <a class="header-anchor" href="#利用例" aria-label="Permalink to &quot;利用例&quot;">​</a></h2><p>次のコンテンツは、画面をタップ/クリックすると、灰色の矩形 (を表示するシーン) が覆い被さります。 灰色の矩形をタップ/クリックすると元のシーンに戻ります。</p>`,7),c=e('<h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p><code>g.game.pushScene()</code> を使うと、現在のシーンを残したまま別のシーンに遷移することができます。 その後 <code>g.game.popScene()</code> を呼び出すと、元のシーンに戻ります。</p><p><code>pushScene()</code> は何度でも呼び出せます。言い換えれば、シーンは「積み重ねる」ことができます。 積み重なったシーンの集まりをシーンスタックと呼ぶと、 <code>pushScene()</code> は「シーンスタックの上に新しいシーンを載せる」関数、 <code>popScene()</code> は「シーンスタックの一番上のシーンを取り除く」関数と考えることができます。</p><p>通常、ゲーム画面に描画されるのはシーンスタックの一番上のシーン (カレントシーン) だけです。</p><p>この動作を変更するのが <code>seethrough</code> オプションです。 <code>seethrough: true</code> が指定されたシーン (シースルーシーン) は、描画に先立って一つ下のシーンの描画を行います。 すなわち <strong>下のシーンの上に重ねて</strong> 描画されるシーンになります。 ただしその場合でも、 <code>onUpdate</code> や <code>onPointDown</code> などの通知はカレントシーンだけが受け取ります。 <strong>カレントシーン以外のゲーム画面を動かし続けることはできません</strong> 。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>いわゆる「メニュー画面」のように、背景として現在のシーンの上に重なる UI を表示したい状況を想定した機能です。 といっても通常のメニュー画面は一つのシーン内で作ってしまう方が簡単でしょう。</p><p>シースルーシーンは、特に「プレイヤーの選択によって必要なアセットが変化する」「全部のアセットを事前にロードすることは避けたい」ような場面で有効です。</p></div><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="https://akashic-games.github.io/akashic-engine/v3/interfaces/SceneParameterObject.html#seethrough" target="_blank" rel="noreferrer">API リファレンス</a></li></ul>',8);function p(l,d,g,k,u,_){const s=h("PlaygroundElement");return t(),i("div",null,[r,n(s,{gameJsonUri:"/snippets/reverse-reference/logic/seethrough-scene/game.json",width:600,height:400}),c])}const f=a(o,[["render",p]]);export{m as __pageData,f as default};
