import{_ as n,C as p,o as l,c as e,H as o,Q as s}from"./chunks/framework.459ab1e9.js";const v=JSON.parse('{"title":"複数のエンティティをまとめて扱う","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/drawing/multiple-entities.md","filePath":"reverse-reference/v3/drawing/multiple-entities.md"}'),c={name:"reverse-reference/v3/drawing/multiple-entities.md"},r=s(`<h1 id="複数のエンティティをまとめて扱う" tabindex="-1">複数のエンティティをまとめて扱う <a class="header-anchor" href="#複数のエンティティをまとめて扱う" aria-label="Permalink to &quot;複数のエンティティをまとめて扱う&quot;">​</a></h1><p>エンティティを入れ子構造にすることにより、複数のエンティティをまとめて操作することができます。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> group </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">E</span><span style="color:#E1E4E8;">({ scene: scene });</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> red </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">FilledRect</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 必要なプロパティ</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;">group.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(red); </span><span style="color:#6A737D;">// group の子エンティティに red を追加</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> green </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">FilledRect</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 必要なプロパティ</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;">group.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(green); </span><span style="color:#6A737D;">// group の子エンティティに green を追加</span></span>
<span class="line"><span style="color:#E1E4E8;">scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(group);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> group </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">E</span><span style="color:#24292E;">({ scene: scene });</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> red </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">FilledRect</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 必要なプロパティ</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">group.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(red); </span><span style="color:#6A737D;">// group の子エンティティに red を追加</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> green </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">FilledRect</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 必要なプロパティ</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">group.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(green); </span><span style="color:#6A737D;">// group の子エンティティに green を追加</span></span>
<span class="line"><span style="color:#24292E;">scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(group);</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">group.</span><span style="color:#B392F0;">hide</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 子エンティティの red, green ごと非表示になります</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">group.</span><span style="color:#6F42C1;">hide</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 子エンティティの red, green ごと非表示になります</span></span></code></pre></div><h2 id="利用例" tabindex="-1">利用例 <a class="header-anchor" href="#利用例" aria-label="Permalink to &quot;利用例&quot;">​</a></h2><p>次のコンテンツは、親エンティティ (<code>g.E</code>) に子エンティティを追加しまとめて半透明状態で表示します。</p>`,7),t=s(`<h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p>シーンにエンティティを <code>append()</code> できるのと同様、エンティティにもまた別のエンティティを <code>append()</code> することができます (入れ子構造)。 子エンティティは親エンティティに追従して動くので、入れ子にすることで複数のエンティティをまとめて操作することができます。 親エンティティを移動・回転・拡大すると、その子エンティティも同じように移動・回転・拡大されます。 また、親の透明度や非表示状態なども子エンティティに影響します。</p><p>複数のエンティティをグループ化する場合には <code>g.E</code> エンティティが便利です。 <code>g.E</code> は、それ自身は何も描画しないエンティティです。</p><p>親エンティティは、エンティティ生成時に <code>parent</code> プロパティで指定することもできます。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> group </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">E</span><span style="color:#E1E4E8;">({ scene: scene });</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> blue </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">FilledRect</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  scene: scene,</span></span>
<span class="line"><span style="color:#E1E4E8;">  width: </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  height: </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  cssColor: </span><span style="color:#9ECBFF;">&quot;blue&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  parent: group </span><span style="color:#6A737D;">// 親をgroup エンティティに指定</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> group </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">E</span><span style="color:#24292E;">({ scene: scene });</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> blue </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">FilledRect</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  scene: scene,</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  cssColor: </span><span style="color:#032F62;">&quot;blue&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  parent: group </span><span style="color:#6A737D;">// 親をgroup エンティティに指定</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="/tutorial/v3/display-order.html">チュートリアル</a></li></ul>`,7);function E(y,i,d,g,u,h){const a=p("PlaygroundElement");return l(),e("div",null,[r,o(a,{gameJsonUri:"/snippets/reverse-reference/drawing/multiple-entities/game.json",width:600,height:400}),t])}const _=n(c,[["render",E]]);export{v as __pageData,_ as default};
