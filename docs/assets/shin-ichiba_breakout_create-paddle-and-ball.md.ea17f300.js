import{_ as s}from"./chunks/TutorialDemoContentElement.vue_vue_type_script_setup_true_lang.ca0eae9b.js";import{o as a,c as n,H as p,Q as l}from"./chunks/framework.f1c0562b.js";import"./chunks/PlaygroundElement.a7f5e5b9.js";const e="/tutorial/breakout/assets/breakout_paddle.png",o="/assets/screenshot_create-paddle-and-ball_1.305075a1.png",c="/assets/tutorial_breakout_game_coordinates_1.c59958f8.png",t="/assets/tutorial_breakout_game_coordinates_2.eebe988c.png",r="/assets/tutorial_breakout_anchor.0f177563.png",d="/assets/screenshot_create-paddle-and-ball_2.73eeccda.png",i="/tutorial/breakout/assets/breakout_ball.png",E="/assets/screenshot_create-paddle-and-ball_3.b9b92072.png",y=l('<h1 id="パドルとボールの表示" tabindex="-1">パドルとボールの表示 <a class="header-anchor" href="#パドルとボールの表示" aria-label="Permalink to &quot;パドルとボールの表示&quot;">​</a></h1><p>それではゲームを作成していきます。 最初はパドルを表示しましょう。</p><h2 id="パドルを表示する" tabindex="-1">パドルを表示する <a class="header-anchor" href="#パドルを表示する" aria-label="Permalink to &quot;パドルを表示する&quot;">​</a></h2><p>パドルの画像は以下を利用します。</p><p><a href="/tutorial/breakout/assets/breakout_paddle.png"><img src="'+e+`" alt=""></a></p><p>Akashic Engine で画像を表示するための手順は大きく分けて以下になります。</p><ol><li>画像をアセットとして登録する</li><li>登録したアセットをシーンで読み込む</li><li>アセットを表示するエンティティを生成する</li></ol><p>まず、あらかじめ <code>assets</code> ディレクトリ内に <code>images</code> ディレクトリを作成しておきます。 上記を右クリック等で保存した後、 <code>breakout_paddle.png</code> を <code>assets/images</code> に保存してください。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">assets</span></span>
<span class="line"><span style="color:#e1e4e8;">├── game.json</span></span>
<span class="line"><span style="color:#e1e4e8;">└── images</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── breakout_paddle.png</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">assets</span></span>
<span class="line"><span style="color:#24292e;">├── game.json</span></span>
<span class="line"><span style="color:#24292e;">└── images</span></span>
<span class="line"><span style="color:#24292e;">    └── breakout_paddle.png</span></span></code></pre></div><p><code>breakout_paddle.png</code> をゲームに登録するために <code>akashic scan</code> コマンドを実行します。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">akashic scan asset</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">akashic scan asset</span></span></code></pre></div><p><code>akashic scan</code> は、現在のディレクトリからアセットファイルをスキャンして game.json を更新するコマンドです。</p><p>画像アセットの登録に成功すると、以下のように出力されます。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">INFO: Removed the declaration for &#39;image/player.png&#39;. The corresponding files to the path are not found.</span></span>
<span class="line"><span style="color:#e1e4e8;">INFO: Removed the declaration for &#39;image/shot.png&#39;. The corresponding files to the path are not found.</span></span>
<span class="line"><span style="color:#e1e4e8;">INFO: Removed the declaration for &#39;audio/se&#39;. The corresponding files to the path are not found.</span></span>
<span class="line"><span style="color:#e1e4e8;">INFO: Added the declaration for &#39;breakout_paddle.png&#39; (assets/images/breakout_paddle.png)</span></span>
<span class="line"><span style="color:#e1e4e8;">INFO: Done!</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">INFO: Removed the declaration for &#39;image/player.png&#39;. The corresponding files to the path are not found.</span></span>
<span class="line"><span style="color:#24292e;">INFO: Removed the declaration for &#39;image/shot.png&#39;. The corresponding files to the path are not found.</span></span>
<span class="line"><span style="color:#24292e;">INFO: Removed the declaration for &#39;audio/se&#39;. The corresponding files to the path are not found.</span></span>
<span class="line"><span style="color:#24292e;">INFO: Added the declaration for &#39;breakout_paddle.png&#39; (assets/images/breakout_paddle.png)</span></span>
<span class="line"><span style="color:#24292e;">INFO: Done!</span></span></code></pre></div><p>元々あったアセットの定義が削除され、新規に追加したパドル画像のアセットが登録されました。</p><p><img src="`+o+`" alt=""></p><p>続いて画像アセットをシーンで読み込ませるための設定を追加します。 <code>g.Scene</code> の生成部分を以下のように修正します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">scene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        game,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        assetPaths: [</span><span style="color:#9ECBFF;">&quot;/assets/images/breakout_paddle.png&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">scene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        game,</span></span>
<span class="line diff add"><span style="color:#24292E;">        assetPaths: [</span><span style="color:#032F62;">&quot;/assets/images/breakout_paddle.png&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span></code></pre></div><p><code>assetPaths</code> に先ほど追加した画像アセットのパスを指定します。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>パスが <code>/assets/images/...</code> のように絶対パス (<code>/</code> で始まるパス) で指定されている点に注意してください。 Akashic Engine では各アセットファイルへのアクセス時に game.json が存在するディレクトリをルート (<code>/</code>) から始まるように指定する必要があります。</p></div><p>それでは実際にパドルを表示してみましょう。 ゲーム内で画像を表示するには <code>g.Sprite</code> を利用します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    scene.onLoad.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line diff remove"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// ここからゲーム内容を記述します</span></span>
<span class="line diff remove"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// ...</span></span>
<span class="line diff remove"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// ここまでゲーム内容を記述します</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// paddle を作成</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">paddle</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            scene,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            src: scene.asset.</span><span style="color:#B392F0;">getImage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/assets/images/breakout_paddle.png&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            x: game.width </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            y: game.height </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            anchorX: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            anchorY: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(paddle); </span><span style="color:#6A737D;">// paddle をシーンに追加</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">    scene.onLoad.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line diff remove"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// ここからゲーム内容を記述します</span></span>
<span class="line diff remove"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// ...</span></span>
<span class="line diff remove"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// ここまでゲーム内容を記述します</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// paddle を作成</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">paddle</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line diff add"><span style="color:#24292E;">            scene,</span></span>
<span class="line diff add"><span style="color:#24292E;">            src: scene.asset.</span><span style="color:#6F42C1;">getImage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/assets/images/breakout_paddle.png&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line diff add"><span style="color:#24292E;">            x: game.width </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            y: game.height </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            anchorX: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            anchorY: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">        });</span></span>
<span class="line diff add"><span style="color:#24292E;">        scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(paddle); </span><span style="color:#6A737D;">// paddle をシーンに追加</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span></code></pre></div><p>パドルの生成部分について一つずつ見ていきます。</p><p><code>g.Sprite</code> は任意の画像を表示するためのエンティティです。</p><p><code>scene</code> には現在のシーンを指定します。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>new g.Sprite({ scene })</code> は <code>new g.Sprite({ scene: scene })</code> の略記法です。</p></div><p><code>src</code> に指定している <code>scene.asset.getImage()</code> は画像アセットを取得するメソッドです。 Akashic Engine は画像・音声などのファイルを <strong>アセット</strong> という単位で取り扱います。 <code>scene</code> で読み込んだアセットは <code>scene.asset</code> から参照することができます。 画像を表示することは、言い換えると「<code>src</code> に画像アセットを指定したスプライトエンティティを生成し、それをシーンに追加する」ことになります。</p><p><code>x</code>, <code>y</code> は対象のスプライトエンティティの座標を示しています。 Akashic Engine は以下のように左上を基点とした座標系となります。</p><p><img src="`+c+'" alt=""></p><p><code>game.width</code>, <code>game.height</code> はゲーム画面の大きさを示しています。 ここでは画面下部の左右中央に配置しています。</p><p><img src="'+t+'" alt=""></p><p>また、アンカーをパドルの中央に設定しています。</p><p>アンカーポイントは、エンティティ座標の基準となる点であり、また回転や拡大縮小する際の中心となる点です。 <code>(0, 0)</code> がエンティティの左上、<code>(0.5, 0.5)</code> がエンティティの中央、 <code>(1, 1)</code> がエンティティの右下になります。 <code>(0.5, 0.1)</code> のように x, y で別の値を指定したり <code>(-1.0, 2.0)</code> など ０ から １ の範囲外の値を指定することもできます。</p><p>ここでは回転や拡縮は利用していませんが、後の衝突判定のロジックを単純化するため、全てのスプライトエンティティのアンカーを中心に設定することにします。</p><p><img src="'+r+`" alt=""></p><p>以降は基本的にすべてのスプライトエンティティのアンカーを中央に設定しています。</p><h2 id="背景を表示する" tabindex="-1">背景を表示する <a class="header-anchor" href="#背景を表示する" aria-label="Permalink to &quot;背景を表示する&quot;">​</a></h2><p>ニコ生ゲームをニコニコ生放送上で実行すると、放送のストリーム映像を背景としてその上にゲームが表示されます。 黒色や白色などの単体色の文字をゲーム上でそのまま表示すると、ストリーム映像によってはその文字が見えづらくなる可能性があります。 ストリーム映像によってゲーム体験が阻害されるのを防ぐため、カバーとなる背景を表示しておきます。 ただし、放送のストリーム映像を完全に非表示にしてしまうと視聴者としても退屈となってしまうので、今回は透過度を 50% とします。</p><p>パドルの生成前に以下のような背景エンティティを作成します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    scene.onLoad.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 背景を作成</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">background</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">FilledRect</span><span style="color:#E1E4E8;">({</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            scene,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            cssColor: </span><span style="color:#9ECBFF;">&quot;#fff&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            x: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            y: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            width: game.width,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            height: game.height,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            opacity: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 透過度 50% で表示</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(background); </span><span style="color:#6A737D;">// 背景をシーンに追加</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// paddle を作成</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">paddle</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">        scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(paddle); </span><span style="color:#6A737D;">// paddle をシーンに追加</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">    scene.onLoad.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 背景を作成</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">background</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">FilledRect</span><span style="color:#24292E;">({</span></span>
<span class="line diff add"><span style="color:#24292E;">            scene,</span></span>
<span class="line diff add"><span style="color:#24292E;">            cssColor: </span><span style="color:#032F62;">&quot;#fff&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            x: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            y: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            width: game.width,</span></span>
<span class="line diff add"><span style="color:#24292E;">            height: game.height,</span></span>
<span class="line diff add"><span style="color:#24292E;">            opacity: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 透過度 50% で表示</span></span>
<span class="line diff add"><span style="color:#24292E;">        });</span></span>
<span class="line diff add"><span style="color:#24292E;">        scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(background); </span><span style="color:#6A737D;">// 背景をシーンに追加</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// paddle を作成</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">paddle</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">        scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(paddle); </span><span style="color:#6A737D;">// paddle をシーンに追加</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span></code></pre></div><p><code>g.FilledRect</code> は単純な長方形を表示するためのエンティティです。 ここでは <code>cssColor</code> に <code>#fff</code> (白) を指定した上で <code>opacity</code> を 0.5 に設定しています。</p><p><code>cssColor</code> には CSS の color プロパティに準拠した色が指定できます。 詳細は <a href="https://developer.mozilla.org/ja/docs/Web/CSS/color" target="_blank" rel="noreferrer">MDN のドキュメント</a> などを参照してください。</p><p>また背景については、他のエンティティとの衝突や回転などの処理が不要なため、 <code>x</code>, <code>y</code> が 0 になっていることに注意してください。 アンカーポイントを指定していないので、背景エンティティの左上端が位置の基準になっています。</p><p><code>paddle</code> をシーンに追加する前に背景をシーンに追加している点に注意してください。 Akashic Engine は基本的にシーンに追加した順番で描画されます。 もし <code>paddle</code> をシーンに追加したとに背景を追加してしまうと、パドルが背景の後ろに描画されてしまいます。</p><p>ゲームの描画順に関しては <a href="/reverse-reference/v3/drawing/display-order.html">描画順を変える</a> も併せて参照してください。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>エンティティ</strong> は Akashic Engine において <strong>画面に描画されうる全ての基底クラス</strong> を表し、 <code>g.E</code> として提供されています。 したがって <code>g.FilledRect</code> や <code>g.Sprite</code> も <code>g.E</code> を継承していることになります。 エンティティにはその他にもテキストを描画するための <code>g.Label</code> やコマ送りのフレームアニメーションを描画する <code>g.FrameSprite</code> などがあります。</p></div><h2 id="ゲームの起動" tabindex="-1">ゲームの起動 <a class="header-anchor" href="#ゲームの起動" aria-label="Permalink to &quot;ゲームの起動&quot;">​</a></h2><p>ここまで完了したら、一度ゲームを起動してみましょう。 <code>npm start</code> コマンドでゲームを起動できます。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span></span></code></pre></div><p>コマンド実行後、以下のように出力されます。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">akashic-sandbox listen port: 3000</span></span>
<span class="line"><span style="color:#e1e4e8;">hosting game: /path/to/your/dir/game.json</span></span>
<span class="line"><span style="color:#e1e4e8;">please access to http://localhost:3000/game/ by web-browser</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">akashic-sandbox listen port: 3000</span></span>
<span class="line"><span style="color:#24292e;">hosting game: /path/to/your/dir/game.json</span></span>
<span class="line"><span style="color:#24292e;">please access to http://localhost:3000/game/ by web-browser</span></span></code></pre></div><p><a href="http://localhost:3000/game/" target="_blank" rel="noreferrer">http://localhost:3000/game/</a> をウェブブラウザで表示してください。 画面下部にパドルが表示されていれば成功です。</p><p><img src="`+d+'" alt=""></p><h2 id="ボールの追加" tabindex="-1">ボールの追加 <a class="header-anchor" href="#ボールの追加" aria-label="Permalink to &quot;ボールの追加&quot;">​</a></h2><p>次にボールを表示してみましょう。 以下の画像ファイルをダウンロードして <code>assets/images</code> に配置します。</p><p><a href="/tutorial/breakout/assets/breakout_ball.png"><img src="'+i+`" alt=""></a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">assets</span></span>
<span class="line"><span style="color:#e1e4e8;">├── game.json</span></span>
<span class="line"><span style="color:#e1e4e8;">└── images</span></span>
<span class="line"><span style="color:#e1e4e8;">    ├── breakout_ball.png</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── breakout_paddle.png</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">assets</span></span>
<span class="line"><span style="color:#24292e;">├── game.json</span></span>
<span class="line"><span style="color:#24292e;">└── images</span></span>
<span class="line"><span style="color:#24292e;">    ├── breakout_ball.png</span></span>
<span class="line"><span style="color:#24292e;">    └── breakout_paddle.png</span></span></code></pre></div><p><code>akashic scan</code> コマンドを実行します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">akashic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">scan</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">asset</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">akashic</span><span style="color:#24292E;"> </span><span style="color:#032F62;">scan</span><span style="color:#24292E;"> </span><span style="color:#032F62;">asset</span></span></code></pre></div><p><code>assetPaths</code> にボールの画像ファイルを登録します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">scene</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        game,</span></span>
<span class="line diff remove"><span style="color:#E1E4E8;">        assetPaths: [</span><span style="color:#9ECBFF;">&quot;/assets/images/breakout_paddle.png&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        assetPaths: [</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;/assets/images/breakout_paddle.png&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;/assets/images/breakout_ball.png&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">scene</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        game,</span></span>
<span class="line diff remove"><span style="color:#24292E;">        assetPaths: [</span><span style="color:#032F62;">&quot;/assets/images/breakout_paddle.png&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line diff add"><span style="color:#24292E;">        assetPaths: [</span></span>
<span class="line diff add"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;/assets/images/breakout_paddle.png&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;/assets/images/breakout_ball.png&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">        ],</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span></code></pre></div><p>パドルを作成した直後にボールを作成します。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    scene.onLoad.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 背景を作成</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">background</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">FilledRect</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">        scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(background);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// paddle を作成</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">paddle</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">        scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(paddle); </span><span style="color:#6A737D;">// paddle をシーンに追加</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// ball を作成</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ball</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Sprite</span><span style="color:#E1E4E8;">({</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            scene,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            src: scene.asset.</span><span style="color:#B392F0;">getImage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/assets/images/breakout_ball.png&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            x: paddle.x,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            anchorX: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">            anchorY: </span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">,</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        });</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        ball.y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> paddle.y </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> paddle.height </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> ball.height </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">;</span></span>
<span class="line diff add"><span style="color:#E1E4E8;">        scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(ball); </span><span style="color:#6A737D;">// ball をシーンに追加</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">    scene.onLoad.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 背景を作成</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">background</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">FilledRect</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">        scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(background);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// paddle を作成</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">paddle</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">        scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(paddle); </span><span style="color:#6A737D;">// paddle をシーンに追加</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// ball を作成</span></span>
<span class="line diff add"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ball</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Sprite</span><span style="color:#24292E;">({</span></span>
<span class="line diff add"><span style="color:#24292E;">            scene,</span></span>
<span class="line diff add"><span style="color:#24292E;">            src: scene.asset.</span><span style="color:#6F42C1;">getImage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/assets/images/breakout_ball.png&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line diff add"><span style="color:#24292E;">            x: paddle.x,</span></span>
<span class="line diff add"><span style="color:#24292E;">            anchorX: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">            anchorY: </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line diff add"><span style="color:#24292E;">        });</span></span>
<span class="line diff add"><span style="color:#24292E;">        ball.y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> paddle.y </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> paddle.height </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> ball.height </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">;</span></span>
<span class="line diff add"><span style="color:#24292E;">        scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(ball); </span><span style="color:#6A737D;">// ball をシーンに追加</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span></code></pre></div><p><code>ball.y</code> については <code>ball.height</code> が確定してから算出しています。</p><p>ゲームを表示しているブラウザをリロードしてみましょう。 パドルの上部にボールが表示されていれば成功です。</p><p><img src="`+E+'" alt=""></p><p>以上がゲーム作成の導入になります。 次章以降では、実際にゲームとして遊べるようにコードを修正していきます。</p><h2 id="実行例とソースコード" tabindex="-1">実行例とソースコード <a class="header-anchor" href="#実行例とソースコード" aria-label="Permalink to &quot;実行例とソースコード&quot;">​</a></h2>',68),k=JSON.parse('{"title":"パドルとボールの表示","description":"","frontmatter":{},"headers":[],"relativePath":"shin-ichiba/breakout/create-paddle-and-ball.md","filePath":"shin-ichiba/breakout/create-paddle-and-ball.md"}'),g={name:"shin-ichiba/breakout/create-paddle-and-ball.md"},v=Object.assign(g,{setup(h){return(f,u)=>(a(),n("div",null,[y,p(s,{name:"create-paddle-and-ball"})]))}});export{k as __pageData,v as default};
