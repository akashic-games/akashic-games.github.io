import{_ as a,C as l,o,c as p,H as e,Q as s}from"./chunks/framework.f1c0562b.js";const C=JSON.parse('{"title":"エンティティの描画方法を変える (compositeOperation)","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/drawing/composite-operation.md","filePath":"reverse-reference/v3/drawing/composite-operation.md"}'),t={name:"reverse-reference/v3/drawing/composite-operation.md"},c=s(`<h1 id="エンティティの描画方法を変える-compositeoperation" tabindex="-1">エンティティの描画方法を変える (compositeOperation) <a class="header-anchor" href="#エンティティの描画方法を変える-compositeoperation" aria-label="Permalink to &quot;エンティティの描画方法を変える (compositeOperation)&quot;">​</a></h1><p>エンティティの描画方法を変えるには、<code>g.E#compositeOperation</code> を利用します。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> green </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">FilledRect</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// その他のプロパティ</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> red </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">FilledRect</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// その他のプロパティ</span></span>
<span class="line"><span style="color:#E1E4E8;">  compositeOperation: </span><span style="color:#9ECBFF;">&quot;lighter&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 描画時の合成方法を指定</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;">scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(green); </span><span style="color:#6A737D;">// シーンに追加する</span></span>
<span class="line"><span style="color:#E1E4E8;">scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(red); </span><span style="color:#6A737D;">// シーンに追加する</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> green </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">FilledRect</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">...</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// その他のプロパティ</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> red </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">FilledRect</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">...</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// その他のプロパティ</span></span>
<span class="line"><span style="color:#24292E;">  compositeOperation: </span><span style="color:#032F62;">&quot;lighter&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 描画時の合成方法を指定</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(green); </span><span style="color:#6A737D;">// シーンに追加する</span></span>
<span class="line"><span style="color:#24292E;">scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(red); </span><span style="color:#6A737D;">// シーンに追加する</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">red.compositeOperation </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;lighter&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 既存のオブジェクトを変更</span></span>
<span class="line"><span style="color:#E1E4E8;">red.</span><span style="color:#B392F0;">modified</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// modified() で表示に反映</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">red.compositeOperation </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;lighter&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 既存のオブジェクトを変更</span></span>
<span class="line"><span style="color:#24292E;">red.</span><span style="color:#6F42C1;">modified</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// modified() で表示に反映</span></span></code></pre></div><h2 id="利用例" tabindex="-1">利用例 <a class="header-anchor" href="#利用例" aria-label="Permalink to &quot;利用例&quot;">​</a></h2><p>次のコンテンツは、<code>g.E#compositeOperation</code> の各値を反映した内容を表示します。&quot;次へ&quot;, &quot;前へ&quot; のラベルを押下することで描画内容が変更されます。</p>`,7),r=s(`<h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p><code>g.E#compositeOperation</code> は、エンティティを描画する際の合成方法を指定するプロパティです。</p><p>以下の値が指定できます。<code>experimental</code> の prefix が付いた値は、ゲームを実行する環境(Web ブラウザ)によって挙動にばらつくことがあるため、試験的導入としています。</p><table><thead><tr><th style="text-align:center;"><code>compositeOperation</code></th><th style="text-align:left;">内容</th><th style="text-align:left;">備考</th></tr></thead><tbody><tr><td style="text-align:center;"><code>&quot;source-over&quot;</code></td><td style="text-align:left;">先に描画された領域の上に描画する。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;"><code>&quot;source-over&quot;</code></td><td style="text-align:left;">先に描画された領域の上に描画する。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;"><code>&quot;source-atop&quot;</code></td><td style="text-align:left;">先に描画された領域と重なった部分のみを描画する。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;"><code>&quot;lighter&quot;</code></td><td style="text-align:left;">先に描画された領域と重なった部分の色を加算して描画する。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;"><code>&quot;copy&quot;</code></td><td style="text-align:left;">先に描画された領域を全て無視して描画する。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;"><code>&quot;experimental-source-in&quot;</code></td><td style="text-align:left;">先に描画された領域と重なった部分に描画を行い、それ以外の部分を透明にする。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;"><code>&quot;experimental-source-out&quot;</code></td><td style="text-align:left;">先に描画された領域と重なっていない部分に描画を行い、それ以外の部分を透明にする。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;"><code>&quot;experimental-destination-atop&quot;</code></td><td style="text-align:left;">描画する領域だけを表示し、先に描画された領域と重なった部分は描画先を表示する。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;"><code>&quot;experimental-destination-in&quot;</code></td><td style="text-align:left;">先に描画された領域と重なっていない部分を透明にし、重なった部分は描画先を表示する。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;"><code>&quot;destination-out&quot;</code></td><td style="text-align:left;">描画する領域を透明にする。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;"><code>&quot;destination-over&quot;</code></td><td style="text-align:left;">先に描画された領域の下に描画する。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;"><code>&quot;xor&quot;</code></td><td style="text-align:left;">先に描画された領域と重なった部分のみ透明にする。</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;"><code>&quot;difference&quot;</code></td><td style="text-align:left;">先に描画された内容との差 (の絶対値) を描画する。</td><td style="text-align:left;">レンダラーに制限あり</td></tr><tr><td style="text-align:center;"><code>&quot;saturation&quot;</code></td><td style="text-align:left;">先に描画された領域の彩度を上書きする (色相と輝度は維持する) 。</td><td style="text-align:left;">レンダラーに制限あり</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><code>&quot;difference&quot;</code> と <code>&quot;saturation&quot;</code> は webgl レンダラーでは利用できません。 <strong>game.json の <code>&quot;renderers&quot;</code> を <code>[&quot;canvas&quot;]</code> とするか、または省略してください</strong> 。</p><p>参考: <a href="./../../../reference/manifest/game-json.html#renderers">リファレンス » game.json の仕様 » renderers</a></p></div><h3 id="pane-の利用" tabindex="-1">Pane の利用 <a class="header-anchor" href="#pane-の利用" aria-label="Permalink to &quot;Pane の利用&quot;">​</a></h3><p><code>&quot;source-atop&quot;</code> や <code>&quot;ligther&quot;</code> を利用する際に、<code>Pane</code> を利用することで、先に描画された領域を合成対象に含めないようにすることが出来ます。 下記のコードでは <code>Pane</code> の子エンティティを合成対象にし <code>Pane</code> の外にある <code>bg</code> は含まれなくなります。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> scene </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Scene</span><span style="color:#E1E4E8;">({ game: g.game });</span></span>
<span class="line"><span style="color:#E1E4E8;">  scene.onLoad.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bg</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createRect</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      scene,</span></span>
<span class="line"><span style="color:#E1E4E8;">      g.game.width,</span></span>
<span class="line"><span style="color:#E1E4E8;">      g.game.height,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;lightgray&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">green</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createRect</span><span style="color:#E1E4E8;">(scene, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;green&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">red</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createRect</span><span style="color:#E1E4E8;">(scene, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;red&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    red.compositeOperation </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;source-atop&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">blue</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createRect</span><span style="color:#E1E4E8;">(scene, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">75</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;blue&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    blue.compositeOperation </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;source-atop&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pane</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Pane</span><span style="color:#E1E4E8;">({ scene: scene, width: </span><span style="color:#79B8FF;">175</span><span style="color:#E1E4E8;">, height: </span><span style="color:#79B8FF;">150</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#E1E4E8;">    pane.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(green);</span></span>
<span class="line"><span style="color:#E1E4E8;">    pane.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(red);</span></span>
<span class="line"><span style="color:#E1E4E8;">    pane.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(blue);</span></span>
<span class="line"><span style="color:#E1E4E8;">    scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(bg);</span></span>
<span class="line"><span style="color:#E1E4E8;">    scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(pane);</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">  g.game.</span><span style="color:#B392F0;">pushScene</span><span style="color:#E1E4E8;">(scene);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createRect</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">scene</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">width</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">height</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">x</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">y</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">color</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">FilledRect</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    scene: scene,</span></span>
<span class="line"><span style="color:#E1E4E8;">    width: width,</span></span>
<span class="line"><span style="color:#E1E4E8;">    height: height,</span></span>
<span class="line"><span style="color:#E1E4E8;">    x: x,</span></span>
<span class="line"><span style="color:#E1E4E8;">    y: y,</span></span>
<span class="line"><span style="color:#E1E4E8;">    cssColor: color</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> main;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> scene </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Scene</span><span style="color:#24292E;">({ game: g.game });</span></span>
<span class="line"><span style="color:#24292E;">  scene.onLoad.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bg</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRect</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      scene,</span></span>
<span class="line"><span style="color:#24292E;">      g.game.width,</span></span>
<span class="line"><span style="color:#24292E;">      g.game.height,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;lightgray&quot;</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">green</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRect</span><span style="color:#24292E;">(scene, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;green&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">red</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRect</span><span style="color:#24292E;">(scene, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;red&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    red.compositeOperation </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;source-atop&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">blue</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRect</span><span style="color:#24292E;">(scene, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">75</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;blue&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    blue.compositeOperation </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;source-atop&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pane</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Pane</span><span style="color:#24292E;">({ scene: scene, width: </span><span style="color:#005CC5;">175</span><span style="color:#24292E;">, height: </span><span style="color:#005CC5;">150</span><span style="color:#24292E;"> });</span></span>
<span class="line"><span style="color:#24292E;">    pane.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(green);</span></span>
<span class="line"><span style="color:#24292E;">    pane.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(red);</span></span>
<span class="line"><span style="color:#24292E;">    pane.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(blue);</span></span>
<span class="line"><span style="color:#24292E;">    scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(bg);</span></span>
<span class="line"><span style="color:#24292E;">    scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(pane);</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  g.game.</span><span style="color:#6F42C1;">pushScene</span><span style="color:#24292E;">(scene);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRect</span><span style="color:#24292E;">(</span><span style="color:#E36209;">scene</span><span style="color:#24292E;">, </span><span style="color:#E36209;">width</span><span style="color:#24292E;">, </span><span style="color:#E36209;">height</span><span style="color:#24292E;">, </span><span style="color:#E36209;">x</span><span style="color:#24292E;">, </span><span style="color:#E36209;">y</span><span style="color:#24292E;">, </span><span style="color:#E36209;">color</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">FilledRect</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    scene: scene,</span></span>
<span class="line"><span style="color:#24292E;">    width: width,</span></span>
<span class="line"><span style="color:#24292E;">    height: height,</span></span>
<span class="line"><span style="color:#24292E;">    x: x,</span></span>
<span class="line"><span style="color:#24292E;">    y: y,</span></span>
<span class="line"><span style="color:#24292E;">    cssColor: color</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> main;</span></span></code></pre></div><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="/akashic-engine/v3/classes/E.html#compositeOperation">API リファレンス</a></li></ul>`,10);function E(y,i,d,F,g,u){const n=l("PlaygroundElement");return o(),p("div",null,[c,e(n,{gameJsonUri:"/snippets/reverse-reference/drawing/composite-operation/game.json",width:600,height:400}),r])}const q=a(t,[["render",E]]);export{C as __pageData,q as default};
