import{_ as n,C as l,o as e,c as o,H as p,Q as s}from"./chunks/framework.459ab1e9.js";const g=JSON.parse('{"title":"文字列の色を変える","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/text/color.md","filePath":"reverse-reference/v3/text/color.md"}'),t={name:"reverse-reference/v3/text/color.md"},c=s(`<h1 id="文字列の色を変える" tabindex="-1">文字列の色を変える <a class="header-anchor" href="#文字列の色を変える" aria-label="Permalink to &quot;文字列の色を変える&quot;">​</a></h1><p>文字列の色は <code>textColor</code> プロパティで変更することができます。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> label </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Label</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">,      </span><span style="color:#6A737D;">// その他のプロパティ</span></span>
<span class="line"><span style="color:#E1E4E8;">  textColor: </span><span style="color:#9ECBFF;">&quot;red&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 赤色で描画する</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#E1E4E8;">scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(label);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> label </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Label</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">,      </span><span style="color:#6A737D;">// その他のプロパティ</span></span>
<span class="line"><span style="color:#24292E;">  textColor: </span><span style="color:#032F62;">&quot;red&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 赤色で描画する</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#24292E;">scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(label);</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">label.textColor </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;red&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 赤色に変更する</span></span>
<span class="line"><span style="color:#E1E4E8;">label.</span><span style="color:#B392F0;">invalidate</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// invalidate() で表示に反映</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">label.textColor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;red&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 赤色に変更する</span></span>
<span class="line"><span style="color:#24292E;">label.</span><span style="color:#6F42C1;">invalidate</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// invalidate() で表示に反映</span></span></code></pre></div><h2 id="利用例" tabindex="-1">利用例 <a class="header-anchor" href="#利用例" aria-label="Permalink to &quot;利用例&quot;">​</a></h2><p>次のコンテンツは、 <code>Label</code> を赤色で表示します。</p>`,7),r=s(`<h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p>文字の描画色を買えるには <code>textColor</code> プロパティを利用します。</p><p>下記のコードでは、生成した <code>Label</code> は赤色で描画されます。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> label </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> g.</span><span style="color:#B392F0;">Label</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  scene: scene,</span></span>
<span class="line"><span style="color:#E1E4E8;">  font: font,</span></span>
<span class="line"><span style="color:#E1E4E8;">  text: </span><span style="color:#9ECBFF;">&quot;こんにちは&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  textColor: </span><span style="color:#9ECBFF;">&quot;red&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 赤色で描画する</span></span>
<span class="line"><span style="color:#E1E4E8;">  fontSize: </span><span style="color:#79B8FF;">48</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  x: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  y: </span><span style="color:#79B8FF;">50</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">scene.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(label);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> label </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> g.</span><span style="color:#6F42C1;">Label</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  scene: scene,</span></span>
<span class="line"><span style="color:#24292E;">  font: font,</span></span>
<span class="line"><span style="color:#24292E;">  text: </span><span style="color:#032F62;">&quot;こんにちは&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  textColor: </span><span style="color:#032F62;">&quot;red&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 赤色で描画する</span></span>
<span class="line"><span style="color:#24292E;">  fontSize: </span><span style="color:#005CC5;">48</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  x: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  y: </span><span style="color:#005CC5;">50</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">scene.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(label);</span></span></code></pre></div><p>生成後の <code>Label</code> の描画色は、 <code>textColor</code> プロパティで参照できます。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">label.textColor; </span><span style="color:#6A737D;">// =&gt; &quot;red&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">label.textColor; </span><span style="color:#6A737D;">// =&gt; &quot;red&quot;</span></span></code></pre></div><p><code>textColor</code> プロパティに代入することで、描画色を変更できます。表示への反映には <code>invalidate()</code> メソッドを呼び出す必要があります。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">label.textColor </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;green&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 描画色を緑色に変更する</span></span>
<span class="line"><span style="color:#E1E4E8;">label.</span><span style="color:#B392F0;">invalidate</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// invalidate() で表示に反映</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">label.textColor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;green&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 描画色を緑色に変更する</span></span>
<span class="line"><span style="color:#24292E;">label.</span><span style="color:#6F42C1;">invalidate</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// invalidate() で表示に反映</span></span></code></pre></div><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="/tutorial/v3/text.html">チュートリアル</a></li><li><a href="/akashic-engine/v3/classes/Label.html">API リファレンス</a></li></ul>`,10);function i(E,y,d,h,u,v){const a=l("PlaygroundElement");return e(),o("div",null,[c,p(a,{gameJsonUri:"/snippets/reverse-reference/text/color/game.json",width:600,height:400}),r])}const C=n(t,[["render",i]]);export{g as __pageData,C as default};
