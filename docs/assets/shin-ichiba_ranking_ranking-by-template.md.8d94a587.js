import{_ as n,C as l,o as p,c as o,H as e,w as t,Q as s,k as c}from"./chunks/framework.f1c0562b.js";const r="/assets/ss-ranking-game-template.30833dac.png",C=JSON.parse('{"title":"ランキングゲームテンプレート","description":"","frontmatter":{},"headers":[],"relativePath":"shin-ichiba/ranking/ranking-by-template.md","filePath":"shin-ichiba/ranking/ranking-by-template.md"}'),i={name:"shin-ichiba/ranking/ranking-by-template.md"},E=s(`<h1 id="ランキングゲームテンプレート" tabindex="-1">ランキングゲームテンプレート <a class="header-anchor" href="#ランキングゲームテンプレート" aria-label="Permalink to &quot;ランキングゲームテンプレート&quot;">​</a></h1><p>Akashic 関連ツール <code>akashic init</code> で、ランキングゲーム向けのテンプレートからゲームを生成できます。 ランキングゲームの作成には、このテンプレートを利用することを推奨します。</p><h2 id="install" tabindex="-1">インストール <a class="header-anchor" href="#install" aria-label="Permalink to &quot;インストール {#install}&quot;">​</a></h2><p><code>akashic init</code> コマンドを利用するには <code>akashic-cli</code> ツールが必要です。 <a href="./../install.html">インストール</a> のページを参考にインストールを行ってください。</p><h2 id="generate-template" tabindex="-1">ランキングゲームテンプレートからのゲーム生成 <a class="header-anchor" href="#generate-template" aria-label="Permalink to &quot;ランキングゲームテンプレートからのゲーム生成 {#generate-template}&quot;">​</a></h2><p><code>akashic-cli</code> をインストールすると、 CUI ツールで <code>akashic</code> コマンドが利用できるようになっています。 ランキングゲームテンプレートからゲームを生成するには、以下のコマンドを実行してください。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">akashic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">javascript-shin-ichiba-ranking</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">akashic</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">javascript-shin-ichiba-ranking</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>ここでは解説しませんが、 <code>-t typescript-shin-ichiba-ranking</code> とすると、JavaScript ではなく TypeScript 向けテンプレートが利用できます。</p></div><h3 id="補足-詳細な手順" tabindex="-1">(補足) 詳細な手順 <a class="header-anchor" href="#補足-詳細な手順" aria-label="Permalink to &quot;(補足) 詳細な手順&quot;">​</a></h3><p>CUI ツールを起動します。適当な作業場所のフォルダに <code>cd</code> コマンドで移ってください。仮に <code>c:\\akashic</code> というところに移るものとします。以下のようなコマンドになります。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">c:</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\a</span><span style="color:#9ECBFF;">kashic</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">c:</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\a</span><span style="color:#032F62;">kashic</span></span></code></pre></div><p>ここに、今回のゲーム用のフォルダを用意したいと思います。以下のコマンドを実行してください。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">game</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">game</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">game</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">game</span></span></code></pre></div><p><code>mkdir</code> で <code>game</code> というフォルダを作り、 <code>cd</code> で作業場所フォルダを今作成した新しいフォルダにしたので、このフォルダで Akashic ゲームを生成したいと思います。</p><p>以下のコマンドを実行してください。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">akashic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">javascript-shin-ichiba-ranking</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">akashic</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">javascript-shin-ichiba-ranking</span></span></code></pre></div><p><code>akashic init</code> は、「現在の作業フォルダに Akashic ゲームを生成する」コマンドです。 <code>-t javascript-shin-ichiba-ranking</code> の部分は、「JavaScript 向け・ランキングゲーム用のテンプレートを使う」という意味の <code>akashic init</code> コマンドのオプションです。 これにより、いくつかランキングゲームの作成に必要な処理が最初から組み込まれたゲームが生成されます。</p><p>このコマンドを実行すると、対話型のインターフェースでゲーム画面の幅・高さなどの指定を求められます。 お好みの値を入力して Enter キーを押してください。 何も入力せずに Enter キーを押すと、画面サイズ 1280x720 で 30fps になります。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>ニコニコ生放送上で実行した時、上下左右に余白を作らないためには、画面サイズが 16:9 である必要があります。 FPS は 30 または 60 を推奨します。</p></div><h2 id="テンプレートから生成されたゲーム" tabindex="-1">テンプレートから生成されたゲーム <a class="header-anchor" href="#テンプレートから生成されたゲーム" aria-label="Permalink to &quot;テンプレートから生成されたゲーム&quot;">​</a></h2><p>テンプレートから生成されたゲームは、次のように画面中央でキャラクタが浮かんでいるだけのゲームになっています。</p>`,21),y=c("img",{src:r},null,-1),d=s(`<p>これは <code>akashic-sandbox</code> を実行し、 <a href="http://localhost:3000" target="_blank" rel="noreferrer">http://localhost:3000</a> にアクセスすると確認できます。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">akashic-sandbox</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">akashic-sandbox</span></span></code></pre></div><p>このゲームは次の要素で構成されています:</p><ul><li>画面内をクリックすると弾を発射するキャラクタ</li><li>弾を発射すると増えていく右上の得点 (SCORE)</li><li>画面右上の残り時間 (TIME)</li></ul><p>これ自体は、画像表示や音声再生など、よく使われる機能のサンプルコードとしての意味あいが強く、ゲーム性はほぼありません。 しかし最低限ランキングゲームとしての形を満たしています (画面の連打回数を競うだけのゲーム) 。 また以下で紹介するように、ランキングゲームに必要な設定や処理が含まれています。</p><p>ここから不要なコードを削除して、オリジナルのランキングゲームを作成してください。</p><div class="tip custom-block"><p class="custom-block-title">参考</p><ul><li><a href="/tutorial/v3/basic.html">Akashic Engine 入門 » シングルプレイのゲーム作成</a></li><li><a href="./../breakout/">ランキングゲームを作ろう</a> (「ブロック崩し」のランキングゲームを作成するチュートリアル)</li></ul></div><h3 id="declare-ranking" tabindex="-1">supportedModes の指定 <a class="header-anchor" href="#declare-ranking" aria-label="Permalink to &quot;supportedModes の指定 {#declare-ranking}&quot;">​</a></h3><p>ランキングゲームテンプレートの game.json では、<a href="./#supported-modes">supportedModes の指定</a> が最初から行われています。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// ... その他の記述 ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;environment&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;nicolive&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;supportedModes&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;ranking&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// [!code hilight]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// ... その他の記述 ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;environment&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;nicolive&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;supportedModes&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;ranking&quot;</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// [!code hilight]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="declare-timelimit" tabindex="-1">制限時間の申告 <a class="header-anchor" href="#declare-timelimit" aria-label="Permalink to &quot;制限時間の申告 {#declare-timelimit}&quot;">​</a></h3><p>ランキングゲームテンプレートの game.json では、<a href="./index.html#total-time-limit">制限時間の申告</a> が最初から行われています。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// ... その他の記述 ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;environment&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;nicolive&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;supportedModes&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;ranking&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;preferredSessionParameters&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;totalTimeLimit&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">82</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// ... その他の記述 ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;environment&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;nicolive&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;supportedModes&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;ranking&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;preferredSessionParameters&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;totalTimeLimit&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">82</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>totalTimeLimit</code> には 20 以上 200 以下の整数を指定できます。</p><h3 id="handle-timelimit" tabindex="-1">制限時間の参照 <a class="header-anchor" href="#handle-timelimit" aria-label="Permalink to &quot;制限時間の参照 {#handle-timelimit}&quot;">​</a></h3><p>ランキングゲームテンプレートの main.js では、 <code>main()</code> の引数 <code>param</code> から制限時間を取得しています。次の箇所がそれです。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> time </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 制限時間</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (param.sessionParameter.totalTimeLimit) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  time </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> param.sessionParameter.totalTimeLimit;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> time </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 制限時間</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (param.sessionParameter.totalTimeLimit) {</span></span>
<span class="line"><span style="color:#24292E;">  time </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> param.sessionParameter.totalTimeLimit;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>この値を使って、次のように <code>scene.update</code> で 1 フレームごとにカウントダウンしていき、ラベル <code>timeLabel</code> で画面に表示しています。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateHandler</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (time </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// (中略)</span></span>
<span class="line"><span style="color:#E1E4E8;">    scene.update.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(updateHandler); </span><span style="color:#6A737D;">// このハンドラを削除＝カウントダウンを停止</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// カウントダウン処理</span></span>
<span class="line"><span style="color:#E1E4E8;">  time </span><span style="color:#F97583;">-=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> g.game.fps;</span></span>
<span class="line"><span style="color:#E1E4E8;">  timeLabel.text </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;TIME: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">ceil</span><span style="color:#E1E4E8;">(time);</span></span>
<span class="line"><span style="color:#E1E4E8;">  timeLabel.</span><span style="color:#B392F0;">invalidate</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#E1E4E8;">scene.update.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(updateHandler);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateHandler</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (time </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// (中略)</span></span>
<span class="line"><span style="color:#24292E;">    scene.update.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(updateHandler); </span><span style="color:#6A737D;">// このハンドラを削除＝カウントダウンを停止</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// カウントダウン処理</span></span>
<span class="line"><span style="color:#24292E;">  time </span><span style="color:#D73A49;">-=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> g.game.fps;</span></span>
<span class="line"><span style="color:#24292E;">  timeLabel.text </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;TIME: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">ceil</span><span style="color:#24292E;">(time);</span></span>
<span class="line"><span style="color:#24292E;">  timeLabel.</span><span style="color:#6F42C1;">invalidate</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#24292E;">scene.update.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(updateHandler);</span></span></code></pre></div><p>厳密には、ゲーム内で制限時間を扱う必要はありません。ランキングゲームは制限時間に応じて自動的に・強制的に終了されるためです。 しかし現実には、「残り時間をゲーム画面に表示したい」といったことはよくあるでしょう。 残り時間が短くなったら結果発表演出を行いたい、ということも考えられます。 そのような場合に <code>param.sessionParameter.totalTimeLimit</code> を利用してください。</p><div class="danger custom-block"><p class="custom-block-title">IMPORTANT</p><p>制限時間は「ゲーム起動から終了までの全ての時間」であることに注意してください。 これには「ゲームリソースのダウンロード時間」なども含まれます。 そのため、制限時間のギリギリで行う演出は、回線状況によって途切れてしまう可能性があります。 終了前に結果発表演出などを挟む場合は、念のため <strong>制限時間の 10 秒程度前までに演出を完了させることを推奨します</strong> 。</p></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>制限時間は、game.json での指定の有無に関わらず <code>param.sessionParameter</code> から取得してください。 game.json での指定はあくまで &quot;希望値の申告&quot; であるためです。 将来的に、何らかの理由でニコニコ生放送が独自に制限時間を設定する場合があり得ます。</p></div><h3 id="handle-score" tabindex="-1">スコアの処理 <a class="header-anchor" href="#handle-score" aria-label="Permalink to &quot;スコアの処理 {#handle-score}&quot;">​</a></h3><p>テンプレートの main.js では、ランキングゲームの要件である <a href="./index.html#score">スコアの代入</a> も行っています。</p><p>実行開始時、次のコードで最初にスコアを 0 点にセットしています。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">g.game.vars.gameState </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { score: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> };</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">g.game.vars.gameState </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { score: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> };</span></span></code></pre></div><p>テンプレートのゲームは、単に画面がクリックされたら 1 点加算するというものです。 これは次の記述で実現されています。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">scene.onPointDownCapture.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 制限時間以内であればタッチ1回ごとにSCOREに+1します</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (time </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    g.game.vars.gameState.score</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    scoreLabel.text </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;SCORE: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> g.game.vars.gameState.score;</span></span>
<span class="line"><span style="color:#E1E4E8;">    scoreLabel.</span><span style="color:#B392F0;">invalidate</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// ... その他、弾の発射や効果音再生処理</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">scene.onPointDownCapture.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 制限時間以内であればタッチ1回ごとにSCOREに+1します</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (time </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    g.game.vars.gameState.score</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    scoreLabel.text </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;SCORE: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> g.game.vars.gameState.score;</span></span>
<span class="line"><span style="color:#24292E;">    scoreLabel.</span><span style="color:#6F42C1;">invalidate</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// ... その他、弾の発射や効果音再生処理</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><code>++</code> で <code>score</code> を 1 加算し、それをラベル <code>scoreLabel</code> で画面に表示しています。 実際のゲームでは「アイテムを取得した時」「敵を倒した時」「一定時間生き残った時」などお好みの条件でスコアを追加してください。</p><p>スコアは 0 以上の整数である必要があります。上限は今のところありませんが、現実的に表示が崩れてしまうので、10 万未満 (5 桁以内) を推奨します。</p><h3 id="random" tabindex="-1">共通乱数生成器 <a class="header-anchor" href="#random" aria-label="Permalink to &quot;共通乱数生成器 {#random}&quot;">​</a></h3><p>ランキングゲームテンプレートは、プレイヤー間で共通の乱数生成器 (<strong>共通乱数生成器</strong>) を提供しています。 テンプレートの main.js 内、 <code>main()</code> の引数が <code>param</code> の時、共通乱数生成器は <code>param.random</code> で取得できます。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">param</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">random</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> param.random; </span><span style="color:#6A737D;">// 共通乱数生成器</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">r</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> random.</span><span style="color:#B392F0;">generate</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// プレイヤー間で共通の乱数値を生成</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#E36209;">param</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">random</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> param.random; </span><span style="color:#6A737D;">// 共通乱数生成器</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">r</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> random.</span><span style="color:#6F42C1;">generate</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// プレイヤー間で共通の乱数値を生成</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>ランダム性を持たせつつ、全プレイヤーが等しい条件で競うようなゲームを作成する場合は、この共通乱数生成器を利用してください。 プレイヤーごとにランダムに異なる状態を作りたいゲームでは、 単に <code>g.game.random</code> (か <code>g.game.localRandom</code>) を利用してください。</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>共通乱数生成器は <strong>ランキングゲームテンプレートにしか存在しない</strong> ことに注意してください。</p><p>マルチプレイゲームの場合、エンジンが乱数シードを揃えるため <code>g.game.random</code> の結果がプレイヤー間で一致します。 逆にマルチプレイゲームにおいて「プレイヤー間で独立な乱数」を生成するには <code>g.game.localRandom</code> を使う必要があります。</p><p>これはランキングゲームが、放送者・各視聴者の手元で個別に実行されるシングルプレイのゲームであるためです。 最後に集計される得点以外は独立しているので、<code>g.game.random</code> も <code>g.game.localRandom</code> もプレイヤーごとにばらばらになります。</p><table><thead><tr><th style="text-align:center;"></th><th style="text-align:left;">ランキングゲーム</th><th style="text-align:left;">マルチプレイゲーム</th></tr></thead><tbody><tr><td style="text-align:center;"><code>g.game.random</code></td><td style="text-align:left;">プレイヤー間で独立</td><td style="text-align:left;">プレイヤー間で共通</td></tr><tr><td style="text-align:center;"><code>g.game.localRandom</code></td><td style="text-align:left;">プレイヤー間で独立</td><td style="text-align:left;">プレイヤー間で独立</td></tr><tr><td style="text-align:center;">共通乱数生成器</td><td style="text-align:left;">プレイヤー間で共通</td><td style="text-align:left;">N/A</td></tr></tbody></table></div>`,35);function h(m,g,u,F,v,k){const a=l("CaptionedFigure");return p(),o("div",null,[E,e(a,{caption:"画面サイズ 640x480 を指定して生成されたゲーム画面"},{default:t(()=>[y]),_:1}),d])}const q=n(i,[["render",h]]);export{C as __pageData,q as default};
