import{_ as a,o as e,c as o,Q as s}from"./chunks/framework.459ab1e9.js";const u=JSON.parse('{"title":"ゲームを公開する","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial/v2/7-export.md","filePath":"tutorial/v2/7-export.md"}'),t={name:"tutorial/v2/7-export.md"},p=s('<h1 id="ゲームを公開する" tabindex="-1">ゲームを公開する <a class="header-anchor" href="#ゲームを公開する" aria-label="Permalink to &quot;ゲームを公開する&quot;">​</a></h1><p>作成したゲームを動かす方法としては akashic-sandbox がありますが、 akashic-sandbox はデバッグ用にローカルな環境で動作させるためのツールです。ゲームを公開するには、ゲームがスタンドアロンで動作するように変換・出力する必要があります。</p><h2 id="スタンドアロン形式にエクスポート" tabindex="-1">スタンドアロン形式にエクスポート <a class="header-anchor" href="#スタンドアロン形式にエクスポート" aria-label="Permalink to &quot;スタンドアロン形式にエクスポート {#スタンドアロン形式にエクスポート}&quot;">​</a></h2><p><code>akashic</code>コマンドの<code>export</code>コマンドを利用します。コマンドは game.json ファイルのあるディレクトリで実行してください。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">akashic</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">html</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--magnify</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--output</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">../mygame</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">akashic</span><span style="color:#24292E;"> </span><span style="color:#032F62;">export</span><span style="color:#24292E;"> </span><span style="color:#032F62;">html</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--magnify</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--output</span><span style="color:#24292E;"> </span><span style="color:#032F62;">../mygame</span></span></code></pre></div><p>保存するディレクトリを<code>--output</code>オプションで指定します。ゲームのディレクトリ内部に保存するディレクトリを指定することはできません。この例のようにゲームのディレクトリの外を指定してください。</p><p><code>--magnify</code> を指定すると、Akashic のゲーム画面がブラウザのゲーム表示領域に合わせて拡大されます。指定しない場合、描画サイズは game.json に記述されたゲームサイズに固定されます。</p><p><code>--minify</code> を指定すると、JavaScript のコードをミニファイします。圧縮してファイルサイズを削減したいときに利用できます。</p><p><code>--bundle</code> を指定すると、JavaScript のコードを 1 ファイルにまとめてファイル数を削減します。ゲームに含まれるファイル数が多いときにファイルアクセス数を減らすことができます。</p><p>上の例では使っていませんが、 <code>--hash-filename</code> を指定すると、エクスポート内容のファイル名を難読化します。</p><h3 id="出力されるファイル" tabindex="-1">出力されるファイル <a class="header-anchor" href="#出力されるファイル" aria-label="Permalink to &quot;出力されるファイル&quot;">​</a></h3><p>エクスポートされるのは index.html と必要なアセットを含むディレクトリです。このディレクトリを適当な web サーバにアップロードし、ブラウザで index.html を閲覧するとゲームが動作します。index.html は iframe 要素で読み込むこともできます。</p><h2 id="export-for-nicolive" tabindex="-1">ニコニコ生放送で遊べるゲームとしてエクスポート <a class="header-anchor" href="#export-for-nicolive" aria-label="Permalink to &quot;ニコニコ生放送で遊べるゲームとしてエクスポート {#export-for-nicolive}&quot;">​</a></h2><p>Akashic Engine で作成したゲームはニコニコ生放送で遊ぶことができます。 この場合は専用のオプション <code>--nicolive</code> をつけて <code>akashic export zip</code> を実行する必要があります。</p><p>詳細は <a href="/shin-ichiba/">ニコ生ゲームを作ろう</a> をご覧ください。</p>',15),n=[p];function l(c,r,i,d,h,m){return e(),o("div",null,n)}const _=a(t,[["render",l]]);export{u as __pageData,_ as default};
