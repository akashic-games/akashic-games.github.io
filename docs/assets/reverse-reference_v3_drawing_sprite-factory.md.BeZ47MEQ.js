import{_ as a,c as e,I as n,a3 as s,o as t,E as h}from"./chunks/framework.B_s5ISUx.js";const _=JSON.parse('{"title":"エンティティやゲーム画面からスプライトを作る","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/drawing/sprite-factory.md","filePath":"reverse-reference/v3/drawing/sprite-factory.md"}'),p={name:"reverse-reference/v3/drawing/sprite-factory.md"},l=s(`<h1 id="エンティティやゲーム画面からスプライトを作る" tabindex="-1">エンティティやゲーム画面からスプライトを作る <a class="header-anchor" href="#エンティティやゲーム画面からスプライトを作る" aria-label="Permalink to &quot;エンティティやゲーム画面からスプライトを作る&quot;">​</a></h1><p>エンティティやゲーム画面からスプライトを作成するには <code>g.SpriteFactory＃</code> の関数 <code>createSpriteFromE()</code> や <code>createSpriteFromScene()</code>を利用します。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> group</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ scene: scene });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> red</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FilledRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 必要なプロパティ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> blue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FilledRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 必要なプロパティ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">group.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(red);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">group.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(blue);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// g.E を画像化</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sprite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.SpriteFactory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSpriteFromE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, group);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sprite.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 画像を2倍に拡大</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sprite);</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 現在のシーンを画像化</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sceneSprite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g.SpriteFactory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSpriteFromScene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene, scene);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sceneSprite.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 画像を 0.5 倍へ縮小</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scene.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sceneSprite);</span></span></code></pre></div><h2 id="利用例" tabindex="-1">利用例 <a class="header-anchor" href="#利用例" aria-label="Permalink to &quot;利用例&quot;">​</a></h2><p>次のコンテンツは、画面をクリック・タップした時のシーンの状態を右下に縮小した画像として表示します。</p>`,7),r=s('<h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p>エンティティの描画内容をもつスプライトを作成するには <code>g.SpriteFactory.createSpriteFromE()</code> を利用します。また、シーンの描画内容をスプライト化するには <code>g.SpriteFactory.createSpriteFromScene()</code> を利用します。</p><p>第三引数に <code>g.Camera2D</code> を渡すことにより、<code>g.Camera2D</code> に設定されたプロパティを反映させたスプライトを生成することができます。<code>g.Camera2D</code>　については<a href="/tutorial/v3/multiplay/camera.html">プレイヤーごとに異なる位置を表示する</a>や <a href="https://akashic-games.github.io/akashic-engine/v3/classes/Camera2D.html" target="_blank" rel="noreferrer">API リファレンス</a>を参照してください。</p><h2 id="関連情報" tabindex="-1">関連情報 <a class="header-anchor" href="#関連情報" aria-label="Permalink to &quot;関連情報&quot;">​</a></h2><ul><li><a href="https://akashic-games.github.io/akashic-engine/v3/classes/SpriteFactory.html" target="_blank" rel="noreferrer">API リファレンス</a></li></ul>',5);function k(d,c,o,E,g,y){const i=h("PlaygroundElement");return t(),e("div",null,[l,n(i,{gameJsonUri:"/snippets/reverse-reference/drawing/sprite-factory/game.json",width:600,height:400}),r])}const m=a(p,[["render",k]]);export{_ as __pageData,m as default};
