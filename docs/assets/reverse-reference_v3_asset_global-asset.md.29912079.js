import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.f1c0562b.js";const h=JSON.parse('{"title":"グローバルアセットを使う","description":"","frontmatter":{},"headers":[],"relativePath":"reverse-reference/v3/asset/global-asset.md","filePath":"reverse-reference/v3/asset/global-asset.md"}'),l={name:"reverse-reference/v3/asset/global-asset.md"},p=o(`<h1 id="グローバルアセットを使う" tabindex="-1">グローバルアセットを使う <a class="header-anchor" href="#グローバルアセットを使う" aria-label="Permalink to &quot;グローバルアセットを使う&quot;">​</a></h1><p>どのシーンでも利用できるアセットをグローバルアセットと呼びます。</p><h2 id="凡例" tabindex="-1">凡例 <a class="header-anchor" href="#凡例" aria-label="Permalink to &quot;凡例&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;player&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;image&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;width&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">63</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;height&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">53</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;path&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;image/player.png&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;global&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;player&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;image&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;width&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">63</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;height&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">53</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;path&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;image/player.png&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;global&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">player</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scene.asset.</span><span style="color:#B392F0;">getImage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;image/player.png&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// シーンの生成時に \`assetPaths\` プロパティに含めなくても利用できる</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">player</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scene.asset.</span><span style="color:#6F42C1;">getImage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;image/player.png&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// シーンの生成時に \`assetPaths\` プロパティに含めなくても利用できる</span></span></code></pre></div><h2 id="詳細" tabindex="-1">詳細 <a class="header-anchor" href="#詳細" aria-label="Permalink to &quot;詳細&quot;">​</a></h2><p>game.json に登録されたアセットに <code>&quot;global&quot;: true</code> プロパティが指定されている場合、そのアセットはグローバルアセットとして扱われます。 グローバルアセットはどのシーンでも取得できるアセットです。通常のアセットと異なり、シーンの生成時に <code>assetPaths</code> プロパティにアセットファイルパスやアセット ID を指定する必要はありません。</p>`,7),e=[p];function t(c,r,y,E,i,u){return a(),n("div",null,e)}const q=s(l,[["render",t]]);export{h as __pageData,q as default};
