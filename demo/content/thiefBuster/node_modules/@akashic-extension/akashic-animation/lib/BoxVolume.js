"use strict";
var AABB = require("./AABB");
var Vector2 = require("./Vector2");
var Size2 = require("./Size2");
/**
 * BoxVolume
 *
 * アタリ判定用矩形Volume。
 *
 * 実際にアタリ判定を行うときは `BoxVolume#matrix`,`origin` そして, `size` を用いてワールド座標系での領域を求める必要があります。
 */
var BoxVolume = (function () {
    function BoxVolume() {
        this.origin = new Vector2();
        this.size = new Size2();
        this.aabbFirst = false;
        this.dirty = true;
    }
    BoxVolume.prototype.aabb = function () {
        if (!this._aabb || this.dirty) {
            this.dirty = false;
            var points = []; // ! 実際は CommonOffsetがpushされる
            // TODO: 直す。multplyPointはtypoで廃止されるが、手元に新しいのがないのでこちらを使う。いまだけ
            points.push(this.matrix.multplyPoint(this.origin));
            points.push(this.matrix.multplyPoint(new Vector2(this.origin.x + this.size.width, this.origin.y)));
            points.push(this.matrix.multplyPoint(new Vector2(this.origin.x, this.origin.y + this.size.height)));
            points.push(this.matrix.multplyPoint(new Vector2(this.origin.x + this.size.width, this.origin.y + this.size.height)));
            // AABBの左上隅
            var lefttop_1 = new Vector2(Number.MAX_VALUE, Number.MAX_VALUE);
            // AABBの右下隅
            var rightbottom_1 = new Vector2(-Number.MAX_VALUE, -Number.MAX_VALUE);
            points.forEach(function (p) {
                if (p.x > rightbottom_1.x)
                    rightbottom_1.x = p.x;
                if (p.x < lefttop_1.x)
                    lefttop_1.x = p.x;
                if (p.y > rightbottom_1.y)
                    rightbottom_1.y = p.y;
                if (p.y < lefttop_1.y)
                    lefttop_1.y = p.y;
            });
            this._aabb = new AABB();
            this._aabb.origin.x = (lefttop_1.x + rightbottom_1.x) / 2;
            this._aabb.origin.y = (lefttop_1.y + rightbottom_1.y) / 2;
            this._aabb.extent.width = rightbottom_1.x - this._aabb.origin.x;
            this._aabb.extent.height = rightbottom_1.y - this._aabb.origin.y;
        }
        return this._aabb;
    };
    return BoxVolume;
}());
module.exports = BoxVolume;
