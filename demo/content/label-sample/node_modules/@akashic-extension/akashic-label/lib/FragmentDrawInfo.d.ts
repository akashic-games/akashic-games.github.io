import type * as rp from "./RubyParser";
/**
 * 行に含まれる描画要素のうち、1つを表すインターフェース定義。
 */
export declare type FragmentDrawInfo = StringDrawInfo | RubyFragmentDrawInfo;
/**
 * 行に含まれる文字列要素。
 */
export declare class StringDrawInfo {
    text: string;
    width: number;
    glyphs: g.Glyph[];
    constructor(text: string, width: number, glyphs: g.Glyph[]);
}
/**
 * 行に含まれるルビ要素。
 */
export declare class RubyFragmentDrawInfo {
    text: string;
    fragment: rp.RubyFragment;
    width: number;
    rbWidth: number;
    rtWidth: number;
    glyphs: g.Glyph[];
    rubyGlyphs: g.Glyph[];
    constructor(fragment: rp.RubyFragment, width: number, rbWidth: number, rtWidth: number, glyphs: g.Glyph[], rubyGlyphs: g.Glyph[]);
}
/**
 * `Label`の行単位の描画情報を表すインターフェース定義。
 */
export interface LineInfo {
    sourceText: string;
    width: number;
    height: number;
    minMinusOffsetY: number;
    surface: g.Surface;
    fragmentDrawInfoArray: FragmentDrawInfo[];
}
